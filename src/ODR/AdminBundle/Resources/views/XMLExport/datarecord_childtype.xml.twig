{% macro input(
    datatype_array,
    datarecord_array,
    target_datatype_id,
    parent_datarecord_id,
    is_top_level,
    using_metadata,
    baseurl,
    version,
    show_records)
%}

{% spaceless %}

{% set datatype = datatype_array[target_datatype_id] %}

{# all lists of datarecords are wrapped...top-level wrapper taken care of in datarecord_ajax.xml.twig #}
{% if is_top_level == 0 %}
<records>
{% endif %}

{% for dr_id, datarecord in datarecord_array %}

    {# each datarecord is its own object #}
    <record>

        <database_uuid>{{ datatype.unique_id }}</database_uuid>
        <database_name>{{ datatype.dataTypeMeta.shortName }}</database_name>
        {% set master_datatype_unique_id = "" %}
        {% if datatype.masterDataType is not null %}
            {% set master_datatype_unique_id = datatype.masterDataType.unique_id %}
        {% endif %}
        <template_uuid>{{ master_datatype_unique_id }}</template_uuid>
{#
        {% set metadata_datatype_unique_id = "" %}
        {% if datatype.metadata_datatype is not null %}
            {% set metadata_datatype_unique_id = datatype.metadata_datatype.unique_id %}
        {% endif %}
        <metadata_uuid>{{ metadata_datatype_unique_id }}</metadata_uuid>
#}
        {% set metadata_for_unique_id = "" %}
        {% if datatype.metadata_for is not null %}
            {% set metadata_for_unique_id = datatype.metadata_for.unique_id %}
        {% endif %}
        <metadata_for_uuid>{{ metadata_for_unique_id }}</metadata_for_uuid>

        <internal_id>{{ datarecord.id }}</internal_id>
        <record_uuid>{{ datarecord.unique_id }}</record_uuid>
        <external_id>{{ datarecord.externalIdField_value|xml }}</external_id>
        <record_name>{{ datarecord.nameField_value|xml }}</record_name>

    {% if using_metadata == true %}
        {# display metadata and datafields for top-level and child datarecords #}
        <_record_metadata>
            <_create_date>{{ datarecord.created|date('Y-m-d H:i:s') }}</_create_date>
            <_create_auth>{% if datarecord.createdBy != '' %}{{ datarecord.createdBy|user_string|xml }}{% endif %}</_create_auth>
            <_update_date>{{ datarecord.updated|date('Y-m-d H:i:s') }}</_update_date>
            <_update_auth>{% if datarecord.updatedBy != '' %}{{ datarecord.updatedBy|user_string|xml }}{% endif %}</_update_auth>
            <_public_date>{{ datarecord.dataRecordMeta.publicDate|date('Y-m-d H:i:s') }}</_public_date>
        </_record_metadata>
    {% endif %}

        <fields>
        {% for df_id, df in datatype.dataFields %}
            {% if df.dataFieldMeta.fieldType.typeName != "Markdown" %}
                {% include 'ODRAdminBundle:XMLExport:datarecord_datafield.xml.twig' with {
                    'datarecord': datarecord,
                    'datafield': df,
                    'using_metadata': using_metadata,
                    'baseurl': baseurl,
                    'version': version,
                } %}
            {% endif %}
        {% endfor %}
        </fields>

        <records>
        {% import "ODRAdminBundle:XMLExport:datarecord_childtype.xml.twig" as mychildform %}
        {% for child_datatype_id, child_records in datarecord.children %}
            {% set datatype_array_subset = datatype['descendants'][child_datatype_id]['datatype'] %}

            {% if datatype_array_subset[child_datatype_id] is defined %}
                {% set child_is_top_level = 0 %}
                {#{% set is_link = datatype['descendants'][child_datatype_id]['is_link'] %}#}

                {{ mychildform.input(
                    datatype_array_subset,
                    child_records,
                    child_datatype_id,
                    dr_id,
                    child_is_top_level,
                    using_metadata,
                    baseurl,
                    version,
                    show_records)
                }}
            {% endif %}
        {% endfor %}
        </records>

    {# each datarecord is its own object #}
    </record>

{% endfor %}

{# all lists of datarecords are wrapped...top-level wrapper taken care of in datarecord_ajax.xml.twig #}
{% if is_top_level == 0 %}
</records>
{% endif %}

{% endspaceless %}

{% endmacro %}
