{% macro input(
    datatype_array,
    datarecord_array,
    target_datatype_id,
    parent_datarecord_id,
    is_top_level,
    using_metadata,
    baseurl,
    version,
    show_records)
%}

{% set datatype = datatype_array[target_datatype_id] %}

{% for dr_id, datarecord in datarecord_array %}

    {# each datarecord is its own JSON object #}
    {
    {# ---------- #}

        "database_uuid": "{{ datatype.unique_id }}",
        "database_name": "{{ datatype.dataTypeMeta.shortName }}",
    {% if datatype.masterDataType is not null %}
        "template_uuid": "{{ datatype.masterDataType.unique_id }}",
    {% else %}
        "template_uuid": "",
    {% endif %}
{#
    {% if datatype.metadata_datatype is not null %}
        "metadata_uuid": "{{ datatype.metadata_datatype.unique_id }}",
    {% else %}
        "metadata_uuid": "",
    {% endif %}
#}
    {% if datatype.metadata_for is not null %}
        "metadata_for_uuid": "{{ datatype.metadata_for.unique_id }}",
    {% else %}
        "metadata_for_uuid": "",
    {% endif %}

        "internal_id": {{ datarecord.id }},
        "record_uuid": "{{ datarecord.unique_id }}",
        "external_id": {{ datarecord.externalIdField_value|json_encode|raw }},   {# lack of surrounding quotation marks necessary #}
        "record_name": {{ datarecord.nameField_value|json_encode|raw }},   {# lack of surrounding quotation marks necessary #}

    {% if using_metadata == true %}
        "_record_metadata": {
            "_create_date": "{{ datarecord.created|date('Y-m-d H:i:s') }}",
            "_create_auth": "{% if datarecord.createdBy != '' %}{{ datarecord.createdBy|user_string|xml }}{% endif %}",
            "_update_date": "{{ datarecord.updated|date('Y-m-d H:i:s') }}",
            "_update_auth": "{% if datarecord.updatedBy != '' %}{{ datarecord.updatedBy|user_string|xml }}{% endif %}",
            "_public_date": "{{ datarecord.dataRecordMeta.publicDate|date('Y-m-d H:i:s') }}"
        },
    {% endif %}

        "fields": [
        {% for df_id, df in datatype.dataFields %}
            {% if df.dataFieldMeta.fieldType.typeName != "Markdown" %}
            {
                {% include 'ODRAdminBundle:XMLExport:datarecord_datafield.json.twig' with {
                    'datarecord': datarecord,
                    'datafield': df,
                    'using_metadata': using_metadata,
                    'baseurl': baseurl,
                    'version': version,
                } %}
            }{% if not loop.last %},{% endif %}
            {% endif %}
        {% endfor %}
        ],

        "records": [
            {% import "ODRAdminBundle:XMLExport:datarecord_childtype.json.twig" as mychildform %}
            {% for child_datatype_id, child_records in datarecord.children %}
                {% set datatype_array_subset = datatype['descendants'][child_datatype_id]['datatype'] %}

                {% if datatype_array_subset[child_datatype_id] is defined %}
                    {% set is_top_level = 0 %}
                    {#{% set is_link = datatype['descendants'][child_datatype_id]['is_link'] %}#}

                    {{ mychildform.input(
                        datatype_array_subset,
                        child_records,
                        child_datatype_id,
                        dr_id,
                        is_top_level,
                        using_metadata,
                        baseurl,
                        version,
                        show_records)
                    }}
                {% endif %}
            {% endfor %}
        ]

    {# each datarecord is its own JSON object #}
    },    {# have to always put a comma because of the possibility of multiple child datatypes #}
    {# ---------- #}

{% endfor %}

{% endmacro %}
