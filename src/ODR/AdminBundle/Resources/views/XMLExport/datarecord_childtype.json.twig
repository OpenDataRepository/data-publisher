{% macro input(
    datarecord_array,
    is_top_level,
    using_metadata,
    baseurl,
    version,
    show_records
    ) %}

{# all lists of datarecords are wrapped in an array structure #}
{% for dr_id, datarecord in datarecord_array %}
    {% if not datarecord.id is defined and dr_id is not null %}
        {% for dr_id, datarecord in datarecord %}
        {
            {#"database_name": {{ datatype.dataTypeMeta.shortName|json_encode|raw }}, #}
            "database_uuid": "{{ datarecord.dataType.unique_id }}",
    "internal_id": {{ datarecord.id }},
    "record_name": {{ datarecord.nameField_value|json_encode|raw }},   {# lack of surrounding quotation marks necessary #}
    "record_uuid": "{{ datarecord.unique_id }}",
    {% if datarecord.dataType.masterDataType %}
    "template_uuid": "{{ datarecord.dataType.masterDataType.unique_id }}",
    {% else %}
    "template_uuid": "",
    {% endif %}
    {% if datarecord.dataType.metadata_for %}
    "metadata_for_uuid": "{{ datarecord.dataType.metadata_for.unique_id }}",
    {% else %}
    "metadata_for_uuid": "",
    {% endif %}
    {% if using_metadata == true %}
    {# display metadata and datafields for top-level and child datarecords #}
    "_record_metadata": {
        "_create_date": "{{ datarecord.created|date('Y-m-d H:i:s') }}",
        "_create_auth": "{% if datarecord.createdBy != '' %}{{ datarecord.createdBy|user_string|xml }}{% endif %}",
        "_public_date": "{{ datarecord.dataRecordMeta.publicDate|date('Y-m-d H:i:s') }}"
    },
    {% endif %}

    {# Fields #}
    "fields": [
        {% for dt_datafield in datarecord.dataType.dataFields %}
            {% set comma = true %}
            {% set found = false %}
            {% for datafield in datarecord.dataRecordFields %}
                {% if datafield.dataField.id == dt_datafield.id  %}
                    {% if datafield.dataField.dataFieldMeta.fieldType.typeName != "Markdown" %}
                    {% include 'ODRAdminBundle:XMLExport:datarecord_datafield.json.twig' with {
                        'datarecord': datarecord,
                        'datafield': datafield,
                        'using_metadata': using_metadata,
                        'baseurl': baseurl,
                        'version': version,
                    } %}
                    {% set found = true %}
                    {% else %}
                        {% set comma = false %}
                    {% endif %}
                {% endif %}
            {% endfor %}
            {% if not found %}
                {% if dt_datafield.dataFieldMeta[0].fieldType.typeName != "Markdown" %}
                {% include 'ODRAdminBundle:XMLExport:datarecord_datafield.json.twig' with {
                    'datarecord': datarecord,
                    'datafield': dt_datafield,
                    'using_metadata': using_metadata,
                    'baseurl': baseurl,
                    'version': version,
                } %}
                {% else %}
                    {% set comma = false %}
                {% endif %}
            {% endif %}
            {% if comma %}
                {% if not loop.last %},{% endif %}
            {% endif %}
        {% endfor %}
    ],
    "records": [
        {# Check for Children #}
        {% import "ODRAdminBundle:XMLExport:datarecord_childtype.json.twig" as mychildform %}
        {% set show_records = 1 %}
        {{ mychildform.input(
            datarecord.children,
            is_top_level,
            using_metadata,
            baseurl,
            version,
            show_records
        ) }}
    ]
}
{% if not loop.last %},{% endif %}
{% endfor %}
{% else %}
    {
        {#"database_name": {{ datatype.dataTypeMeta.shortName|json_encode|raw }}, #}
        "database_uuid": "{{ datarecord.dataType.unique_id }}",
        "internal_id": {{ datarecord.id }},
        "external_id": {{ datarecord.externalIdField_value|json_encode|raw }},   {# lack of surrounding quotation marks necessary #}
        "record_name": {{ datarecord.nameField_value|json_encode|raw }},   {# lack of surrounding quotation marks necessary #}
        "record_uuid": "{{ datarecord.unique_id }}",
        {% if datarecord.dataType.masterDataType %}
            "template_uuid": "{{ datarecord.dataType.masterDataType.unique_id }}",
        {% else %}
            "template_uuid": "",
        {% endif %}
        {% if datarecord.dataType.metadata_for %}
            "metadata_for_uuid": "{{ datarecord.dataType.metadata_for.unique_id }}",
        {% else %}
            "metadata_for_uuid": "",
        {% endif %}
        {% if using_metadata == true %}
            {# display metadata and datafields for top-level and child datarecords #}
            "_record_metadata": {
                "_create_date": "{{ datarecord.created|date('Y-m-d H:i:s') }}",
                "_create_auth": "{% if datarecord.createdBy != '' %}{{ datarecord.createdBy|user_string|xml }}{% endif %}",
                "_public_date": "{{ datarecord.dataRecordMeta.publicDate|date('Y-m-d H:i:s') }}"
            },
        {% endif %}

        {# Fields #}
        "fields": [
{% for dt_datafield in datarecord.dataType.dataFields %}
{% set comma = true %}
{% set found = false %}
{% for datafield in datarecord.dataRecordFields %}
{% if datafield.dataField.id == dt_datafield.id  %}
{% if datafield.dataField.dataFieldMeta.fieldType.typeName != "Markdown" %}
{% include 'ODRAdminBundle:XMLExport:datarecord_datafield.json.twig' with {
    'datarecord': datarecord,
    'datafield': datafield,
    'using_metadata': using_metadata,
    'baseurl': baseurl,
    'version': version,
} %}
{% set found = true %}
{% else %}
{% set comma = false %}
{% endif %}
{% endif %}
{% endfor %}
{% if not found %}
{% if dt_datafield.dataFieldMeta[0].fieldType.typeName != "Markdown" %}
{% include 'ODRAdminBundle:XMLExport:datarecord_datafield.json.twig' with {
    'datarecord': datarecord,
    'datafield': dt_datafield,
    'using_metadata': using_metadata,
    'baseurl': baseurl,
    'version': version,
} %}
{% else %}
{% set comma = false %}
{% endif %}
{% endif %}
{% if comma %}
{% if not loop.last %},{% endif %}
{% endif %}
{% endfor %}
        ],
        "records": [
            {# Check for Children #}
            {% import "ODRAdminBundle:XMLExport:datarecord_childtype.json.twig" as mychildform %}
            {% set show_records = 1 %}
            {{ mychildform.input(
                datarecord.children,
                is_top_level,
                using_metadata,
                baseurl,
                version,
                show_records
            ) }}
        ]
    }
{% endif %}
{% if not loop.last %},{% endif %}
{% endfor %}
{% endmacro %}

