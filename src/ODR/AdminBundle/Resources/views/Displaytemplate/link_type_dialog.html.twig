{% spaceless %}
	<!-- Link DataType Dialog -->
	<div class="pure-form pure-g" style="display: none;" id="dialog_link_datatype" title="Link Data Type">
        <div class="form_contents pure-u-1">
        </div>
	</div><!-- End of #dialog_link_datatype -->

	
	<script>

    function LinkDataTypeFormInit() {
        // Initialize the form
/*
        $("#dialog_link_datatype .submit").unbind('click');
        $("#dialog_link_datatype .submit").click(function() {
            $("#LinkDatatypeForm").submit();
        });
*/
//        $("#LinkDatatypeForm").validationOptions({
        $("#LinkDatatypeForm").validate({
            submitHandler: function(form) {
                var data = $(form).serialize();
                var url = $(form).attr('action');
//alert( url );
//return;

                var dataType = "json";
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: data,
                    dataType: dataType,
                    success: function(data, textStatus, jqXHR) {
                        if(data.r == 0) {
                            // Reload ThemeElement
                            var linked_datatype_id = data.d.linked_datatype_id;
                            var theme_element_id = data.d.element_id;
//                            ReloadThemeElement(theme_element_id);

//                            var icons = {};
                            if (data.d.using_linked_type == 1) {  // there is now a linked datatype in this theme element
//                                icons = {"ODRAddDatafield": 0, "ODRAddChildtype": 0, "ODRDeleteThemeElement": 0};   // mute the other icons
                                ReloadThemeElement(theme_element_id);   // need the entire linked type in there, this'll mute icons too
                            }
                            else {
                                // Delete the removed linked datatype html
                                $("#DataType_" + linked_datatype_id).remove();

                                // Unmute the other icons
                                var icons = {"ODRAddDatafield": 1, "ODRAddChildtype": 1, "ODRDeleteThemeElement": 1, "ODRLinkDatatype": 1};
                                setThemeElementIcons(theme_element_id, icons);
                            }

                        }
                        else {
                            // An error has occurred.
                            // Show Error message dialog
                            if (data.t == 'html')
                                alert(data.d.html);
                            else
                                alert(data.d);
                        }

                        $("#dialog_link_datatype").dialog('close');
                    },
                    complete: function(jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {
                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                        }
                    }
                });
            },
            invalidHandler: function() {
                // Custom invalid message here if needed
            }
        });

{#
        // - Validate
        $("#LinkDatatypeForm").validate({
            submitHandler: function(form){
                $(this).data('submit') ? $(this).data('submit')() : form.submit();
            }
        });
#}
    }

	</script>
{% endspaceless %}
