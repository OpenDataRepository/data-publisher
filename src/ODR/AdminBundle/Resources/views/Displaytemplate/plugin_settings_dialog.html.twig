{% spaceless %}

<!-- Plugin Settings Dialog -->
<div class="pure-form pure-g" style="display: none;" id="dialog_plugin_settings" title="Render Plugin Settings">
    <div class="form_contents pure-u-1">
    </div>
</div><!-- End #dialog_plugin_settings -->
	
<script>

    function PluginSettingsFormInit() {

        $("#PluginSettingsForm").validationOptions({
            submitHandler: function(form){
                var data = $(form).serialize();
                var url = $(form).attr('action');
                var dataType = "json";
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: data,
                    dataType: dataType,
                    success: function(data, textStatus, jqXHR) {
                        if(data.r == 0) {
                            switch(data.t) {
                                case 'html':
                                    // Ensure that render plugin info doesn't get screwed up if user modifies some other datafield or datatype property after setting render plugin
                                    var datafield_id = data.d.datafield_id;
                                    var datatype_id = data.d.datatype_id;
                                    $("#ElementData").html('');
                                    if (datafield_id != 0) {
                                        // This is a render plugin for a datatype
//                                        ReloadDatafield(datafield_id);

                                        /* do nothing */
                                    }
                                    else {
                                        // This is a render plugin for a datatype
                                        var reload_datatype = data.d.reload_datatype;
                                        if ( reload_datatype ) {
                                            ReloadChild(datatype_id);
                                        }
                                        else {

                                            var icons = {};
                                            if (data.d.render_plugin_id == 1)   // set to default render plugin
                                                icons = {"ODRRenderPlugin": 0};
                                            else
                                                icons = {"ODRRenderPlugin": data.d.render_plugin_name};    // highlight to notify a render plugin is being used, and copy name of plugin to title attribute

                                            setDatatypeIcons(datatype_id, icons);
                                        }
                                    }
//                                    initPage();
                                break;
                            }
                        }
                        else {
                            // An error has occurred.
                            // Show Error message dialog
                            alert(data.d);
                        }

                        $("#dialog_plugin_settings").dialog('close');
                    },
                    complete: function(jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {
                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                        }
                    }
                });
            },
            invalidHandler: function(){
                // Custom invalid message here if needed
            }
        });

        // - Validate
        $("#PluginSettingsForm").validate({
            submitHandler: function(form){
                $(this).data('submit') ? $(this).data('submit')() : form.submit();
            }
        });
    }

</script>
<!--  End of Plugin Settings Dialog -->

{% endspaceless %}
