{% spaceless %}

    <!-- Plugin Settings Dialog Form -->

<script>

    var plugin_dialog_body = '<div id="ODRRenderPluginFormWrapper" class="Hide"> </div>';

    function openPluginSettingsDialog(datafield_id, datatype_id) {
        // open dialog
        modal_options = {
            title: 'Render Plugin settings',
            loading: true,
            body: plugin_dialog_body,
            buttons: [
                {
                    id: 'ODRRenderPluginFormSubmit',
                    text: 'Save Render Plugin Settings',
                    // secondary: true,
                    disabled: false
                }
            ]
        };
        openODRRemodal(modal_options);

        loadPluginData(datafield_id, datatype_id);
    }

    function loadPluginData(datafield_id, datatype_id) {

        var url  = '{{ path('odr_render_plugin_dialog', {'datatype_id': 0, 'datafield_id': 0 } ) }}';
        url = url.substring(0,(url.length - 3));
        url += datatype_id + '/' + datafield_id;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data) {
                $("#ODRRenderPluginFormWrapper").html( data.d.html );

                // remove loading spinner
                $(".ODRRemodalLoading").fadeOut('150', function() {
                    $(".ODRRemodalBody").show();
                    $(".ODRRemodalButtons").show();
                    $("#ODRRenderPluginFormWrapper").show();

                    // Resize ODRFileDownloadModal to take up full height
                    resetRemodalInnerHeight();

                    // Setup submit handler
                    $('#ODRRenderPluginFormSubmit').unbind('click').click(function() {
                        submitRenderPluginForm();
                    });
                });
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Close the dialog so it's not in some half-initialized state
                closeODRRemodal();
            },
            complete: function(jqXHR) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }


    function submitRenderPluginForm() {

        var data = $('#ODRRenderPluginSettingsForm').serialize();
        var url = $('#ODRRenderPluginSettingsForm').attr('action');

        $.ajax({
            type: 'POST',
            url: url,
            data: data,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                // Ensure that render plugin info doesn't get screwed up if user modifies some other datafield or datatype property after setting render plugin
                var datafield_id = data.d.datafield_id;
                var datatype_id = data.d.datatype_id;

                if (datafield_id != 0) {
                    // This is a render plugin for a datatype...don't need to reload technically, but reloading indicates saving is done
                    ReloadDatafield(datafield_id);
                }
                else {
                    // This is a render plugin for a datatype
                    var reload_datatype = data.d.reload_datatype;
                    if ( reload_datatype ) {
                        ReloadChild(datatype_id);
                    }
                    else {
                        var icons = {};
                        if (data.d.render_plugin_id == 1)   // set to default render plugin
                            icons = {"ODRRenderPlugin": 0};
                        else
                            icons = {"ODRRenderPlugin": data.d.render_plugin_name};    // highlight to notify a render plugin is being used, and copy name of plugin to title attribute
                        setDatatypeIcons(datatype_id, icons);
                    }
                }

                closeODRRemodal();
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Don't need to do anything specific on an error
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

</script>
<!--  End of Plugin Settings Dialog -->

{% endspaceless %}
