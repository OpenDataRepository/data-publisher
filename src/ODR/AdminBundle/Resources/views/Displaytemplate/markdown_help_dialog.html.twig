{% spaceless %}

<script>
    /**
     * Opens ODR's modal to display a couple pages of Markdown syntax help.
     */
    function openMarkdownHelpDialog() {
        /** @type {odr_remodal_options} modal_options */
        var modal_options = {
            title: 'Markdown Help',
        };
        openODRRemodal(modal_options);

        var url  = '{{ path('odr_markdown_help_dialog') }}';

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data) {
                updateODRRemodalBody(data.d.html);

                setupMarkdownTabs();
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Close the dialog so it's not in some half-initialized state
                closeODRRemodal();
            },
            complete: function(jqXHR) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    /**
     * Applies the markdown parser to the relevant parts of the help dialog.
     */
    function setupMarkdownTabs() {
        //
        var markdown_header_buttons = $("#ODRMarkdown_tabheader > .ODRTabButton");
        var markdown_help_contents = $("#ODRMarkdown_content > .ODRFieldArea");

        // Apply the markdown plugin
        var md = window.markdownit();
        md.disable(['table', 'strikethrough', 'blockquote']);

        $(".ODRMarkdown_source").each(function() {
            var pieces = $(this).attr('id').split(/_/);
            var dest_id = '#' + pieces[0] + '_' + pieces[1] + '_result';

            var markdown_text = md.render( $(this).val() );
            $(dest_id).html(markdown_text);
        });

        // Attach click handlers to the tab buttons
        markdown_header_buttons.each(function() {
            $(this).unbind('click').click(function() {

                var header = $(this).attr('rel');

                if ( $("#ODRMarkdown_" + header).hasClass('ODRHidden') ) {
                    //
                    $(markdown_help_contents).addClass('ODRHidden');
                    $("#ODRMarkdown_" + header).removeClass('ODRHidden');

                    //
                    $(markdown_header_buttons).removeClass('pure-button-active');
                    $(this).addClass('pure-button-active');
                }
            })
        });

        // Do the initial selection
        $(markdown_help_contents).addClass('ODRHidden');
        $(markdown_header_buttons).first().trigger('click');
    }
</script>

{% endspaceless %}
