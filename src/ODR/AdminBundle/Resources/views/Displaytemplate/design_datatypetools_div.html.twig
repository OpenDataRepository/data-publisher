{% spaceless %}

{% set datatype_id = datatype.id %}
{% set datatype_meta = datatype.dataTypeMeta %}

{# Convert this to JSON Data so we can use it in the toolbox #}
<script>
    if ( datatype_properties === undefined || datatype_properties === null )
        var datatype_properties = new Map();

    if ( !datatype_properties.has({{ datatype_id }}) )
        datatype_properties.set({{ datatype_id }}, new Map());
    var dt_props = datatype_properties.get({{ datatype_id }});

    {# IMPORTANT: a linked descendant datatype that appears multiple times on the page has multiple
        themes...one for each instance.  Can't get away with a single theme_id. #}
    if ( !dt_props.has('theme_ids') )
        dt_props.set('theme_ids', new Map());
    dt_theme_ids = dt_props.get('theme_ids');
    dt_theme_ids.set({{ containing_theme_element_id }}, {{ theme_id }});

    {# this value is not guaranteed to be true for linked datatypes... #}
    dt_props.set('is_datatype_admin', {% if is_datatype_admin %}true{% else %}false{% endif %});

    dt_props.set('is_top_level', {% if is_top_level %}true{% else %}false{% endif %});
    dt_props.set('is_link', {% if is_link %}true{% else %}false{% endif %});
    dt_props.set('is_public', {% if datatype_meta.publicDate|is_public  %}true{% else %}false{% endif %});

    {#console.log('datatype {{ datatype_id }}', $("#DataType_{{ datatype_id }}"), datatype_properties.get({{ datatype_id }}));#}
</script>
{% endspaceless %}
