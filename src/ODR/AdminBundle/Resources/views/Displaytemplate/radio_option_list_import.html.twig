{% spaceless %}

{#{% set typename = datafield.getfieldtype.gettypename %}#}

<div class="pure-g pure-u-1">
    <div class="pure-u-1 ODRRadioOptionListWrapper">
        <form id="ODRRadioOptionsListForm" class="pure-form" rel="{{ datafield.id }}">
            <input type="hidden" id="datafield_{{ datafield.id }}_name_sort" value="{% if datafield.getradiooptionnamesort == true %}1{% else %}0{% endif %}" />
            <fieldset>
                <table class="ODRRadioOptionListImport pure-table pure-table-striped pure-u-1">
                    <thead>
                    <tr>
                        <th>Options (one per line)</th>
                    </tr>
                    </thead>
                    <tbody class="ODRSortableOption" rel="{{ datafield.id }}">
                    <tr>
                        <td>
                            <textarea name="radio_option_list"></textarea>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </fieldset>
        </form>
    </div>
    <div class="pure-u-1">
        <button class="ODRAddRadioOptionFromList pure-button pure-button-primary" type="button" rel="{{ datafield.id }}">Add Option(s)</button>
    </div>
</div>

    <script>
        $(function() {
            $(".ODRAddRadioOptionFromList").unbind('click').click(function() {
                // Disable button
                $(this).attr('disabled', 'disabled');
                SaveRadioOptionFromList($(this).attr('rel'));
            });
        });

    if (SaveRadioOptionFromList === undefined) {
        function SaveRadioOptionFromList(datafield_id) {

            var url = '{{ path('odr_design_save_radio_option_list', { 'datafield_id': 0 } ) }}';
            url = url.substring(0, (url.length - 1));
            url += datafield_id;

            var post_data = $("#ODRRadioOptionsListForm").serialize();

            // Hide the form
            var str =
                '<div class="ODRRemodalLoading pure-u-1">' +
                    '<div class="loading-container">' +
                        '<div class="loading"></div>' +
                        '<div class="loading-text">loading</div>' +
                    '</div>' +
                '</div>';
            $("#ThemeDesignForm").html(str);

            $.ajax({
                type: 'POST',
                url: url,
                dataType: "json",
                data: post_data,
                success: function(data) {
                    ReloadDatafield(datafield_id);

                    // Forcibly reload object properties panel
                    $("#ThemeDesignForm").html("");
                    $("#Field_" + datafield_id).trigger('click');
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    // Forcibly reload object properties panel
                    $("#Field_" + datafield_id).trigger('click');
                    $("#ThemeDesignForm").html("");
                },
                complete: function(jqXHR) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }

                    save_datafield_xhr = null;
                }
            });
        }
    }
    </script>
{% endspaceless %}
