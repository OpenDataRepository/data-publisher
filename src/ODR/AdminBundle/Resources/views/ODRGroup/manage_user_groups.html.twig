{% spaceless %}

<h2>
    <span id="ODRUserGroup_username">Group Membership for "{{ target_user.getuserstring }}"</span>
</h2>

<div class="pure-u-1" style="padding-bottom: 10px;">
    <button id="ODRUserGroup_toggle" class="pure-button pure-button-primary">Switch to Templates</button>
</div>

{% include 'ODRAdminBundle:ODRGroup:manage_user_groups_table.html.twig' with {
    'datatypes': datatypes,
    'dt_name_lookup': dt_name_lookup,

    'user_group_list': user_group_list,
    'user_datatype_group_membership': user_datatype_group_membership,

    'id': 'ODRDatatypeList',
    'key': 'Datatype',
    'hidden': false
} %}

{% include 'ODRAdminBundle:ODRGroup:manage_user_groups_table.html.twig' with {
    'datatypes': templates,
    'dt_name_lookup': dt_name_lookup,

    'user_group_list': user_group_list,
    'user_datatype_group_membership': user_datatype_group_membership,

    'id': 'ODRTemplateList',
    'key': 'Template',
    'hidden': true
} %}

<script>
    $(function() {
        disableSearchSidebar();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}

        $("#ODRUserGroup_toggle").unbind('click').click(function() {
            if ( $("#ODRDatatypeList_wrapper").hasClass('ODRHidden') ) {
                $("#ODRDatatypeList_wrapper").removeClass('ODRHidden');
                $("#ODRTemplateList_wrapper").addClass('ODRHidden');

                $("#ODRUserGroup_toggle").html('Switch to Templates');
            }
            else {
                $("#ODRDatatypeList_wrapper").addClass('ODRHidden');
                $("#ODRTemplateList_wrapper").removeClass('ODRHidden');

                $("#ODRUserGroup_toggle").html('Switch to Databases');
            }

            // Also need to hide any of the open divs on the right side of the page
            $(".ODRGroupList").addClass('ODRHidden');
            $(".fa-caret-right").removeClass('fa-caret-right').addClass('fa-caret-down ODRGrayIcon');
        });

        $(".ODRListExpand").unbind('click').click(function() {
            // If clicking an already open group list, don't run the block that will open it again
            var already_open = false;
            if ( $(this).children("i").hasClass('fa-caret-right') )
                already_open = true;

            // Hide any open group lists and reset the caret that indicates it's open
            $(".ODRListExpand").children(".fa-caret-right").each(function() {   // should only return one
                var row_num = $(this).attr('rel');
                $("#datatype_groups_" + row_num).addClass('ODRHidden');

                $(this).removeClass('fa-caret-right').addClass('fa-caret-down ODRGrayIcon');
            });

            if ( !already_open ) {
                // If a group list wasn't open...then open it, and mark this row as selected
                openGroupList( $(this) );
                selected_row = $(this);
            }
            else {
                // If a group list was already open, it has since been closed...therefore there's
                //  no selected row right now
                selected_row = null;
            }
        });

        $(".ODRGroupEdit").unbind('click').click(function() {

            var datatype_id = $(this).parent().attr('rel');

            var url = '{{ path('odr_manage_groups', { 'datatype_id': 0 }) }}';
            url = url.substring(0, (url.length - 1));
            url += datatype_id;

            // alert(url);  return;

            UpdateURL(url);
        });

        $(".ODREffectivePermissions").unbind('click').click(function() {

            var datatype_id = $(this).parent().attr('rel');
            var user_id = $(this).attr('rel');

            var url = '{{ path('odr_view_effective_permissions', { 'user_id': 0, 'datatype_id': 0 }) }}';
            url = url.substring(0, (url.length - 3));
            url += user_id + '/' + datatype_id;

            // alert(url);  return;

            UpdateURL(url);
        });

        $(".ODRGroupCheckbox").unbind('click').click(function() {

            var id_data = $(this).attr('id').split(/_/);
            var user_id = id_data[1];
            var group_id = id_data[2];

            var element = $(this);
            var value = 0;
            if ( $(element).is(':checked') )
                value = 1;

            var url = '{{ path('odr_change_user_group', {'user_id': 0, 'group_id': 0, 'value': 0}) }}';
            url = url.substring(0, (url.length - 5));
            url += user_id + '/' + group_id + '/' + value;

            // alert(url);  return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: 'json',
                success: function(data, textStatus, jqXHR) {
                    if ( value === 1 && $(element).hasClass('ODRDefaultGroupCheckbox') ) {
                        // Set all other default group checkboxes to false
                        $(element).parent().parent().find('.ODRDefaultGroupCheckbox').each(function() {
                            $(this).prop('checked', false);
                        });
                        // Set this specific group checkbox to true
                        $(element).prop('checked', true);
                    }

                    var target = $("#in_datatype_" + data.datatype_id + "_group");
                    if (data.in_datatype_group === 1) {
                        $(target).addClass('fa-check');
                        $(target).children('span').html(1);
                    }
                    else {
                        $(target).removeClass('fa-check');
                        $(target).children('span').html(0);
                    }

                    notifySaved();
                    // Delete the sort order that datatables cached so sorting works afterwards
                    $("#ODRDatatypeList").DataTable().rows().invalidate();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    // Change the checkbox that triggered this event back to its original state
                    if ( value === 1 )
                        $(element).prop('checked', false);
                    else
                        $(element).prop('checked', true);
                },
                complete: function (jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                    }
                }
            });
        });

        $('#ODRHelpButton').unbind('click').click(function() {
            ODRUserGroup_startIntroJS();
        });

        // NOTE - the 'draw.dt' event for dataTables.js only executes when something is typed in the
        //  search filter, since the table already "exists" on the page when dataTables is initialized.
        // Therefore, need to also initialize introJS after page load
        ODRUserGroup_setupIntroJS();
    });

    /**
     * Opens and aligns the list of groups for the selected database.
     * @param {HTMLElement} element
     */
    function openGroupList(element) {
        // Going to need these three numbers to determine where to put the group list div
        var table_offset = $("#ODRDatatypeList_wrapper").offset().top;
        var table_height = $("#ODRDatatypeList_wrapper").height();
        var offset_top = $(element).parent().offset().top - 15;

        // Open the selected datarecord list
        $(element).children("i").each(function() {     // should only return one
            var row_num = $(this).attr('rel');
            $(this).removeClass('fa-caret-down ODRGrayIcon').addClass('fa-caret-right');

            // Determine height of the div displaying this datatype's groups
            var group_div = $("#datatype_groups_" + row_num);
            $(group_div).removeClass('ODRHidden');
            var group_div_height = $(group_div).height();

            var final_offset = offset_top;

            // If the height of the group div is less than the height of the datatype list table...
            if (table_height > group_div_height) {
                // ...adjust the offset so the bottom of the group div isn't below the bottom of the datatype list table
                if ((final_offset + group_div_height) > (table_offset + table_height))
                    final_offset = (table_offset + table_height) - group_div_height;
            }

            $(group_div).offset({ top: final_offset });
        });
    }

    /**
     * Some of the elements needed for the introJS tour don't exist when this page is first loaded,
     * so the setup needs to happen after a database has been selected.
     */
    function ODRUserGroup_setupIntroJS() {
        // Setup IntroJS Walkthrough
        $('#ODRHelpButton')
            .attr('data-step', '1')
            .attr('data-intro', 'Welcome to the ODR Help System.  This system will guide you through the features of this page.<br><br>For quicker navigation, use your left and right arrow keys to go through the tutorial.');

        $('#ODRUserGroup_username')
            .attr('data-step', '2')
            .attr('data-intro', 'This page allows you to change which databases an ODR user has permissions to.<br><br>All databases that you have admin permissions to are displayed the table on this page.');
        $('#ODRDatatypeList_filter')
            .attr('data-step', '3')
            .attr('data-intro', "If you know which database you're looking for, the table can be filtered by typing in this field.");

        var info_icon = $('.ODRDatatypeInfoDiv').first();
        var first_checkmark = $(info_icon).parent().next().next();
        var second_checkmark = $(first_checkmark).next();
        // $('tr.odd:nth-child(1) td:nth-child(2)')
        //     .attr('data-step', '4')
        //     .attr('data-intro', 'All databases that you have admin permissions to are displayed in this table.');
        $(info_icon)
            .attr('data-step', '5')
            .attr('data-intro', "Hovering over this icon brings up basic information about the database, in case you need more than just the name to identify the correct database.");
        $(first_checkmark)
            .attr('data-step', '6')
            .attr('data-intro', 'If the user already has permissions to the database, then a checkmark is displayed in this column.');
        $(second_checkmark)
            .attr('data-step', '7')
            .attr('data-intro', 'If the database is public, then a checkmark is displayed in this column.');
        // $('tr.odd:nth-child(1) td:nth-child(5)')
        $('.ODRListExpand').first()
            .attr('data-step', '8')
            .attr('data-intro', 'Clicking on this caret icon will display all available groups for the database.');

        $('.ODRGroupList').first().children('div:nth-child(1)').first()
            .attr('data-step', '9')
            .attr('data-intro', 'The four default groups for the database are always displayed here.<br><br>A user can only be a member of a single default group per database.');
        $('.ODRGroupList').first().children('div:nth-child(2)').first().children('span:nth-child(1)').first()
            .attr('data-step', '10')
            .attr('data-intro', 'Users in the "View" group are able to see public content, even if the database is non-public.  If the database is public, then adding users to this group is meaningless.');
        $('.ODRGroupList').first().children('div:nth-child(2)').first().children('span:nth-child(2)').first()
            .attr('data-step', '11')
            .attr('data-intro', 'Users in the "View All" group are able to see all content regardless of whether it is public or not.');
        $('.ODRGroupList').first().children('div:nth-child(2)').first().children('span:nth-child(3)').first()
            .attr('data-step', '12')
            .attr('data-intro', 'Users in the "Edit" group are able to view, add, edit, and delete all content in the database.  However, they cannot add/change/remove any fields or childtypes in the database.');
        $('.ODRGroupList').first().children('div:nth-child(2)').first().children('span:nth-child(4)').first()
            .attr('data-step', '13')
            .attr('data-intro', 'Users in the "Admin" group are able to make any change to the content, structure, and permissions of a database.<br><br>They can also delete it entirely, so be careful who you allow into this group.');

        $('.ODRGroupList').first().children('div:nth-child(4)').first()
            .attr('data-step', '14')
            .attr('data-intro', 'Any custom groups that have been defined for the database will be displayed here.<br><br>A user can be a member of any number of custom groups for a database.');

        $('.ODRGroupEdit').first()
            .attr('data-step', '15')
            .attr('data-intro', 'Clicking this button will take you to the page where you can modify or create Groups for this database.');
        $('.ODREffectivePermissions').first()
            .attr('data-step', '16')
            .attr('data-intro', 'Clicking this button will take you to a page where you can view exactly what the user will be able to see or edit for this database, if anything.<br><br>This is most useful when the user belongs to more than one group.');
    }

    /**
     * Begins the introJS tour for ODR's user group management page.
     */
    function ODRUserGroup_startIntroJS() {
        // Switch back to the database list if the template list is open
        if ( $("#ODRDatatypeList_wrapper").hasClass('ODRHidden') )
            $("#ODRUserGroup_toggle").trigger('click');

        // Ensure a group list is visible before starting the tour
        if ( $('.ODRGroupList').first().hasClass('ODRHidden') )
            $('.ODRListExpand').first().trigger('click');

        introJs().setOption("disableInteraction", true)
            .start();
    }
</script>
{% endspaceless %}
