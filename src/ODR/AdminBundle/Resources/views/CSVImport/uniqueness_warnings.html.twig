{% spaceless %}
    {# This twig file is never called when "importing into" a linked datatype #}
    {% set external_id_field = datatype.getexternalidfield %}

    <div class="csvimport_header pure-u-2-3">
        {% if file_encoding_converted %}
            {# notify that the file's encoding got changed #}
            <div id="external_id_field_warning" class="pure-u-1" style="margin-bottom:20px;">
                <span><i class="fa fa-lg fa-info-circle Cursor"></i></span>
                <span>The uploaded CSV file had a number of invalid UTF-8 characters..as such, the server attempted to rewrite the file to convert it into valid UTF-8.  The modified file is available for download <a href="{{ path('odr_csv_file_redownload') }}" style="text-decoration: underline;">HERE</a> if you wish to verify that the automatic conversion worked properly.</span>
            </div>
        {% endif %}

        {% if external_id_field == null %}
            {% if datatype.grandparent.id == datatype.id %}
                {# notify that the top-level datatype doesn't have an external id field #}
                <div class="pure-u-1">
                    <span><i class="fa fa-lg fa-exclamation-triangle Cursor"></i></span>
                    <span>&nbsp;This Datatype doesn't have an "External ID" Datafield...as such, the importing process is incapable of updating existing Datarecords.  Any rows imported will ALWAYS create new Datarecords.</span>
                </div>
            {% else %}
                {% set multiple_allowed = false %}
                {% if datatree_array['multiple_allowed'][datatype.id] is defined %}
                    {% set multiple_allowed = true %}
                {% endif %}

                {# notify that the child datatype doesn't have an external id field #}
                {% if multiple_allowed %}
                    <div class="pure-u-1">
                        <span><i class="fa fa-lg fa-exclamation-triangle Cursor"></i></span>
                        <span>&nbsp;This Datatype doesn't have an "External ID" Datafield...as such, the importing process is incapable of updating existing Datarecords.  Any rows imported will ALWAYS create new Datarecords.</span>
                    </div>
                {% else %}
                    <div class="pure-u-1">
                        <span><i class="fa fa-lg fa-exclamation-triangle Cursor"></i></span>
                        <span>&nbsp;This Datatype doesn't have an "External ID" Datafield...as such, the importing process is incapable of updating existing Datarecords.  Any rows imported MAY OVERWRITE existing Datarecords.</span>
                    </div>
                {% endif %}
            {% endif %}
        {% else %}
            {# notify that the external id field is not mapped #}
            <div id="external_id_field_warning" class="pure-u-1">
                <span><i class="fa fa-lg fa-exclamation-triangle Cursor"></i></span>
                <span>&nbsp;This Datatype's External ID Datafield, "{{ external_id_field.getfieldname }}", is currently not mapped to a column of the CSV File...as such, the importing process is incapable of updating existing Datarecords.  Any rows imported WILL create new Datarecords.</span>
            </div>
        {% endif %}

        {# every other unique datafield needs a warning too #}
        {% for df_id, df in datafields %}
            {% set df_meta = df.dataFieldMeta %}
            {% if df_meta.is_unique == 1 and external_id_field.id != df_id %}
            <div id="datafield_{{ df_id }}_unique_notice" class="pure-u-1">
                <span><i class="fa fa-lg fa-exclamation-circle Cursor"></i></span>
                <span>&nbsp;The unique Datafield "{{ df_meta.fieldName }}" is currently not mapped to a column of the CSV File...if any new Datarecords are created as a result of this import, this datafield will have multiple blank values.</span>
            </div>
            {% endif %}
        {% endfor %}
    </div>

<script>
    function updateHeaderWarnings() {
{% if external_id_field == null %}
        /* no external id datafield, do nothing */
{% else %}
        // Check to see if the external id datafield is mapped to a csv column
        var selected = false;
        $(".datafield_mapping:enabled").each(function() {
            var selected_df = $(this).children('option:selected').val();
            if ( selected_df == "{{ external_id_field.id }}" )
                selected = true;
        });

        // Display the warning based on whether it is
        if (selected)
            $("#external_id_field_warning").hide();
        else
            $("#external_id_field_warning").show();

{% endif %}

        // Deal with unique datafields that aren't external id/name datafields
        var datafield_usage = {};
{% for df_id, df in datafields %}{% if df.dataFieldMeta.is_unique == 1 %}
        datafield_usage["{{ df.id }}"] = 0;
{% endif %}{% endfor %}

        $(".datafield_mapping:enabled").each(function() {
            var selected_df = $(this).children('option:selected').val();
            if ( datafield_usage[selected_df] !== undefined )
                datafield_usage[selected_df] = 1;
        });

        jQuery.each(datafield_usage, function(key,value) {
            if (value == 1)
                $("#datafield_" + key + "_unique_notice").hide();
            else
                $("#datafield_" + key + "_unique_notice").show();
        });
    }
</script>

{% endspaceless %}
