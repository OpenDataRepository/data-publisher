{% spaceless %}

{% set datatype = datatype_array[initial_datatype_id] %}
{% set theme = theme_array[initial_theme_id] %}

{% set is_datatype_admin = false %}
{% if user_permissions[ datatype.id ] is defined and user_permissions[ datatype.id ][ 'dt_admin' ] is defined %}
    {% set is_datatype_admin = true %}
{% endif %}

{% set user_role = '' %}
{% if user != 'anon.' %}
    {% for role in user.getroles %}
        {% if role == 'ROLE_ADMIN' %}
            {% set user_role = 'ROLE_ADMIN' %}
        {% endif %}
    {% endfor %}
{% endif %}


<div class="ODRFormWrap">
    <div class="header">
    {% if datatype != null %}
        <h2>Display Records - {{ datatype.dataTypeMeta.shortName }}</h2>
    {% endif %}
    </div>

    <div class="ODRShortResultWrapper">
    {% if has_datarecords %}
        {{ pagination_html | raw }}
    {% endif %}

        {# Page/View Options #}
        {% set page_type = 'search_results' %}
        {% if intent == 'linking' %}
            {% set page_type = 'linking' %}
        {% endif %}

        {% include 'ODRAdminBundle:Default:view_manager.html.twig' with {
            'datatype': datatype,
            'theme': theme,
            'page_type': page_type,
            'search_key': search_key,

            'has_search_restriction': has_search_restriction,
            'editable_only': editable_only,
        } %}

    {% if has_datarecords %}
        {% include 'ODRAdminBundle:ShortResults:shortresults_ajax.html.twig' with {
            'datatype_array': datatype_array,
            'datarecord_array': datarecord_array,
            'theme_array': theme_array,

            'initial_datatype_id': initial_datatype_id,
            'initial_theme_id': initial_theme_id,
            'editable_datarecord_list': editable_datarecord_list,

            'offset': offset,
            'page_length': page_length,

            'intent': intent,
        } %}

        {% include 'ODRAdminBundle:Default:file_download_dialog.html.twig' %}

    {% elseif logged_in %}
        {# TODO - better styling for this #}
        No Datarecords found

    {% else %}
        No Datarecords found...try logging in.

    {% endif %}
    </div>

</div><!-- End of .ODRFormWrap -->

{% if intent == 'searching' and user_role == 'ROLE_ADMIN' and has_datarecords %}
<div class="ODRExportButtons Cursor">
    <div style="float:left;">
        {% if can_edit_datatype or is_datatype_admin %}
            <button id="ODRMassEdit" class="pure-button" type="button" onclick="doMassEdit();">Mass Edit all these datarecords</button>
        {% endif %}
        <button id="ODRCSVExport" class="pure-button" type="button" onclick="doCSVExport();">Mass Export these datarecords into CSV file</button>
    </div>

    {% if use_jupyterhub %}
    <div style="float:right;">
        <span id="jupyterhub_app_list" style="padding-right: 10px;"></span>

        <form target="_blank" action="{{ path('odr_jupyterhub_export') }}" method="post" style="display: inline;">
            <input type="hidden" name="datatype_id" value="{{ datatype.id }}" />
            <input type="hidden" name="search_key" value="{{ search_key }}" />
            <input type="hidden" name="app_id" id="jupyterhub_app_id" />

            <button id="ODRRunApp" type="submit" class="pure-button">Run this Jupyterhub app on these search results</button>
        </form>
    </div>
    {% endif %}
</div>
{% endif %}

<script>
    $(function() {
        $(".MenuDesignArea").remove();

        var prevent_scroll = false;
        ShortResults_initPage(prevent_scroll);

        // Need a tab id in html5 sessionStorage if one doesn't exist
        if ( !window.sessionStorage.getItem('odr_tab_id') )
            window.sessionStorage.setItem('odr_tab_id', '{{ odr_tab_id }}');

{% if intent == 'searching' and user_role == 'ROLE_ADMIN' and has_datarecords and use_jupyterhub %}
        // Get the app list to display on the page
        $.ajax({
            cache: false,
            type: 'GET',
            url: "{{ path('odr_jupyterhub_app_list', {'datatype_id': datatype.id}) }}",
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if ( parseInt(jqXHR.status) === 200 ) {
                    $("#jupyterhub_app_list").html(data.html);

                    $("#jupyterhub_app_selector").unbind('change').change(function() {
                        var selected = $(this).val();
                        $("#jupyterhub_app_id").val(selected);
                    });

                    // Store the value of the first option in the form
                    $("#jupyterhub_app_id").val( $("#jupyterhub_app_selector option:first").val() );
                }
            }
        });
{% endif %}

{% if intent == 'searching' and display_theme_warning %}
        $("#ODRMainMenu").overhang({
            type: "warn",
            message: "The originally requested layout is marked as private.  The database's default layout is being displayed instead.",
            closeConfirm: true
        });
{% endif %}

        {% if notify_of_sync == true %}
        {% include 'ODRAdminBundle:Theme:theme_sync_warning.js.twig' with {
            'datatype_id': datatype.id,
            'theme_id': theme.id,
            'search_key': search_key,
        }%}
        {% endif %}
    });


    function ShortResults_initPage(prevent_scroll) {
        // Resize all elements dependent on window size
        $(window).unbind('resize').resize(function() {
            WindowResizeInterval = window.clearInterval(WindowResizeInterval);    // variable WindowResizeInterval defined in common.js
            WindowResizeInterval = window.setInterval("onWindowResize()", 500);
        });

        // Resize everything prior to divs being hidden
        onWindowResize();

        // Set up image galleries
        setupImageGalleries();

        // Hide divs for accordion purposes
        setupAccordions();

        $(".ODRFileDownloadProgress").hide();

        $("a.ODRFileDownload").unbind('click').click(function(event) {
            // Grab necessary attributes
            var file_id = $(this).attr('rel');

            handleFileDownload(event, file_id);    // defined in Default::file_handling.html.twig
        });

        {% if scroll_target != '' %}
        if (!prevent_scroll) {
            var target = '#ShortResults_' + {{ scroll_target }};
            if ( $(target) !== null && $(target) !== undefined && $(target).offset() !== null ) {
                $('html, body').animate({
                    scrollTop: $(target).offset().top
                }, 500);
            }
        }
        {% endif %}

    }

{% if intent == 'searching' and has_datarecords and user_role == 'ROLE_ADMIN' %}
    {% if can_edit_datatype or is_datatype_admin %}
    function doMassEdit() {
        var url = '{{ path('odr_mass_edit_render', { 'search_theme_id': search_theme_id, 'datatype_id': datatype.id, 'search_key': search_key, 'offset': offset }) }}';
        UpdateURL(url);
    }
    {% endif %}

    function doCSVExport() {
        var url = '{{ path('odr_csv_export_render', { 'search_theme_id': search_theme_id, 'datatype_id': datatype.id, 'search_key': search_key, 'offset': offset }) }}';
        UpdateURL(url);
    }
{% endif %}
</script>

{% import "ODRAdminBundle:Default:load_datarecord_js.html.twig" as js %}
{{ js.write(search_theme_id, search_key) }}

{% endspaceless %}
