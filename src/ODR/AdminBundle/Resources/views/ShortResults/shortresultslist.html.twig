{% spaceless %}

{# NOTE: The "intent" variable passed in could be either "searching" or "linking" for this file #}

{% set datatype = datatype_array[initial_datatype_id] %}
{% set theme = theme_array[initial_theme_id] %}

{% set is_datatype_admin = false %}
{% if user_permissions[ datatype.id ] is defined and user_permissions[ datatype.id ][ 'dt_admin' ] is defined %}
    {% set is_datatype_admin = true %}
{% endif %}

{% set can_edit_datatype = false %}
{% if user_permissions[ datatype.id ] is defined and user_permissions[ datatype.id ][ 'dr_edit' ] is defined %}
    {% set can_edit_datatype = true %}
{% endif %}

<div class="ODRFormWrap">
    <div class="ODRShortResultsTitle">
    {% if datatype != null %}
        <span class="ODRShortResultsHeaderLeft">Display Records - {{ datatype.dataTypeMeta.shortName }}</span>
        <span class="ODRShortResultsHeaderRight">[uuid: {{ datatype.unique_id }}]</span>
    {% endif %}
    </div>

    <div class="ODRShortResultWrapper">
{#    {% if has_datarecords %}#}
        {{ pagination_html | raw }}
{#    {% endif %}#}

    {% if has_datarecords %}
        {% include 'ODRAdminBundle:ShortResults:shortresults_ajax.html.twig' with {
            'datatype_array': datatype_array,
            'datarecord_array': datarecord_array,
            'theme_array': theme_array,

            'initial_datatype_id': initial_datatype_id,
            'initial_theme_id': initial_theme_id,
            'editable_datarecord_list': editable_datarecord_list,

            'is_datatype_admin': is_datatype_admin,

            'offset': offset,
            'page_length': page_length,

            'intent': intent,
        } %}

        <div id="mass_download_dialog_wrapper">
            {% include 'ODRAdminBundle:Default:mass_download_dialog.html.twig' %}
        </div>

    {% else %}
        <div class="ODRShortResults_empty">
            {% if logged_in %}No Datarecords found{% else %}No Datarecords found...try logging in.{% endif %}
        </div>
    {% endif %}
    </div>

</div><!-- End of .ODRFormWrap -->


<script>
    $(function() {
{% if theme.themeMeta.disableSearchSidebar == false %}
        enableSearchSidebar('{{ search_key }}', 'expanded');    {# defined in ODRAdminBundle:Default:common_js.html.twig #}
{% else %}
        disableSearchSidebar();
{% endif %}

        $(".MenuDesignArea").remove();

        // Resize all elements dependent on window size
        $(window).unbind('resize').resize(function() {
            WindowResizeInterval = window.clearInterval(WindowResizeInterval);    // variable WindowResizeInterval defined in common.js
            WindowResizeInterval = window.setInterval("onWindowResize()", 500);
        });

        // Need a tab id in html5 sessionStorage if one doesn't exist
        if ( !window.sessionStorage.getItem('odr_tab_id') )
            window.sessionStorage.setItem('odr_tab_id', '{{ odr_tab_id }}');

{% if intent == 'searching' and display_theme_warning %}
        $("#ODRMainMenu").overhang({
            type: "warn",
            message: "The originally requested layout is marked as private.  The database's default layout is being displayed instead.",
            closeConfirm: true
        });
{% else %}
        if ( $(".ODRDataField").length === 0 && $(".ODRShortResults_empty") === undefined ) {
            $("#ODRMainMenu").overhang({
                type: "warn",
                message: "This layout is either empty, or you're unable to view its contents.  You need to switch to a different layout to see any search results.",
                closeConfirm: true
            });
        }
{% endif %}

        // Resize everything prior to divs being hidden
        onWindowResize();

        // Set up image galleries
        setupImageGalleries();

        // Hide divs for accordion purposes
        setupAccordions();

        // Attach click handlers to tags
        setupTagTree();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}

        $("a.ODRFileDownload").unbind('click').click(function(event) {
            // Grab necessary attributes
            var file_id = $(this).attr('rel');

            handleFileDownload(event, file_id);    {# defined in Default::file_handling.html.twig #}
        });

        $("#ChooseView").unbind('click').click(function(event) {
            window.ODRChooseView_applyredirectcallback = function(theme_id) {
                {% if intent == 'searching' %}
                // When a new 'search_results' theme is selected...need to redirect to a new URL
                //  with the desired theme_id

                // Need to extract the offset...
                var hash = window.location.hash;
                var offset = hash.substr(hash.lastIndexOf('/') + 1);
                if ( isNaN(offset) )
                    offset = '1';
                // ...and ensure the search sidebar doesn't revert back to the previous theme when
                //  the Search button is clicked
                $("#selected_theme_id").val(theme_id);

                // Reload the search results list with the newly selected theme
                var url = '{{ path('odr_search_render', { 'search_theme_id': 0, 'search_key': '', 'offset': 0 }) }}';
                url = url.substr(0, url.length-4);
                url += theme_id + '/' + '{{ search_key }}' + '/' + offset;

                UpdateURL(url);
                {% elseif intent == 'linking' %}
                // When a new theme is selected for this usage, the result needs to be surgically
                //  spliced into a specific div on the page...
                $("#selected_theme_id").val(theme_id);
                doSearch( '{{ path('odr_search_results') }}' );
                {% else %}
                alert('invalid intent "{{ intent }}" passed to ODRAdminBundle::ShortResults::shortresultslist.html.twig');
                {% endif %}
            }
            openChooseViewRemodal({{ datatype.id }}, 'search_results', '{{ search_key }}');
        });

        {% if not can_edit_datatype %}
        $(".ODRDownloadAllFiles").remove();
        {% else %}
        $(".ODRDownloadAllFiles").unbind('click').click(function() {

            if ( $(this).hasClass('fa-muted') )
                return;

            // Locate necessary attributes
            var id_data = $(this).closest(".ODRDataField").first().attr('id').split(/_/);
            var datarecord_id = id_data[1];
            var datafield_id = id_data[2];

            {# defined in ODRAdminBundle:Default:mass_download_dialog.html.twig #}
            openMassDownloadDialog("{{ search_key }}", datafield_id);
        });
        {% endif %}

        {% if scroll_target != '' %}
        // Scroll to a specific record in the search results
        var target = '#ShortResults_' + {{ scroll_target }};
        if ( $(target) !== undefined && $(target).offset() !== undefined ) {
            $('html, body').animate({
                scrollTop: $(target).offset().top-75
            }, 500);
        }
        else {
            // The record isn't displayed on this page, so reset to the top
            window.scrollTo(0, 0);
        }
        {% else %}
        // Don't have a specific record to scroll to, so reset to the top of the page
        window.scrollTo(0, 0);
        {% endif %}

        hideSearchOverlay();    {# defined in Default::common_js.html.twig #}

{% if notify_of_sync is defined and notify_of_sync == true %}
        {% include 'ODRAdminBundle:Theme:theme_sync_warning.js.twig' with {
            'datatype_id': datatype.id,
            'theme_id': theme.id,
            'page_type': 'search_results',
            'search_key': search_key,
        }%}
{% endif %}

        {% include 'ODRAdminBundle:Default:search_results_introjs.js.twig' with {
            'page_type': 'search'
        } %}
    });
</script>

{% import "ODRAdminBundle:Default:load_datarecord_js.html.twig" as js %}
{{ js.write(search_theme_id, search_key) }}

{% endspaceless %}
