{% spaceless %}
{#
{% set field_typename = datarecordfield.getdatafield.getfieldtype.typename %}
{% set field_typeclass = datarecordfield.getdatafield.getfieldtype.typeclass %}
#}
{% set field_typename = datafield.dataFieldMeta.fieldType.typeName %}
{% set field_typeclass = datafield.dataFieldMeta.fieldType.typeClass %}

{#{% set valuefield = datarecordfield.getassociatedentity %}#}
{% set datarecordfield = datarecord.dataRecordFields[ datafield.id ] %}

    {% set valuefield = '' %}
    {% if field_typename == "Boolean" %}
        {% set valuefield = datarecordfield.boolean[0] %}
    {% elseif field_typename == "File" %}
        {% set valuefield = datarecordfield.file %}
    {% elseif field_typename == "Image" %}
        {% set valuefield = datarecordfield.image %}
    {% elseif field_typename == "Decimal" %}
        {% set valuefield = datarecordfield.decimalValue[0] %}
    {% elseif field_typename == "Integer" %}
        {% set valuefield = datarecordfield.integerValue[0] %}
    {% elseif field_typename == "Paragraph Text" %}
        {% set valuefield = datarecordfield.longText[0] %}
    {% elseif field_typename == "Long Text" %}
        {% set valuefield = datarecordfield.longVarchar[0] %}
    {% elseif field_typename == "Medium Text" %}
        {% set valuefield = datarecordfield.mediumVarchar[0] %}
    {% elseif field_typename == "Single Radio" %}
        {% set valuefield = datarecordfield.radioSelection %}
    {% elseif field_typename == "Short Text" %}
        {% set valuefield = datarecordfield.shortVarchar[0] %}
    {% elseif field_typename == "DateTime" %}
        {% set valuefield = datarecordfield.datetimeValue[0] %}
    {% elseif field_typename == "Markdown" %}
        {% set valuefield = '' %}
    {% endif %}

    {#<form action="{{ path('odr_record_save', { 'record_type': datarecordfield.getdatafield.getfieldtype.typeclass, 'datarecord_id': datarecord.id }) }}" method="post" {{ form_enctype(form) }} class="pure-u-1" id="EditDataRecordFieldsForm_{{ datarecordfield.id }}" {% if field_typeclass != "File" and field_typeclass != "Image" and field_typeclass != "Radio" %}rel="{{ valuefield.id }}"{% endif %}>#}
    <form action="{{ path('odr_record_save', { 'record_type': field_typeclass, 'datarecord_id': datarecord.id }) }}" {#method="post" {{ form_enctype(form) }}#} class="pure-u-1" id="EditDataRecordFieldsForm_{{ datarecordfield.id }}" {% if field_typeclass != "File" and field_typeclass != "Image" and field_typeclass != "Radio" %}rel="{{ valuefield.id }}"{% endif %}>

    {% if field_typename == "Single Radio" or field_typename == "Multiple Radio" or field_typename == "Single Select" or field_typename == "Multiple Select" %}
        {# do nothing #}
    {% elseif field_typename == "File" or field_typename == "Image" %}
        <input type="hidden" name="ObjType" value="{{ field_typename }}" />
    {% else %}
        <input type="hidden" name="id" value="{{ valuefield.id }}" />
        {#<input type="hidden" name="ObjType" value="{{ valuefield.getdatafield.getfieldtype.gettypeclass }}" />#}
        <input type="hidden" name="ObjType" value="{{ field_typeclass }}" />
{#
        {{ form_errors(form.createdBy) }}
        {{ form_widget(form.createdBy) }}
#}
    {% endif %}
{#
        {{ form_errors(form._token) }}
        {{ form_widget(form._token) }}

        {{ form_errors(form.data_field) }}
        {{ form_widget(form.data_field) }}
        {{ form_errors(form.field_type) }}
        {{ form_widget(form.field_type) }}
        {{ form_errors(form.data_record) }}
        {{ form_widget(form.data_record) }}
        {{ form_errors(form.data_record_fields) }}
        {{ form_widget(form.data_record_fields) }}
#}

    {% if field_typename == "Boolean" %}
        <fieldset>
            <label id="Label_{{ datafield.id }}" for="Input_{{ datafield.id }}" class="ODRFieldLabel pure-u-1" style="margin:0.5em 0;" title="{{ datafield.dataFieldMeta.description }}">
            <input type="checkbox" name="BooleanForm[value]" value="1" {% if valuefield.value == 1 %}checked{% endif %} />

                {{ datafield.dataFieldMeta.fieldName }}
            </label>

{#
                {{ form_errors(form.value) }}
                {{ form_widget(form.value, { 'attr': {'class': 'required', 'data-error-type': 'inline' } }) }}
#}
        </fieldset>

    {% elseif field_typename == "File" %}
        {% set has_file = false %}
        <fieldset>
            <div class="pure-u-1">
                <table class="NotODRTable pure-table pure-u-1">
                    <thead class="pure-u-1">
                        <tr class="pure-u-1">
                            <th class="pure-u-20-24">{{ datafield.dataFieldMeta.fieldName }}</th>
                            <th class="pure-u-1-24">Options</th>
                        </tr>
                    </thead>
                    <tbody class="pure-u-1">
                    {% for file in valuefield %}
                        {% set has_file = true %}
                        <tr id="File_{{ file.id }}" class="pure-u-1">
                            <td class="pure-u-20-24" {% if file.fileMeta.originalFileName != null and datafield.dataFieldMeta.shorten_filename == 1 and file.fileMeta.originalFileName|length > 35 %}title="{{ file.fileMeta.originalFileName }}"{% endif %}>
                                {% if file.original_checksum != '' %}
                                    <a href="{{ path('odr_file_download', { 'file_id': file.id } ) }}" class="truncate ODRFileDownload" rel="{{ file.id }}">
                                        {% if file.fileMeta.originalFileName == null %}File_{{ file.id }}.{{ file.getext }}{% else %}{{ file.fileMeta.originalFileName }}{% endif %}
                                    </a>
                                    <span id="ODRFileDownload_{{ file.id }}" class="ODRFileDownloadProgress" style="cursor:default; margin-left:10px;">
                                        <span id="ODRFileDecrypt_{{ file.id }}_progress" class="ODRProgressBar" style="margin-left:15px; display:inline-block;">
                                            <span class="ODRProgressBarLabel" style="left:35%;">Decrypting...</span>
                                        </span>
                                        <span id="ODRFileDownload_{{ file.id }}_cancel" class="ODRFileDownloadCancel pure-button pure-button-primary" rel="{{ file.id }}" style="vertical-align: top; margin-left: 10px;">Cancel</span>
                                    </span>
                                {% else %}
                                    <span class="Cursor">
                                        {% if file.fileMeta.originalFileName == null %}File_{{ file.id }}.txt{% else %}{{ file.fileMeta.originalFileName }}{% endif %}
                                    </span>
                                    <span id="ODRFileEncrypt_{{ file.id }}_progress" class="ODRProgressBar" style="margin-left:15px; display:inline-block;">
                                        <span class="ODRProgressBarLabel" style="left:35%;">Encrypting...</span>
                                    </span>
                                    <script>
                                        $(function() {
                                            createFileEncryptProgressCheck({{ file.id }}, {{ datarecord.id }}, {{ datafield.id }});
                                            $("#ODRFileEncrypt_{{ file.id }}_progress").progressbar({
                                                value: false
                                            });
                                        });
                                    </script>
                                {% endif %}
                            </td>

                            <td class="pure-u-4-24">
                                {% if file.original_checksum != '' %}
                                    <a><i class="Pointer tooltip fa fa-globe fa-lg ODRPublicFile {% if file.fileMeta.publicDate|is_public %}IconRed{% endif %}" title="{% if file.fileMeta.publicDate|is_public %}File is not public{% else %}Public since {{ file.fileMeta.publicDate|date('Y-m-d') }}{% endif %}" rel="{{ file.id }}"></i></a>
                                    <i class="Cursor tooltip fa fa-calendar fa-lg" title="Uploaded {{ file.created|date('Y-m-d') }} by {{ file.createdBy|user_string }}"></i>
                                    <a><i class="Pointer tooltip fa fa-trash-o fa-lg ODRDeleteFile" title="Delete File" rel="{{ file.id }}"></i></a>
                                {% else %}
                                    &nbsp;
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div class="pure-u-1">
            {% if datafield.dataFieldMeta.allow_multiple_uploads == 1 or has_file == false %}
                {# show upload area only if multiples are allowed or nothing has been uploaded yet #}
                {% set target = 'drf_' ~ datarecordfield.id %}
                {% set single_file = true %}
                {% if datafield.dataFieldMeta.allow_multiple_uploads == 1 %}
                    {% set single_file = false %}
                {% endif %}
                {% set callback = 'ReloadDatafield(' ~ datarecord.id ~ ',' ~ datafield.id ~ ');' %}

                {% include 'ODRAdminBundle:Flow:flow_upload.html.twig' with {'target': target, 'single_file': single_file, 'upload_type': 'file', 'datatype_id': datatype.id, 'datarecordfield_id': datarecordfield.id, 'callback': callback} %}
            {% endif %}
            </div>
        </fieldset>

    {% elseif field_typename == "Image" %}
        {% set has_image = false %}
        {#<fieldset>#}
            <label id="Label_{{ datafield.id }}" class="ODRFieldLabel pure-u-1" title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</label>
            <div class="ODRSortableImage pure-u-1">
{#
                <div class="ODRImageRow">
                {% set count = -1 %}
#}
                {% for image in valuefield %}
                    {% set oimage = image.parent %}
                    {% set image_ext = oimage.ext %}
                    {% set image_caption = oimage.imageMeta.caption %}
                    {% set image_filename = oimage.imageMeta.originalFileName %}

                    {% set has_image = true %}

                    <div id="Image_{{ oimage.id }}" class="pure-u-1 pure-u-md-1-{{ datafield.dataFieldMeta.children_per_row }}" rel="{{ image.id }}">    {# rel is the id of the thumbnail, id attr is the id of the full-size image #}
                        <div class="pure-u-1">
                            &nbsp;<i class="Cursor tooltip fa fa-calendar fa-lg" title="Uploaded {{ oimage.created|date('Y-m-d') }} by {{ oimage.createdBy|user_string }}"></i>
                            &nbsp;<i class="ODRDeleteImage tooltip Pointer fa fa-lg fa-trash-o" title="Delete Image" rel="{{ oimage.id }}"></i>
                            &nbsp;<i class="ODRPublicImage tooltip Pointer fa fa-lg fa-globe {% if oimage.imageMeta.publicDate|is_public %}IconRed{% endif %}" title="{% if oimage.imageMeta.publicDate|is_public %}Image is not public{% else %}Public since {{ oimage.publicDate|date('Y-m-d') }}{% endif %}" rel="{{ oimage.id }}"></i>
                            &nbsp;<i class="ODRRotateImage tooltip Pointer fa fa-lg fa-rotate-left" title="Rotate Image 90 degrees counter-clockwise" rel="{{ oimage.id }}"></i>
                            &nbsp;<i class="ODRRotateImage tooltip Pointer fa fa-lg fa-rotate-right" title="Rotate Image 90 degrees clockwise" rel="{{ oimage.id }}"></i>
                            &nbsp;
                        </div>
                        <div class="pure-u-23-24">
                            <a target="_blank" href="{{ path('odr_image_download', {'image_id': oimage.id}) }}" title="{{ image_caption }}">
                                <img class="pure-img" src="{{ path('odr_image_download', {'image_id': image.id}) }}{% if force_image_reload %}?{{ date().timestamp }}{% endif %}" title="{% if image_filename != null %}{{ image_filename }}{% else %}Image_{{ image.id }}.{{ image_ext }}{% endif %}" />
                            </a>
                        </div>
                    </div>
                {% endfor %}
{#
                </div>
#}
            </div>
            <div class="pure-u-1">
            {% if datafield.dataFieldMeta.allow_multiple_uploads == 1 or has_image == false %}
                {# show upload area only if multiples are allowed or nothing has been uploaded yet #}
                {% set target = 'drf_' ~ datarecordfield.id %}
                {% set single_file = true %}
                {% if datafield.dataFieldMeta.allow_multiple_uploads == 1 %}
                    {% set single_file = false %}
                {% endif %}
                {% set callback = 'ReloadDatafield(' ~ datarecord.id ~ ',' ~ datafield.id ~ ');' %}

                {% include 'ODRAdminBundle:Flow:flow_upload.html.twig' with {'target': target, 'single_file': single_file, 'upload_type': 'image', 'datatype_id': datatype.id, 'datarecordfield_id': datarecordfield.id, 'callback': callback} %}

            {% endif %}
            </div>
        {#</fieldset>#}

    {% elseif field_typename == "Paragraph Text" %}
        <fieldset>
            <label id="Label_{{ datafield.id }}" for="Input_{{ datafield.id }}" class="ODRFieldLabel ODRDatafieldHistory" title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</label>
            <div class="ODRFieldWrapper" id="Input_{{ datafield.id }}">
                <textarea name="LongTextForm[value]" data-error-type="inline" class="pure-u-1" {% if datafield.dataFieldMeta.required == 1 %}required="required"{% endif %}>{{ valuefield.value }}</textarea>
{#
                {{ form_errors(form.value) }}
                {{ form_widget(form.value, { 'attr': {'class': 'required', 'data-error-type': 'inline' } }) }}
#}
            </div>
        </fieldset>

    {% elseif field_typename == "Integer" or field_typename == "Decimal" or field_typename == "Long Text" or field_typename == "Medium Text" or field_typename == "Short Text" %}
        {% set form_id = 'Form_'~datarecordfield.id %}
        {% set maxlength = '' %}
        {% if field_typename == "Long Text" %}
            {% set maxlength = 255 %}
        {% elseif field_typename == "Medium Text" %}
            {% set maxlength = 64 %}
        {% elseif field_typename == "Short Text" %}
            {% set maxlength = 32 %}
        {% endif %}

        <fieldset>
            <label id="Label_{{ datafield.id }}" for="Input_{{ datafield.id }}" class="ODRFieldLabel ODRDatafieldHistory" title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</label>
            <div class="ODRFieldWrapper" id="Input_{{ datafield.id }}">
{#
                {{ form_errors(form.value) }}
                {% if field.required == 1 %}
                    {{ form_widget(form.value, { 'id': form_id, 'attr': {'class': 'pure-u-1 required', 'data-error-type': 'inline' } }) }}
                {% else %}
                    {{ form_widget(form.value, { 'id': form_id, 'attr': {'class': 'pure-u-1', 'data-error-type': 'inline' } }) }}
                {% endif %}
#}
            </div>
        </fieldset>

    {#{% elseif field_typename == "Single Radio" or field_typename == "Multiple Radio" %}#}
    {% elseif field_typename == "Single Radio" or field_typename == "Multiple Radio" or field_typename == "Multiple Select" %}
        <fieldset>
            <label id="Label_{{ datafield.id }}" class="ODRFieldLabel ODRDatafieldHistory pure-u-1" title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</label>

            {#{% set option_list = radiooptionlist(field.getRadioOptions, datarecordfield.getRadioSelection) %}#}

            {% set print_null_option = false %}
            {% set has_selection = false %}
            {% if field_typename == "Single Radio" %}
                {% set print_null_option = true %}
    
                {% for radio_selection in datarecordfield.radioSelection %}
                    {% if radio_selection.selected == 1 %}
                        {% set has_selection = true %}
                    {% endif %}
                {% endfor %}
            {% endif %}

            {% for radio_option in datafield.radioOptions %}
                {% set is_selected = 0 %}
                {% if datarecordfield.radioSelection[ radio_option.id ] is defined %}
                    {% set is_selected = datarecordfield.radioSelection[ radio_option.id ].selected %}
                {% endif %}

                {% if print_null_option == true %}
                    {% set print_null_option = false %}
                    <label id="Label_{{ datafield.id }}_0" for="Input_{{ datarecordfield.id }}_0" class="pure-u-1 pure-u-md-1-{{ datafield.children_per_row }}" style="margin: 0.5em 0;">
                        <input id="Input_{{ datarecordfield.id }}_0" type="radio" name="RadioGroup_{{ datarecordfield.id }}" {% if has_selection == false %}checked{% endif %} class="SingleRadioGroup {% if has_selection == false %}ODRRadioOptionChecked{% endif %}" />
                        No Option Selected
                    </label>
                {% endif %}

                <label id="Label_{{ datafield.id }}" for="Input_{{ datarecordfield.id }}_{{ radio_option.id }}" class="pure-u-1 pure-u-md-1-{{ datafield.children_per_row }}" style="margin: 0.5em 0;">

                {% if field_typename == "Single Radio" %}
                    <input id="Input_{{ datarecordfield.id }}_{{ radio_option.id }}" type="radio" name="RadioGroup_{{ datarecordfield.id }}" {% if is_selected == 1 %}checked{% endif %} class="SingleRadioGroup {% if is_selected == 1 %}ODRRadioOptionChecked{%endif %}" />
                {% else %}
                    <input id="Input_{{ datarecordfield.id }}_{{ radio_option.id }}" type="checkbox" name="RadioGroup_{{ datarecordfield.id }}" {% if is_selected == 1 %}checked{% endif %} class="MultipleRadioGroup" />
                {% endif %}

                {{ radio_option.radioOptionMeta.optionName }}
                </label>
            {% endfor %}

        <fieldset>

    {#{% elseif field_typename == "Single Select" or field_typename == "Multiple Select" %}#}
    {% elseif field_typename == "Single Select" %}
        <fieldset>
            <label id="Label_{{ datafield.id }}" for="SelectGroup_{{ datarecordfield.id }}" class="ODRFieldLabel ODRDatafieldHistory pure-u-1" title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</label>

            <select id="SelectGroup_{{ datarecordfield.id }}" class="pure-u-23-24 {% if field_typename == "Multiple Select" %}MultipleSelectGroup{% else %}SingleSelectGroup{% endif %}" {% if field_typename == "Multiple Select" %}multiple{% endif %}>
            {% if field_typename == "Single Select" %}
                <option id="Option_0" value="0">No Option Selected</option>
            {% endif %}

            {% for radio_option in datafield.radioOptions %}
                {% set is_selected = 0 %}
                {% if datarecordfield.radioSelection[ radio_option.id ] is defined %}
                    {% set is_selected = datarecordfield.radioSelection[ radio_option.id ].selected %}
                {% endif %}

                <option id="Option_{{ radio_option.id }}" value="{{ radio_option.id}}" {% if is_selected == 1 %}selected {% if field_typename == "Multiple Select" %}class="MultipleSelect_prev"{% endif %}{% endif %}>{{ radio_option.radioOptionMeta.optionName }}</option>
            {% endfor %}
            </select>

        </fieldset>

    {% elseif field_typename == "DateTime" %}
        <fieldset>
            <label id="Label_{{ datafield.id }}" for="Input_{{ datafield.id }}" class="ODRFieldLabel ODRDatafieldHistory" title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</label>
            <div class="ODRFieldWrapper" id="Input_{{ datafield.id }}">
                {% set new_id = 'DatetimeValueForm_value_' ~ datafield.id %}
{#
                {{ form_errors(form.value) }}
                {% if field.required == 1 %}
                    {{ form_widget(form.value, { 'id': new_id, 'attr': {'class': 'Pointer pure-u-1 ODRDatePicker required', 'data-error-type': 'inline', 'readonly': 'readonly'} }) }}
                {% else %}
                    {{ form_widget(form.value, { 'id': new_id, 'attr': {'class': 'Pointer pure-u-1 ODRDatePicker', 'data-error-type': 'inline', 'readonly': 'readonly'} }) }}
                {% endif %}
#}
            </div>
            <div style="margin-bottom:5px;"><label class="Pointer ODRDatePicker_clear"><u>Clear Date</u></label></div>
        </fieldset>

    {% endif %}
    </form>

{% set drf_id = datarecordfield.id %}

{% if field_typename == "Boolean" %}
    {% set boolean_id = valuefield.id %}
    <script type="text/javascript">
        window.BooleanInterval_{{ boolean_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='BooleanForm[value]']").unbind('change');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='BooleanForm[value]']").change(function() {
            window.BooleanInterval_{{ boolean_id }} = window.clearInterval(window.BooleanInterval_{{ boolean_id }});
            window.BooleanInterval_{{ boolean_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.BooleanInterval_{{ boolean_id }}
                );
            }
        });
    </script>

{% elseif field_typename == "File" or field_typename == "Image" %}
    {# handled elsewhere by flow.js #}
{% elseif field_typename == "Integer" %}
    {% set integervalue_id = valuefield.id %}
    <script type="text/javascript">
        window.IntegerValueInterval_{{ integervalue_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='IntegerValueForm[value]']").unbind('keyup');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='IntegerValueForm[value]']").unbind('paste');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='IntegerValueForm[value]']").on('keyup paste', function() {
            window.IntegerValueInterval_{{ integervalue_id }} = window.clearInterval(window.IntegerValueInterval_{{ integervalue_id }});
            window.IntegerValueInterval_{{ integervalue_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            rules: {
                "IntegerValueForm[value]": {
                    digits: true
                }
            },
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.IntegerValueInterval_{{ integervalue_id }}
                );
            }
        });
    </script>
{% elseif field_typename == "Decimal" %}
    {% set decimalvalue_id = valuefield.id %}
    <script type="text/javascript">
        window.DecimalValueInterval_{{ decimalvalue_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='DecimalValueForm[value]']").unbind('keyup');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='DecimalValueForm[value]']").unbind('paste');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='DecimalValueForm[value]']").on('keyup paste', function() {
            window.DecimalValueInterval_{{ decimalvalue_id }} = window.clearInterval(window.DecimalValueInterval_{{ decimalvalue_id }});
            window.DecimalValueInterval_{{ decimalvalue_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            rules: {
                "DecimalValueForm[value]": {
                    number: true
                }
            },
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.DecimalValueInterval_{{ decimalvalue_id }}
                );
            }
        });
    </script>
{% elseif field_typename == "Paragraph Text" %}
    {% set longtext_id = valuefield.id %}
    <script type="text/javascript">
        window.LongTextInterval_{{ longtext_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("textarea[name='LongTextForm[value]']").unbind('keyup');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("textarea[name='LongTextForm[value]']").unbind('paste');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("textarea[name='LongTextForm[value]']").on('keyup paste', function() {
            window.LongTextInterval_{{ longtext_id }} = window.clearInterval(window.LongTextInterval_{{ longtext_id }});
            window.LongTextInterval_{{ longtext_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);

            WindowResizeInterval = window.clearInterval(WindowResizeInterval);
            WindowResizeInterval = window.setInterval("onWindowResize()", 500);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.LongTextInterval_{{ longtext_id }}
                );
            }
        });
    </script>
{% elseif field_typename == "Long Text" %}
    {% set longvarchar_id = valuefield.id %}
    <script type="text/javascript">
        window.LongVarcharInterval_{{ longvarchar_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='LongVarcharForm[value]']").unbind('keyup');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='LongVarcharForm[value]']").unbind('paste');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='LongVarcharForm[value]']").on('keyup paste', function() {
            window.LongVarcharInterval_{{ longvarchar_id }} = window.clearInterval(window.LongVarcharInterval_{{ longvarchar_id }});
            window.LongVarcharInterval_{{ longvarchar_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            rules: {
                "LongVarcharForm[value]": {
                    maxlength: 255
                }
            },
            messages: {
                "LongVarcharForm[value]": {
                    maxlength: "255 characters max"
                }
            },
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.LongVarcharInterval_{{ longvarchar_id }}
                );
            }
        });
    </script>
{% elseif field_typename == "Medium Text" %}
    {% set mediumvarchar_id = valuefield.id %}
    <script type="text/javascript">
        window.MediumVarcharInterval_{{ mediumvarchar_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='MediumVarcharForm[value]']").unbind('keyup');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='MediumVarcharForm[value]']").unbind('paste');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='MediumVarcharForm[value]']").on('keyup paste', function() {
            window.MediumVarcharInterval_{{ mediumvarchar_id }} = window.clearInterval(window.MediumVarcharInterval_{{ mediumvarchar_id }});
            window.MediumVarcharInterval_{{ mediumvarchar_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            rules: {
                "MediumVarcharForm[value]": {
                    maxlength: 64
                }
            },
            messages: {
                "MediumVarcharForm[value]": {
                    maxlength: "64 characters max"
                }
            },
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.MediumVarcharInterval_{{ mediumvarchar_id }}
                );
            }
        });
    </script>
{% elseif field_typename == "Short Text" %}

    {% set shortvarchar_id = valuefield.id %}
    <script type="text/javascript">
        window.ShortVarcharInterval_{{ shortvarchar_id }} = null;
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='ShortVarcharForm[value]']").unbind('keyup');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='ShortVarcharForm[value]']").unbind('paste');
        $("#EditDataRecordFieldsForm_{{ drf_id }}").find("input[name='ShortVarcharForm[value]']").on('keyup paste', function() {
            window.ShortVarcharInterval_{{ shortvarchar_id }} = window.clearInterval(window.ShortVarcharInterval_{{ shortvarchar_id }});
            window.ShortVarcharInterval_{{ shortvarchar_id }} = window.setInterval("$('#EditDataRecordFieldsForm_{{ drf_id }}').submit()", SaveTimeout);
        });

        $("#EditDataRecordFieldsForm_{{ drf_id }}").validate({
            rules: {
                "ShortVarcharForm[value]": {
                    maxlength: 32
                }
            },
            messages: {
                "ShortVarcharForm[value]": {
                    maxlength: "32 characters max"
                }
            },
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditDataRecordFieldsForm_{{ drf_id }}', 
                    window.ShortVarcharInterval_{{ shortvarchar_id }}
                );
            },
        });
    </script>

{% endif %}

{% endspaceless %}
