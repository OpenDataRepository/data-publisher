{% spaceless %}

<h1 class="no-margin-top-phone">
    <span>Derivative Layouts &raquo; {{ datatype.dataTypeMeta.shortName }}</span>
</h1>

<input type="hidden" id="datatype_id" value="{{ datatype.id }}" />

<div id="ODRThemeListHeader" class="pure-u-1"></div>
<div id="ODRThemeListContent" class="pure-u-1"></div>

<style>
    .ODRActiveIcon {
        background: #00FF00;
    }

    #ODRThemeListContent {
        padding-top: 30px;
    }

    .ODRDetachedDatafield {
        background-color: #ff0000;
        opacity: 0.4;
    }
    .ODRAttachedDatafield {
        background-color: #00ff00;
        opacity: 0.4;
    }
    .ODRInvalidDatafield {
        cursor: not-allowed;
        background-color: #666666;
        opacity: 0.4;
    }
</style>

<script>
    $(function() {
        $(".ODRThemeListContentHeader").next().hide();
        $("#ODRThemeListContent").hide();

        InitSlideout();
        LoadThemeList({{ datatype.id }});

        // Setup Properties Tack
        $(".TackProperties").unbind('click').click(function() {
            if($(this).hasClass('tacked')) {
                // Remove tacked
                $(this).removeClass('tacked');
                $("#ODRNavRight").removeClass('StickOpen');
                // $("#ODRNavRight").css('right', 0);
            }
            else {
                $(this).addClass('tacked');
                $("#ODRNavRight").addClass('StickOpen');
                // $("#ODRNavRight").css('right', 400);
            }
        });

        $(".ODRThemeListContentHeader").last().next().show();
    });

    function notifySaved() {
//    $('#saved').fadeIn();
        $('#saved').css('visibility', 'visible');   // trying out visibility property because normal display property causes slideout to jump around
        setTimeout(function() {
//        $('#saved').fadeOut();
            $('#saved').css('visibility', 'hidden');
        }, 2000);
    }

    function InitSlideout() {
        // Load display template menu
        var url = '{{ path('odr_design_nav_slideout') }}';

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    switch(data.t) {
                        case 'html':
                            $(".MenuDesignArea").remove();
                            $("#ODRNavRight .top").append(data.d);
                            $("#ODRNavRightWrapper").fadeIn('fast');
                            $("#MenuManageDataTypes").click();
                            $(".MenuDesignArea a").click();

                            // Clear Element Data Holder
                            $("#ElementData").html("");
                            break;

                        case 'func':
                            // Call External Function
                            data.d.func(data);
                            break;
                    }
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
/*
             complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
*/
        });
    }

    function LoadThemeList(datatype_id) {
        var url = '{{ path('odr_design_load_theme_list', { 'datatype_id': 0, } ) }}';
        url = url.substring(0, (url.length - 1));
        url += datatype_id;

//alert(url);
//return;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    $("#ODRThemeListHeader").html(data.d.html).fadeIn('fast');
                    InitHeader();
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function InitHeader() {

        $(".ODRAddTheme").unbind('click').click(function() {
            // Grab the datatype id and the new theme_type
            var datatype_id = $("#datatype_id").val();
            var theme_type = $(this).attr('rel');

            // Load form for current datfield if not already loaded
            var url = '{{ path('odr_design_add_theme', { 'datatype_id': 0, 'theme_type': '' } ) }}';
            url = url.substring(0, (url.length - 2));
            url += datatype_id + '/' + theme_type;

//alert(url);
//return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        // Reload the theme list html
                        $("#ODRThemeListContent").html('');
                        LoadThemeList(datatype_id);
                    }
                    else {
                        // An error has occurred.
                        // Show Error message dialog
                        alert(data.d);
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        });

        $(".ODREditTheme").unbind('click').click(function() {

            // Clear the currently selected theme indicator
            $(".ODREditTheme").removeClass('ODRActiveIcon');
            $(this).addClass('ODRActiveIcon');

            // Grab the id of the theme to load
            var theme_id = $(this).attr('rel');

            // Load form for current datfield if not already loaded
            var url = '{{ path('odr_design_load_theme', { 'theme_id': 0 } ) }}';
            url = url.substring(0, (url.length - 1));
            url += theme_id;

//alert(url);
//return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        $("#ElementData").html('');

                        $("#ODRThemeListContent").html('');
                        $("#ODRThemeListContent").html(data.d.html).fadeIn('fast');

                        InitMasterContent();
                        InitDerivativeContent();
                    }
                    else {
                        // An error has occurred.
                        // Show Error message dialog
                        alert(data.d);
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        });
    }

    function InitMasterContent() {
        // Hide empty theme elements in the master theme area
        $("#ODRThemeListDesign_master").find(".ODRThemeElement").each(function() {
            if ( $(this).find('.ODRDataField').length == 0 )
                $(this).hide();
        });

        // Create overlay divs for each of the datafields in the master theme area
        resizeOverlayDivs();

        $("#ODRThemeListDesign_master").hide();

        $("#ODRThemeListDesign_derivative").find(".ODRDataField").each(function() {
            var id_data = $(this).attr('id').split(/_/);
            var datafield_id = id_data[1];

            $("#Field_" + datafield_id + "_overlay").removeClass('ODRDetachedDatafield').addClass('ODRAttachedDatafield').attr('title', 'This datafield is currently being used by the selected Theme');
        });

        $(".ODROverlayDiv").unbind('click').click(function() {

            if ( $(this).hasClass('ODRInvalidDatafield') )
                return;

            var datafield_id_data = $(this).attr('id').split(/_/);
            var datafield_id = datafield_id_data[1];

            if ( $(this).hasClass('ODRAttachedDatafield') ) {
                if ( confirm('Are you sure you want to remove this datafield from the theme?') ) {
                    // Locate the theme element the datafield is currently attached to
                    var theme_element_id_data = $("#Field_" + datafield_id).parent().parent().attr('id').split(/_/);
                    var theme_element_id = theme_element_id_data[1];

                    DetachDatafield(datafield_id, theme_element_id);
                }
            }
            else if ( $(this).hasClass('ODRDetachedDatafield') ) {
//                var target_theme_id = $("#target_theme_id");
                // Just attach the datafield to the first theme element in the theme for now
                var theme_element_id_data = $("#ODRThemeListDesign_derivative").find(".ODRThemeElement").first().attr('id').split(/_/);
                var theme_element_id = theme_element_id_data[1];

                AttachDatafield(datafield_id, theme_element_id);
            }
        });

        // Accordion stuff
        $(".ODRThemeListContentHeader").unbind('click').click(function() {
            if ( $(this).next().is(':hidden') ) {
                $(this).next().show();
                $(this).find('i').removeClass('fa-caret-up').addClass('fa-caret-down');
            }
            else {
                $(this).next().hide();
                $(this).find('i').addClass('fa-caret-up').removeClass('fa-caret-down');
            }
        });

        // Resize all overlay divs on window size
        $(window).unbind('resize');
        $(window).resize(function() {
            WindowResizeInterval = window.clearInterval(WindowResizeInterval);
            WindowResizeInterval = window.setInterval("resizeOverlayDivs()", 50);
        });
    }

    var WindowResizeInterval = "";
    function resizeOverlayDivs() {
        WindowResizeInterval = window.clearInterval(WindowResizeInterval);

        // Attach an overlay div of sorts over each datafield
        $(".ODROverlayDiv").each(function() {
            // Need dimensions of parent div...
            var height = $(this).parent().css('height');
            var width = $(this).parent().css('width');

            // Apply dimensions of parent div to loading div
            $(this).css({"height": height, "line-height": height, "width": width});

            if ( $(this).hasClass('ODRInvalidDatafield') )
                $(this).attr('title', "This datafield can't be used by the selected Theme");
            else
                $(this).attr('title', "This datafield is currently not being used by the selected Theme");
        });
    }

    function InitDerivativeContent() {

        $("#ODRThemeListDesign_derivative").find(".ODRThemeProperties").unbind('click').click(function() {
            // Grab the id of the theme to load
            var theme_id = $(this).attr('rel');

            // Load form for current theme if not already loaded
            var url = '{{ path('odr_design_get_theme_properties', { 'theme_id': 0 } ) }}';
            url = url.substring(0, (url.length - 1));
            url += theme_id;

//alert(url);
//return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        $("#ElementData").html('');
                        $("#ElementData").html(data.d).fadeIn('fast');
                        InitThemePropertyForm();
                    }
                    else {
                        // An error has occurred.
                        // Show Error message dialog
                        alert(data.d);
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        });

        $("#ODRThemeListDesign_derivative").find(".ODRAddThemeElement").unbind('click').click(function() {
            // I think this option is always available, but just incase...
            if ( $(this).hasClass('fa-muted') )
                return;

            var theme_id = $(this).attr('rel');

            var url = '{{ path('odr_design_add_theme_element', { 'theme_id': 0 }) }}';
            url = url.substring(0, url.length-1) + theme_id;

//alert( url );
//return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        // Clear right slideout
                        $("#ElementData").html("");

                        // Grab ID of new theme element
                        var theme_element_id = data.d.theme_element_id;
                        var datatype_id = data.d.datatype_id;

                        // Create a fake theme element and force a save of theme element order
                        $("#FieldArea_" + datatype_id).prepend("<div id=\"ThemeElement_" + theme_element_id + "\" class=\"ODRThemeElement pure-u-1\"></div>");
                        SaveThemeElementOrder("#FieldArea_" + datatype_id);

                        // Reload to get actual theme element contents
                        ReloadThemeElement(theme_element_id);
                    }
                    else {
                        // An error has occurred.
                        // Show Error message dialog
                        alert(data.d);
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        });

        $("#ODRThemeListDesign_derivative").find(".ODRDeleteThemeElement").unbind('click').click(function() {
            // Don't allow deletion of a theme element that has datafields or a child/linked datatype attached to it
            if ( $(this).hasClass('fa-muted') )
                return;

            var theme_element_id_data = $(this).parent().parent().parent().parent().attr('id').split(/_/);
            var theme_element_id = theme_element_id_data[1];

            if ( confirm("Are you sure you want to delete this theme element?") ) {
                var url = '{{ path('odr_design_delete_theme_element', { 'theme_element_id': 0 } ) }}';
                url = url.substring(0, (url.length - 1));
                url += theme_element_id;

//alert( url );
//return;

                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: url,
                    dataType: "json",
                    success: function(data, textStatus, jqXHR) {
                        if(data.r == 0) {
                            // Remove theme element from page
                            $("#ThemeElement_" + theme_element_id).remove();

                            // No need to update theme element property icons, since it no longer exists
                            // Also don't need to update order of theme elements
                        }
                        else {
                            // Notify of failure
                            alert(data.d);
                        }
                    },
                    complete: function(jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {

                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                        }
                    }
                });
            }
        });


        $("#ODRThemeListDesign_derivative").find(".ODRDatatypeProperties").unbind('click').click(function() {
            // TODO
        });

        $("#ODRThemeListDesign_derivative").find(".ODRThemeElementProperties").unbind('click').click(function() {
            // Load Properties into Element Data
            var theme_element_id_data = $(this).parent().parent().parent().parent().attr('id').split(/_/);
            var theme_element_id = theme_element_id_data[1];

            // Load form for current datfield if not already loaded
            $("#ElementData").hide().html("");
            var url = '{{ path('odr_design_get_theme_element_properties', { 'theme_element_id': 0 } ) }}';
            url = url.substring(0, (url.length - 1));
            url += theme_element_id;

//alert( url );
//return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        $("#ElementData").html('');
                        $("#ElementData").html(data.d).fadeIn('fast');
                        InitThemeElementPropertyForm();
                    }
                    else {
                        // An error has occurred.
                        // Show Error message dialog
                        alert(data.d);
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        });

        $("#ODRThemeListDesign_derivative").find(".ODRDataField").unbind('click').click(function() {

            // Don't allow changing theme_datafield properties for a table theme
            if ( $(this).hasClass('ODRTableThemeDatafield') )
                return;

            var id_data = $(this).attr('id').split(/_/);
            var datafield_id = id_data[1];

            var target_theme_id = $("#target_theme_id").val();

            // Load form for current datafield if not already loaded
            $("#ElementData").hide().html("");
            var url = '{{ path('odr_design_load_theme_datafield', { 'datafield_id': 0, 'theme_id': 0 } ) }}';
            url = url.substring(0, (url.length - 3));
            url += datafield_id + '/' + target_theme_id;

//alert( url );
//return;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        $("#ElementData").html('');
                        $("#ElementData").html(data.d).fadeIn('fast');
                        InitThemeDatafieldPropertyForm(datafield_id);
                    }
                    else {
                        // An error has occurred.
                        // Show Error message dialog
                        alert(data.d);
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {

                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }

                }
            });
        });

        // Sortable ThemeElements
        var starting_fieldarea = null;
        $(".ODRFieldArea").sortable("destroy").sortable({

            start: function( event, ui ) {
                // Store where the theme element started
                starting_fieldarea = $(ui.helper).parent().attr('id');

                // Hide the div that is being dragged around
                $(ui.helper).hide();
                // Style the placeholder to more closely match the datafield being drug around
                $(ui.placeholder).addClass( $(ui.helper).attr('class') );
                $(ui.placeholder).css( 'height', $(ui.helper).height() );
                $(ui.placeholder).css( 'width', $(ui.helper).width() * 0.95 );
            },
            stop: function( event, ui ) {
                // Grab where it ended
                var ending_fieldarea = $(ui.item).parent().attr('id');

                // If the theme element ended up in a different fieldarea, don't save the change and revert the layout
                if (starting_fieldarea == ending_fieldarea) {
//alert('legal');
                    SaveThemeElementOrder($(ui.item).parent());
                }
                else {
//alert('illegal');
                    $(".ODRFieldArea").sortable('cancel');
                }

                // Unhide the object that was being dragged around
                $(ui.item).show();
                $(ui.item).removeAttr('style');
                starting_fieldarea = null;
            },
            placeholder: "ui-state-highlight",
            connectWith: ".ODRFieldArea"
        });
        $(".ODRFieldArea").disableSelection();

        // Sortable DataFields
        var starting_theme_element = null;
        $(".ODRInnerBox").sortable("destroy").sortable({

            items: "> .ODRDataField",   // Only attach the event to a subset of datafields
            start: function( event, ui ) {
                // Store where the datafield started
                starting_theme_element = $(ui.helper).parent().parent().attr('id');
                starting_fieldarea = $(ui.helper).parent().parent().parent().attr('id');

                // Hide the div that is being dragged around
                $(ui.helper).hide();
                // Style the placeholder to more closely match the datafield being drug around
                $(ui.placeholder).addClass( $(ui.helper).attr('class') );
                $(ui.placeholder).css( 'height', $(ui.helper).height() );
                $(ui.placeholder).css( 'width', $(ui.helper).width() * 0.95 );
            },
            stop: function( event, ui ) {
                // Grab where the datafield ended
                var ending_theme_element = $(ui.item).parent().parent().attr('id');
                var ending_fieldarea = $(ui.item).parent().parent().parent().attr('id');

//alert( 'start_ted: ' + starting_theme_element + ' end_ted: ' + ending_theme_element );
//alert( 'start_fieldarea: ' + starting_fieldarea + ' end_fieldarea: ' + ending_fieldarea );

                // If the datafield ended up in the same fieldarea...
                if (starting_fieldarea == ending_fieldarea) {
//alert('legal');
                    // Just need to save the destination theme element
                    SaveDatafieldOrder($(ui.item).parent(), starting_theme_element, ending_theme_element);
                }
                else {
//alert('illegal');
                    // ...if not, don't save the change and revert the layout
                    $(".ODRInnerBox").sortable('cancel');
                }

                // Unhide the object that was being dragged around
                $(ui.item).show();

                // jQuery Sortable attaches a display: block style to these elements...get rid of it
                $(ui.item).removeAttr('style');

                // Reset for the next sortable call
                starting_theme_element = null;
                starting_fieldarea = null;
                $(ui.placeholder).removeAttr('css');
            },
/*
             // Triggers each time the datafield moves into a different TEDs
             over: function( event, ui ) {
                 if ( $(ui.placeholder).hasClass('ODRActiveIcon') )
                     $(ui.placeholder).removeClass('ODRActiveIcon');
                 else
                     $(ui.placeholder).addClass('ODRActiveIcon');
             },
*/
            placeholder: "ui-state-highlight",
            connectWith: ".ODRInnerBox"
        });
        $(".ODRInnerBox").disableSelection();

        // Prevent re-ordering of theme_elements and datafields inside the master theme
        $("#ODRThemeListDesign_master").find(".ODRFieldArea").sortable("destroy");
        $("#ODRThemeListDesign_master").find(".ODRInnerBox").sortable("destroy");
        $(".ODRThemeElement > .ODRInnerBox > .ODRDataType").parent().sortable("destroy");    // prevent sortable datafields attaching before/after datatypes
    }


    var SaveThemePropertyInterval = [];
    function SaveThemeProperties(datatype_id, theme_id, reload_theme_list) {
        if(SaveThemePropertyInterval[theme_id] != undefined)
            SaveThemePropertyInterval[theme_id] = window.clearInterval(SaveThemePropertyInterval[theme_id]);

        var url = '{{ path('odr_design_get_theme_properties', { 'theme_id': 0 } ) }}';
        url = url.substring(0, (url.length - 1));
        url += theme_id;

//alert( url );
//return;

        var form_data = $("#ThemePropertiesForm_" + theme_id).serialize();
        $.ajax({
            type: 'POST',
            url: url,
            data: form_data,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    notifySaved();

                    // Forcibly reload theme div
                    if (reload_theme_list)
                        LoadThemeList(datatype_id);
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function InitThemePropertyForm() {
        // Init Theme Properties forms
        $("#ElementData").find(".ODRDeleteTheme").each(function() {
            var theme_id_data = $(this).attr('id').split(/_/);
            var theme_id = theme_id_data[1];

            var datatype_id = $(this).attr('rel');

            $(this).unbind('click').click(function() {
                if ( $(this).hasClass('pure-button-disabled') ) {
                    return;
                }
                else if( confirm("Are you certain you want to delete this Theme?")) {
                    DeleteTheme(datatype_id, theme_id);
                }
            });
        });

        $("#ElementData").find("input").each(function() {
            // Grab Theme id
            var theme_id_data = $("#ElementData").children(".ODRThemePropertiesForm").first().attr('id').split(/_/);
            var theme_id = theme_id_data[1];

            var datatype_id = $("#ThemePropertiesForm_" + theme_id).attr('rel');

            // Save changes
            if($(this).is(":checkbox")) {
                $(this).unbind('change').change(function() {
                    SaveThemePropertyInterval[theme_id] = window.clearInterval(SaveThemePropertyInterval[theme_id]);
                    SaveThemePropertyInterval[theme_id] = window.setInterval("SaveThemeProperties(" + datatype_id + "," + theme_id + ", true)", SaveTimeout);
                });
            }
            else {
                $(this).unbind('keyup');
                $(this).unbind('paste');
                $(this).on('keyup paste', function() {
                    //
                    if ( $(this).hasClass('ODRThemeName') ) {   // inline update of theme name  TODO - error handling?
                        var text = $(this).val();
                        $("#ODRTheme_" + theme_id + "_name").html(text);
                    }

                    SaveThemePropertyInterval[theme_id] = window.clearInterval(SaveThemePropertyInterval[theme_id]);
                    SaveThemePropertyInterval[theme_id] = window.setInterval("SaveThemeProperties(" + datatype_id + "," + theme_id + ", false)", SaveTimeout);
                });
            }
        });
    }

    function DeleteTheme(datatype_id, theme_id) {
        var url = '{{ path('odr_design_delete_theme', { 'theme_id': 0 } ) }}';
        url = url.substring(0, (url.length - 1));
        url += theme_id;

//alert( url );
//return;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    $("#ODRThemeListContent").html('');

                    // Reload theme list div
                    $("#ODRThemeListHeader").fadeOut('fast');
                    LoadThemeList(datatype_id);
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    var SaveThemeElementPropertyInterval = [];
    function SaveThemeElementProperties(theme_element_id) {
        if (SaveThemeElementPropertyInterval[theme_element_id] != undefined)
            SaveThemeElementPropertyInterval[theme_element_id] = window.clearInterval(SaveThemeElementPropertyInterval[theme_element_id]);

        var url = '{{ path('odr_design_get_theme_element_properties', { 'theme_element_id': 0 } ) }}';
        url = url.substring(0, (url.length - 1));
        url += theme_element_id;

//alert( url );
//return;

        var form_data = $("#ThemeElementPropertiesForm_" + theme_element_id).serialize();
        $.ajax({
            type: 'POST',
            url: url,
            data: form_data,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    // Grab css strings from the ajax return
                    var med_width_old = data.widths.med_width_old;
                    var xl_width_old = data.widths.xl_width_old;
                    var med_width_current = data.widths.med_width_current;
                    var xl_width_current = data.widths.xl_width_current;

                    // Update the theme element's width classes if necessary
                    if (med_width_current != undefined && med_width_old != med_width_current)
                        $("#ThemeElement_" + theme_element_id).removeClass('pure-u-md-' + med_width_old).addClass('pure-u-md-' + med_width_current);
                    if (xl_width_current != undefined && xl_width_old != xl_width_current)
                        $("#ThemeElement_" + theme_element_id).removeClass('pure-u-xl-' + xl_width_old).addClass('pure-u-xl-' + xl_width_current);

                    notifySaved();
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function InitThemeElementPropertyForm() {
        // Init Theme Element Properties forms
        $("#ElementData .ODRThemeElementPropertiesForm").find("select").each(function() {
            var theme_element_id_data = $("#ElementData .ODRThemeElementPropertiesForm").attr('id').split(/_/);
            var theme_element_id = theme_element_id_data[1];

            $(this).unbind('change').change(function() {
                SaveThemeElementPropertyInterval[theme_element_id] = window.clearInterval(SaveThemeElementPropertyInterval[theme_element_id]);
                SaveThemeElementPropertyInterval[theme_element_id] = window.setInterval("SaveThemeElementProperties('" + theme_element_id + "')", SaveTimeout);
            });
        });
    }

    var SaveThemeDatafieldPropertyInterval = [];
    function SaveThemeDatafieldProperties(datafield_id, theme_datafield_id) {
        if(SaveThemeDatafieldPropertyInterval[theme_datafield_id] != undefined)
            SaveThemeDatafieldPropertyInterval[theme_datafield_id] = window.clearInterval(SaveThemeDatafieldPropertyInterval[theme_datafield_id]);

        var url = '{{ path('odr_design_save_theme_datafield', {'theme_datafield_id': 0}) }}';
        url = url.substring(0, url.length-1);
        url += theme_datafield_id;

//alert( url );
//return;


        var post_data = $("#ThemeDatafieldPropertiesForm_" + theme_datafield_id).serialize();
        $.ajax({
            type: 'POST',
            url: url,
            dataType: "json",
            data: post_data,
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    // Grab css strings from the ajax return
                    var med_width_old = data.widths.med_width_old;
                    var xl_width_old = data.widths.xl_width_old;
                    var med_width_current = data.widths.med_width_current;
                    var xl_width_current = data.widths.xl_width_current;

                    // Update the theme element's width classes if necessary
                    if (med_width_current != undefined && med_width_old != med_width_current)
                        $("#Field_" + datafield_id).removeClass('pure-u-md-' + med_width_old).addClass('pure-u-md-' + med_width_current);
                    if (xl_width_current != undefined && xl_width_old != xl_width_current)
                        $("#Field_" + datafield_id).removeClass('pure-u-xl-' + xl_width_old).addClass('pure-u-xl-' + xl_width_current);

                    notifySaved();

                    // Forcibly reload slideout
                    $("#ElementData").html("");
                    $("#Field_" + datafield_id).trigger('click');
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function InitThemeDatafieldPropertyForm(df_id) {
        // Attach event handlers to the css width selectors in the datafield properties slideout
        $("#ElementData .ODRThemeDatafieldPropertiesForm").find("select").each(function() {
            // Grab ThemeDatafield id
            var theme_datafield_id_data = $("#ElementData .ODRThemeDatafieldPropertiesForm").attr('id').split(/_/);
            var theme_datafield_id =  theme_datafield_id_data[1];

            var datafield_id = df_id;

            // Save changes
            $(this).unbind('change').change(function() {
                SaveThemeDatafieldProperties(datafield_id, theme_datafield_id);
            });
        });
    }

    var SaveThemeDatatypePropertyInterval = [];
    function SaveThemeDatatypeProperties(theme_datatype_id) {
        // TODO
    }

    function InitThemeDatatypePropertyForm() {
        // TODO
    }


    function SaveThemeElementOrder(container) {

        var i = 0;
        var theme_element_ids = {};
        $(container).children(".ODRThemeElement").each(function() {
            var id_data = $(this).attr('id').split(/_/);
            theme_element_ids[i] = id_data[1];
            i++;
        });

        var url = '{{ path('odr_design_save_theme_element_order') }}';

//alert( url );
//alert( theme_element_ids );
//return;

        $.ajax({
            cache: false,
            type: 'POST',
            data: theme_element_ids,
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function AttachDatafield(datafield_id, theme_element_id) {

        var url = '{{ path('odr_design_attach_datafield', {'datafield_id': 0, 'theme_element_id': 0} ) }}';
        url = url.substring(0, url.length-3);
        url += datafield_id + '/' + theme_element_id;

//alert( url );
//return;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    // Reload theme element where the datafield is now
                    ReloadThemeElement(theme_element_id);

                    $("#Field_" + datafield_id + "_overlay").removeClass("ODRDetachedDatafield").addClass("ODRAttachedDatafield").attr('title', 'This datafield is currently being used by the selected Theme');
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function DetachDatafield(datafield_id, theme_element_id) {

        var url = '{{ path('odr_design_detach_datafield', {'datafield_id': 0, 'theme_element_id': 0} ) }}';
        url = url.substring(0, url.length-3);
        url += datafield_id + '/' + theme_element_id;

//alert( url );
//return;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    // Reload theme element where the datafield is now
                    ReloadThemeElement(theme_element_id);

                    $("#Field_" + datafield_id + "_overlay").removeClass("ODRAttachedDatafield").addClass("ODRDetachedDatafield").attr('title', 'This datafield is currently not being used by the selected Theme');
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function SaveDatafieldOrder(container, initial_theme_element_id, ending_theme_element_id) {

        var i = 0;
        var datafield_ids = {};
        $(container).children(".ODRDataField").each(function() {
            var id_data = $(this).attr('id').split(/_/);
            datafield_ids[i] = id_data[1];
            i++;
        });

        // Get the id numbers of the passed-in theme elements
        var theme_element = initial_theme_element_id.split(/_/);
        initial_theme_element_id = theme_element[1];
        var theme_element = ending_theme_element_id.split(/_/);
        ending_theme_element_id = theme_element[1];

        // Theme ID
        var url = '{{ path('odr_design_save_datafield_order', {'initial_theme_element_id': 0, 'ending_theme_element_id': 0} ) }}';
        url = url.substring(0, url.length-3);
        url += initial_theme_element_id + '/' + ending_theme_element_id;

//alert( url );
//return;

        $.ajax({
            cache: false,
            type: 'POST',
            data: datafield_ids,
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if(data.r == 0) {
                    // Don't reload a ThemeElement div unless a DataField got moved between different ThemeElements
                    if ( initial_theme_element_id != ending_theme_element_id ) {
                        // Reload starting ThemeElement if all datafields got moved out of it
                        if ( $("#ThemeElement_"+initial_theme_element_id).children(".ODRDataField").length == 0 ) {
//                        ReloadThemeElement(initial_theme_element_id);

                            var icons = {"ODRAddChildtype": 1, "ODRLinkDatatype": 1, "ODRDeleteThemeElement": 1};
                            setThemeElementIcons(initial_theme_element_id, icons);
                        }

                        // Reload ending ThemeElement if it now posesses a single datafield (would have been empty before)
                        if ( $("#ThemeElement_"+ending_theme_element_id).children(".ODRDataField").length == 1 ) {
//                        ReloadThemeElement(ending_theme_element_id);

                            var icons = {"ODRAddChildtype": 0, "ODRLinkDatatype": 0, "ODRDeleteThemeElement": 0};
                            setThemeElementIcons(ending_theme_element_id, icons);
                        }

                    }
                }
                else {
                    // An error has occurred.
                    // Show Error message dialog
                    alert(data.d);
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    var theme_element_ajax = [];
    function ReloadThemeElement(theme_element_id) {

        var append = true;
        var theme_element = $("#ThemeElement_" + theme_element_id);
        var element = $(theme_element).prev();
        if ( $(element).attr('class') === undefined ) {
            append = false;
            element = $(theme_element).parent();
        }

        var url = '{{ path('odr_derivative_reload_theme_element', { 'source_datatype_id': 0, 'theme_element_id': 0 }) }}';
        url = url.substring(0, url.length-3);
        url += {{ datatype.id }} + '/' + theme_element_id;

//alert( url );
//return;

        if ( $("#ThemeElement_" + theme_element_id + "_loading_div").length == 0 ) {
            // Create a loading div to block off the theme_element
            insertLoadingDiv("ThemeElement_" + theme_element_id);
        }
        else {
            // A reload request for this theme element is currently in progress...abort the original one so it doesn't also modify page html
            var xhr = theme_element_ajax[theme_element_id];
            xhr.abort();
        }

        theme_element_ajax[theme_element_id] = $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: 'json',
            success: function(data, textStatus, jqXHR) {
                // Remove old theme element
                $(theme_element).fadeOut();
                $(theme_element).remove();

                // Insert new html
                if (append)
                    $(element).after(data.d.html);
                else
                    $(element).prepend(data.d.html);

                InitDerivativeContent();

                theme_element_ajax[theme_element_id] = null;
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {

                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function insertLoadingDiv(parent_div_id) {

        // Need dimensions of parent div...
        var element = $("#" + parent_div_id);
        var height = $(element).css('height');
        var width = $(element).css('width');

        // Create a loading div
        $(element).prepend("<div id=\"" + parent_div_id + "_loading_div\" class=\"ODROverlayDiv ODRReloadDiv\"><strong>Loading...</strong></div>");

        // Apply dimensions of parent div to loading div
        $("#" + parent_div_id + "_loading_div").css({"height": height, "line-height": height, "width": width});
    }
</script>

{# contains setDatatypeIcons() and setThemeElementIcons() #}
{% include 'ODRAdminBundle:Displaytemplate:icon_functions.html.twig' %}

{% endspaceless %}