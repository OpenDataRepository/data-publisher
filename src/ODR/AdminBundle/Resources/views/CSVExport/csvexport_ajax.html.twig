{% spaceless %}

{% set datatype = datatype_array[initial_datatype_id] %}

<h1 class="grid_12 no-margin-top-phone">
    <span>CSV Export &raquo; {{ datatype.dataTypeMeta.shortName }}</span>
</h1>

<form id="csvexport_form" style="margin:10px;{#display:none;#}" action="{{ path('odr_csv_export_start') }}">
    <input type="hidden" value="{{ odr_tab_id }}" name="odr_tab_id"/>
    <input type="hidden" value="{{ datatype.id }}" name="datatype_id"/>

    <table><tbody>
    <tr>
        <td>Column delimiter: </td>
        <td>
            <select name="csv_export_delimiter" id="delimiter_select">
                <option value="">Select a delimiter...</option>
                <option value="tab">{tab}</option>
                <option value="space">{space}</option>
                <option value="comma">{comma}</option>
                <option value="semicolon">{semicolon}</option>
                <option value="colon">{colon}</option>
                <option value="pipe">{pipe}</option>
            </select>
        </td>
    </tr>
    <tr>
        <td>Multiple Radio/Select delimiter: </td>
        <td>
            <select name="csv_export_secondary_delimiter" id="secondary_delimiter_select" disabled title="Not needed, since no multiple radio/select field selected for export">
                <option value="">Select a delimiter...</option>
{#
                <option value="tab">{tab}</option>
                <option value="space">{space}</option>
                <option value="comma">{comma}</option>
#}
                <option value="semicolon">{semicolon}</option>
                <option value="colon">{colon}</option>
                <option value="pipe">{pipe}</option>
            </select>
        </td>
    </tr>
    </tbody>
    </table>

</form>

<div style="margin: 10px;">
    <button class="pure-button" type="button" onclick="selectAll();">Select All</button>
    &nbsp;
    <button class="pure-button" type="button" onclick="deselectAll();">Deselect All</button>
</div>

{% include 'ODRAdminBundle:CSVExport:csvexport_area.html.twig' with {'datatype_array': datatype_array, 'initial_datatype_id': initial_datatype_id, 'theme_id': theme_id} %}

<div style="margin: 10px;">
    <button class="pure-button pure-button-primary" type="button" onclick="doCSVExport();">Export</button>
</div>

{% endspaceless %}

<style>
    .ODRUnselectedDatafield {
        background-color: #ff0000;
        opacity: 0.4;
    }
    .ODRSelectedDatafield {
        background-color: #00ff00;
        opacity: 0.4;
    }
</style>

<script>

$(function() {
    initPage();
    window.scrollTo(0,0);
});


function initPage() {

    // Hide all TEDs without input fields
    $(".ODRThemeElement").each(function() {
        var found = false;
        $(this).find("input").each(function() {
            found = true;
            return false;
        });

        if (!found)
            $(this).hide();
    });

    // Attach an overlay div of sorts over each datafield 
    $(".ODROverlayDiv").each(function() {
        // Need dimensions of parent div...
        var height = $(this).parent().css('height');
        var width = $(this).parent().css('width');

        // Apply dimensions of parent div to loading div
        $(this).css({"height": height, "line-height": height, "width": width});

        $(this).attr('title', "This datafield will not be exported");
    });

    $(".ODRCSVExport").unbind('click');
    $(".ODRCSVExport").click(function() {
        if ( $(this).hasClass('ODRUnselectedDatafield') ) {
            $(this).attr('title', 'This datafield will be exported');
            $(this).removeClass('ODRUnselectedDatafield').addClass('ODRSelectedDatafield');

            if ( $(this).hasClass('ODRSecondaryDelimiter') ) {
                $("#secondary_delimiter_select").removeAttr('disabled');
                $("#secondary_delimiter_select").removeAttr('title');
            }
        }
        else {
            $(this).attr('title', 'This datafield will not be exported');
            $(this).addClass('ODRUnselectedDatafield').removeClass('ODRSelectedDatafield');

            if ( $(this).hasClass('ODRSecondaryDelimiter') ) {
                $("#secondary_delimiter_select").attr('disabled', 'disabled');
                $("#secondary_delimiter_select").attr('title', 'This delimiter is not needed because no multiple radio/select field are selected for export');
            }
        }
    });
}

function selectAll() {
    $(".ODRCSVExport").each(function() {
        if ( $(this).hasClass('ODRUnselectedDatafield') )
            $(this).trigger('click');
    });
}

function deselectAll() {
    $(".ODRCSVExport").each(function() {
        if ( $(this).hasClass('ODRSelectedDatafield') )
            $(this).trigger('click');
    });
}

function doCSVExport() {
    // Require a delimiter before exporting...
    if ( $("#delimiter_select").val() == '') {
        alert('No column delimiter selected');
        return;
    }
    var delimiter = $("#delimiter_select").val();

    // Require a secondary delimiter if a multiple radio/select field is being exported...
    if ( !$("#secondary_delimiter_select").is(':disabled') && $("#secondary_delimiter_select").val() == '' ) {
        alert('No multiple radio/select delimiter selected');
        return;
    }
    var secondary_delimiter = $("#secondary_delimiter_select").val();

    if ( delimiter == secondary_delimiter ) {
        alert("Delimiters can't be the same");
        return;
    }

    // Delete any datafields already marked for export so a new list can be constructed
    $(".ODRExportEntry").remove();

    // Grab which fields to export
    var do_export = false;
    $(".ODRCSVExport").each(function() {
        if ( $(this).hasClass('ODRSelectedDatafield') ) {
            // Grab the ID of the field
            var datafield_id = $(this).attr('rel');

            do_export = true;
            var element = $("<input>", {id: "Field_" + datafield_id + "_export", class: "ODRExportEntry", type: "hidden", value: datafield_id, name: "datafields[]"});
            $("#csvexport_form").append(element);
        }
    });

    if ( !do_export ) {
        alert( 'No datafields selected for export' );
        return;
    }

    if ( !confirm('Are you sure you want to export?') )
        return;


    var data = $("#csvexport_form").serialize();
    var url = $("#csvexport_form").attr('action');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        dataType: 'json',
        success: function(data, textStatus, jqXHR) {
            if ( data.r == 0 ) {
                // This should end up forcing an AJAX load by way of the hashchange event in navigation.html.twig...
                alert( 'CSV Export in progress' );
                var url = '{{ path('odr_job_list') }}';
                UpdateURL(url);
            }
            else {
                alert( data.d );
            }
        },
        complete: function(jqXHR, textStatus) {
            // Get the xdebugToken from response headers
            var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

            // If the Sfjs object exists
            if (typeof Sfjs !== "undefined") {
                // Grab the toolbar element
                var currentElement = $('.sf-toolbar')[0];

                // Load the data of the given xdebug token into the current toolbar wrapper
                Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
            }
        }
    });

}
</script>
