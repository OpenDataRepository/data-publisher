{% spaceless %}

{% set datatype = datatype_array[initial_datatype_id] %}
{% set datarecord = datarecord_array[initial_datarecord_id] %}
{% set theme = theme_array[initial_theme_id] %}

{% include 'ODRAdminBundle:Display:display_area.html.twig' with {
    'datatype_array': datatype_array,
    'datarecord_array': datarecord_array,
    'theme_array': theme_array,

    'initial_datatype_id': initial_datatype_id,
    'initial_datarecord': datarecord,
    'initial_theme_id': initial_theme_id,

    'datatype_permissions': datatype_permissions,
    'datafield_permissions': datafield_permissions,

    'record_display_view': record_display_view,
    'is_top_level': is_top_level,
} %}

{% if record_display_view == "single" %}
    {% include 'ODRAdminBundle:Default:file_download_dialog.html.twig' with {
        'initial_datarecord_id': initial_datarecord_id,
    } %}
{% endif %}

{% if record_display_view == "single" %}
<script>

    function initPage() {
        // Resize all elements dependent on window size
        $(window).unbind('resize').resize(function() {
            WindowResizeInterval = window.clearInterval(WindowResizeInterval);    // variable WindowResizeInterval defined in common.js
            WindowResizeInterval = window.setInterval("onWindowResize()", 500);
        });

        // Hide child datatypes without theme elements
        $(".ODRChildDatatype").each(function(index,elem) {
            var child_theme_elements = $(elem).find('.ODRThemeElement,.ODRRenderPluginContent');
            if ( child_theme_elements.length == 0 )
                $(elem).parent().parent().addClass('ODRHidden');
        });

        // Resize everything prior to divs being hidden
        onWindowResize();

{% if is_oversized_search_key %}
        $("#ODRSearchKeyWarning").removeClass('ODRHidden');
{% else %}
        $("#ODRSearchKeyWarning").addClass('ODRHidden');
{% endif %}

        // Set up image galleries
        setupImageGalleries();
        // NOTE: do not attach event handlers to images here...setupImageGalleries() will move them around

        // Hide divs for accordion purposes
        setupAccordions();

        // Setup File Downloader
        setupFileDownloader();

        // Attach standard click handlers to tags in the search sidebar...    {# defined in ODRAdminBundle:Default:common_js.html.twig #}
        setupTagTree( $("#ODRSearchSidebar"), 2);
        // Due to potentially having multiple tag fields with different values for display_unselected...
        // Can't initialize all of the tag fields here with a single call
        {# TODO - will need to figure out another solution if something reloads a tag field in Display #}


{% if (odr_wordpress_integrated and theme.themeMeta.disableSearchSidebar == true) or search_key == '' %}
        disableSearchSidebar();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}
{% else %}
        enableSearchSidebar('{{ search_key }}', 'collapsed');    {# defined in ODRAdminBundle:Default:common_js.html.twig #}
{% endif %}

        hideSearchOverlay();    {# defined in Default::common_js.html.twig #}
    }

    function setupFileDownloader() {

        $("a.ODRFileDownload").unbind('click').click(function(event) {
            // Grab necessary attributes
            var file_id = $(this).attr('rel');

            handleFileDownload(event, file_id);    {# defined in Default::file_handling.html.twig #}
        });

        $(".ODRDownloadAllFiles").unbind('click').click(function() {

            if ( $(this).hasClass('fa-muted') )
                return;

            // Locate necessary attributes
            var id_data = $(this).closest(".ODRDataField").first().attr('id').split(/_/);
            var datarecord_id = id_data[1];
            var datafield_id = id_data[2];

            {# defined in ODRAdminBundle:Default:file_download_dialog.html.twig #}
            openFileDownloadDialog({{ initial_datarecord_id }}, datarecord_id, datafield_id);
        });
    }

    {% if record_display_view == "single" %}
    // Need this for reloading attempts on images which aren't decrypted
    var missing_images = {};
    {% endif %}

    $(function() {
        initPage();

        // $(".MenuDesignArea").remove();
        window.scrollTo(0,0);

        {% if notify_of_sync is defined and notify_of_sync == true %}
        {% include 'ODRAdminBundle:Theme:theme_sync_warning.js.twig' with {
            'datatype_id': datatype.id,
            'theme_id': theme.id,
            'page_type': 'display',
            'search_key': search_key,
        }%}
        {% endif %}
    });
{% endif %}

</script>
{% endspaceless %}
