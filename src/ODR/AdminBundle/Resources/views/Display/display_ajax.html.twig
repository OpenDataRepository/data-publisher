{% spaceless %}

{% set datatype = datatype_array[initial_datatype_id] %}

{% if record_display_view == "single" %}
<h1 class="no-margin-top-phone">
    <span>Search Result &raquo; {{ datatype.dataTypeMeta.shortName }}</span>
    <a id="page_settings" name="page_settings"><i class="fa fa-md fa-fw fa-cog"></i></a>
</h1>
{# Record View Menu #}
    <div id="page_settings_menu" class="pure-menu pure-menu-horizontal" style="display:none;">
        <ul class="pure-menu-list">
            <li class="pure-menu-item">
                <a name="ChooseView" id="ChooseView" class="pure-menu-link">Choose View</a>
            </li>
            <li class="pure-menu-item">
                <a name="CustomizeView" id="CustomizeView" class="pure-menu-link">Customize View</a>
            </li>
        </ul>
    </div>



{# End Record View Menu #}
{% endif %}

{% include 'ODRAdminBundle:Display:display_area.html.twig' with {
    'datatype_array': datatype_array,
    'datarecord_array': datarecord_array,
    'theme_id': theme_id,

    'initial_datatype_id': initial_datatype_id,
    'initial_datarecord_id': initial_datarecord_id,

    'is_top_level': is_top_level,
} %}

{% if record_display_view == "single" %}
    {%  include 'ODRAdminBundle:Default:file_download_dialog.html.twig' %}
{% endif %}

{% if record_display_view == "single" %}
<script>

    var record_datatype_id = {{ datatype.id }};
    var record_theme_id = {{ theme_id }};
    function initPage() {

        // TODO What is this for?
        // Resize all elements dependent on window size
        $(window).unbind('resize').resize(function() {
            // WindowResizeInterval = window.clearInterval(WindowResizeInterval);      // WindowResizeInterval variable defined in common.js
            // WindowResizeInterval = window.setInterval("onWindowResize()", 500);
        });

        // Resize everything prior to divs being hidden
        // onWindowResize();

        // Set up image galleries
        setupImageGalleries();

        // Hide divs for accordion purposes
        setupAccordions();

        // Setup Theme System
        setupThemeSystem();

        // Setup File Downloader
        setupFileDownloader();

        $("#page_settings").unbind('click').click(function(event) {
            // Load content after reveal...
            $("#page_settings_menu").toggle('fast');
        });
    }

    function setupFileDownloader() {

        $(".ODRFileDownloadProgress").hide();

        $("a.ODRFileDownload").click(function(event) {
            // Grab necessary attributes
            var file_id = $(this).attr('rel');
            var href = $(this).attr('href');

            // Prevent the click handler for <tr> elements from firing if a file download href is clicked
            var short_form = false;
            var can_cancel = false;
            handleFileDownload(event, file_id, href, short_form, can_cancel);    // defined in Default::file_handling.html.twig
        });

        $(".ODRDownloadAllFiles").click(function() {

            if ( $(this).hasClass('fa-muted') )
                return;

            // Grab necessary attributes
            var element = $(this);

            var id_data = $(this).closest(".ODRDataField").first().attr('id').split(/_/);
            var datarecord_id = id_data[1];
            var datafield_id = id_data[2];

            openFileDownloadDialog({{ initial_datarecord_id }}, datarecord_id, datafield_id);      // defined in ODRAdminBundle:Default:file_download_dialog.html.twig
        });


    }

    function setupThemeSystem() {
        // Init the choose view button
        $("#ChooseView").click(function(event) {
            modal_options = {
                title: "Choose from available views:",
                // body: "<div>Loading will not display if body is set.</div>",
                // loading: true,  // Force loading to display
                buttons: [
                    {
                        id: 'ODRApplyView',
                        text: 'Apply View',
                        // secondary: true, // Secondary button style
                        disabled: true, // Set button style disabled
                        title: 'Click to apply the selected view..',
                        click: function() {
                        }
                    }
                ]
            };
            openODRRemodal(modal_options)
            /*
            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function (data, textStatus, jqXHR) {
                    $("#ODRRemodalBody").html( data.d );
                    // Init using callback
                    callback();
                    $("#ODRRemodalLoading").fadeOut('150', function() {
                        $("#ODRFileDownloadFormWrapper").show();
                        $("#ODRRemodalButtons").show();
                        resetRemodalInnerHeight()
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Don't need to create a jGrowl...close the dialog so it's not in some half-initialized state
                    var inst = $('[data-remodal-id=ODRRemodal]').remodal();
                    inst.close();
                },
                complete: function (jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                    }
                }
            });
            */
        })
    }

    function chooseView() {

    }

    function ReloadDatafield(datarecord_id, datafield_id) {

        var datafield_div = $("#Field_" + datarecord_id + "_" + datafield_id);
        var theme_id = $(datafield_div).attr('rel');

        var url = '{{ path('odr_display_reload_datafield', { 'datarecord_id': 0, 'datafield_id': 0, 'theme_id': 0 }) }}';
        url = url.substring(0, (url.length - 5));
        url += datarecord_id + '/' + datafield_id + '/' + theme_id;

        $(datafield_div).children('form').each(function () {
            $(this).fadeOut();
            $(this).remove();
        });

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function (data, textStatus, jqXHR) {
                if (data.r == 0) {
                    $(datafield_div).append(data.d.html);
                    initPage();
                }
                else {
                    alert(data.d);
                }
            },
            complete: function (jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                }
            }
        });
    }

    $(function() {
        initPage();
        $(".MenuDesignArea").remove();
        window.scrollTo(0,0);
    });
{% endif %}

</script>
{% endspaceless %}
