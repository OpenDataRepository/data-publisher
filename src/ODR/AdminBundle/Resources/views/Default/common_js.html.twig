{% macro write(logged_in) %}
<script>
    {# This is intentionally placed outside the $(function() {...} block #}
    {# jquery3 modified how the 'load' event was handled, and firefox wouldn't trigger this reliably #}
    $(window).on('load', function() {
        // Skip this process for the search page
        if(
            window.location.hash !== ""
            && (
                window.location.hash.substr(1).match(/\/search/)
                || window.location.hash.substr(1).match(/\/app_dev.php\/search/)
                || window.location.hash.substr(1).match(/\/view/)
                || window.location.hash.substr(1).match(/\/app_dev.php\/view/)
                || window.location.hash.substr(1).match(/\/edit/)
                || window.location.hash.substr(1).match(/\/app_dev.php\/edit/)
            )
        ) {
            loadSearchContent(window.location.hash.substr(1))
            return;
        }
        else if ( window.location.hash !== '') {
            // window.location.hash doesn't preserve url encoding...
            var tmp = window.location.href.split('#');
            var url = tmp[1];
            LoadContentFullAjax( url );
        }
{% if logged_in == true %}
        else {
            LoadContentFullAjax('{{ path('odr_dashboard') }}');
        }
{% endif %}
    });

    $(function() {
        // Define a global error handler for ajax calls
        // TODO - jquery 1.12 seems to be autoparsing every json response, and therefore throws ajax errors whenever ODR returns an empty response body
        $(document).ajaxError(function( event, jqxhr, settings, exception ) {
            switch( jqxhr.status ) {
                case 401:
                    ODRLogin();
                    break;

                default:    {# 400, 403, 404, 405, 500, etc #}
                    var response = $.parseJSON( jqxhr.responseText );
                    createJGrowlError(response);
                    break;
            }
        });

        // Custom AJAX history stuff
        $(window).off("hashchange");
        $(window).on("hashchange", function(event) {
            // Needed?
            event.preventDefault();

            // Grab the URL from the browser and reload it
            // Skip this process for the search page
            if(
                window.location.hash.substr(1).match(/\/search/)
                || window.location.hash.substr(1).match(/\/app_dev.php\/search/)
                || window.location.hash.substr(1).match(/\/view/)
                || window.location.hash.substr(1).match(/\/app_dev.php\/view/)
                || window.location.hash.substr(1).match(/\/edit/)
                || window.location.hash.substr(1).match(/\/app_dev.php\/edit/)
                ) {
                loadSearchContent(window.location.hash.substr(1))
                return;
            }

            // Close Menu
            $("#ODRNav").hide();
            $(".overhang").remove();

            // If the hashchange event is manually triggered, event.originalEvent won't be defined...
            var url = '';
            if ( event.originalEvent !== undefined && event.originalEvent.newURL !== undefined ) {
                // Grab the URL from the hashchange event
                var new_url = event.originalEvent.newURL.split('#');
                url = new_url[1];
                if ( url !== undefined ) {
                    // Load the URL as usual
                    LoadContentFullAjax( url );
                }
                else {
                    // Attempt to move back/forward to the homepage...just refresh
                    {#location.replace("{{ path('odr_admin_homepage') }}");#}
                    location.replace( new_url[0] );
                }
            }
            else {
                // Grab the URL from the browser and reload it
                url = window.location.hash.substr(1);
                if ( url !== '' ) {
                    // Load the URL as usual
                    LoadContentFullAjax( url );
                }
                else {
                    // Attempt to move back/forward to the homepage...just refresh
                    location.replace("{{ path('odr_admin_homepage') }}");
                }
            }

            // Locate the <a> element that spawned this event
            $("a.address").each(function() {
                var attr_url = $(this).attr('href').substr(1);
                if ( attr_url == url ) {
                    // Failsafe incase title attribute doesn't exist
                    if ( $(this).attr('title') !== undefined )
                        document.title = $(this).attr('title');
                    else
                        document.title = 'ODR Admin';

                    // Abort loop
                    return false;
                }
            });
        });

        $("a.address").off("click");
        $("a.address").on("click", function(event) {
            // Needed?
            event.preventDefault();

            // Grab the URL
            var data = $(event.delegateTarget).attr("href").split('/');
            var url = data.join('/');
            url = url.replace('#', '');

            // Update the URL and hash
            UpdateURL(url);
        });

    });

    function createJGrowlError(response) {
        var error_text = '<div class="ODRNotificationHeader">' + response.error.code + ' ' + response.error.status_text + ' -- ' + response.error.exception_source + "</div>";
        error_text += '<div class="ODRNotificationText">' + response.error.message + '</div>';

        $.jGrowl(
            error_text,
            {
                theme: "ODRNotification",
                sticky: true,
                openDuration: 250,
                closeDuration: 250
            }
        );
    }

    function ODRLogin() {
        // Extract the current base url
        var baseurl = window.location.href;
        var fragment = '';
        if ( baseurl.indexOf('#') !== -1 ) {
            var pieces = baseurl.split('#');
            baseurl = pieces[0];
            fragment = pieces[1];
        }

        // Save the "app_dev.php" part of the url if needed
        var redirect_url = '/app_dev.php';
        if ( baseurl.indexOf('app_dev.php') === -1 )
            redirect_url = '/login';
        else
            redirect_url += '/login';

        // Append the fragment if it exists
        if (fragment !== '')
            redirect_url += '#' + fragment;

        // Redirect to the login page after saving the base url
        $.ajax({
            cache: false,
            type: 'GET',
            url: '{{ path('odr_save_url') }}',
            dataType: 'json',
            data: {'url': baseurl},
            success: function(data, textStatus, jqXHR) {
                window.location.href = redirect_url;
            }
        });
    }

    function UpdateURL(url, force) {
        // Update the URL and hash
        var current_hash = window.location.hash.substr(1);
        if ( current_hash !== url ) {
            // Just change the hash to the desired link
            window.location.hash = url;
        }
        else {
            // Force a hashchange event because we want the AJAX to fire again
            $(window).hashchange();
        }
    }

    var xhr = null;
    var timer = null;
    function LoadContentFullAjax(url, use_fade) {
        if (timer) {
            window.clearTimeout(timer)
        }
        // Default use_fade to 1
        if (undefined == use_fade)
            use_fade = true;

        // TODO Determine if this HACK is needed
        // Delete the DataTables fixed headers and bindings.
 	    jQuery(window).unbind('scroll');
 	    jQuery('.fixedHeader-floating').remove();

        var faded_opacity = 0.15;
        if (!use_fade)
            faded_opacity = 1;

        // Disable scroll handlers
        $(window).off('scroll');
        $("#content").fadeTo(200, faded_opacity, function() {
            // Abort any LoadContentFullAjax() call that's currently in progress
            if (xhr != null)
                xhr.abort();

            // Append the tab's id to the get request if it exists
            var data = '';
            if ( window.sessionStorage.getItem('odr_tab_id') )
                data = {'odr_tab_id': window.sessionStorage.getItem('odr_tab_id')};

            // Load to Content area
            xhr = $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                data: data,
                success: function(data, textStatus, jqXHR) {

                    if ( data.r == 2 ) {   // for redirects to another url
                        xhr = null;
                        UpdateURL( data.d.url );
                    }
                    else {
                        $("#content").html(data.d.html);
                        $("#content").fadeTo(200, 1.0);

                        xhr = null;
                    }

                },
                error: function(jqXHR, textStatus, errorThrown) {
                    // Don't need to do anything specific on an error
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        });
    }

    function loadSearchContent(url) {
        showSearchOverlay();
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            success: function (data) {
                $('#ODRSearchContent').html(data.d.html);
                hideSearchOverlay();
            }
        });
    }

    function showSearchOverlay() {
        $("#loading-overlay").fadeIn('fast');
        $("#loading").html('<span>Searching...</span>');
        $("#loading").fadeIn('fast');
        $("#ODRSearchContent").html('');
    }

    function hideSearchOverlay() {
        $("#loading-overlay").fadeOut('fast');
        $("#loading").html('<span>Loading...</span>');
        $("#loading").fadeOut('fast');
    }

    function setupAccordionHighlights() {
        $("#content > .ODRFormWrap > .ODRDataType > .ODRAccordionWrapper > .ODRFieldArea > .ODRThemeElement > .ODRInnerBox > .ODRChildDatatype > .ODRDataType > .ODRAccordionWrapper > h3")
            .alternateNestedBgColor(".ODRThemeElement > .ODRInnerBox > .ODRChildDatatype > .ODRDataType > .ODRAccordionWrapper > h3", ['ODRAccordionPrimary', 'ODRAccordionSecondary']);

        console.log('accordion highlight')
    }

    function setupAccordions() {

        // Setup Accordions
        $(".ODRFormAccordion").children("h3").each(function() {
            $(this).unbind('click').click(function() {
                $(this).parent().children(".accordion-content").each(function() {
                    if(!$(this).is(":hidden")) {
                        $(this).hide();
                    }
                    $(this).prev().removeClass('ODRAccordionSelected');
                });
                $(this).next().fadeIn();
                {#ODR_scrollIntoView( $(this).next() );#}
                $(this).addClass('ODRAccordionSelected');

                setupAccordionHighlights();
                // Resize any elements that were revealed
                onWindowResize();
            });
        });
        // Hide all the content blocks
        var prev_selection = false;
        $(".ODRFormAccordion").children("h3").each(function() {
            if ( !$(this).hasClass('ODRAccordionSelected') )
                $(this).next().hide();
            else
                prev_selection = true;
        });
        // Show the first content block
        if (!prev_selection) {
            $(".ODRFormAccordion").each(function() {
                $(this).children("h3:first").next().show();
            });
        }

        // Setup Tabs
        $(".ODRTabAccordion").each(function() {
            // Locate and attach tab accordion handlers to the buttons
            $(this).children(".ODRTabButtonHeader").each(function() {
                $(this).children(".ODRTabButton").each(function() {
                    $(this).unbind('click').click(function() {
                        // Hide all tabbed content divs
                        $(this).parent().parent().find(".accordion-content").hide();
                        // Attach another (styling?) class to more clearly indicated the selected tab?
                        $(this).parent().children().each(function() {
                            $(this).removeClass('pure-button-active');
                        });
                        $(this).addClass('pure-button-active');

                        // Show the div that's linked to the clicked button
                        var id = $(this).attr('rel');
                        $("#FieldArea_" + id).fadeIn();
                        {#ODR_scrollIntoView( $("#FieldArea_" + id) )#}

                        setupAccordionHighlights();
                        // Resize any elements that were revealed
                        onWindowResize();
                    });
                });

                // Trigger a click event on the first tab
                $(this).children(".ODRTabButton:first").trigger('click');
            });
        });

        // Setup Dropdown
        $(".ODRDropdownAccordion").find("select.accordion").each(function() {
            $(this).children("option").not(":selected").each(function() {
                var value = $(this).val();
                $("#FieldArea_" + value).hide();
            });

            $(this).unbind('change').change(function() {
                $(this).children("option").not(":selected").each(function() {
                    var value = $(this).val();
                    $("#FieldArea_" + value).hide();
                });

                $(this).children(":selected").each(function() {
                    // Should only fire once
                    var value = $(this).val();
                    $("#FieldArea_" + value).fadeIn();
                    {#ODR_scrollIntoView( $("#FieldArea_" + value) );#}
                });

                // Resize any elements that were revealed
                setupAccordionHighlights();
                onWindowResize();
            });
        });
    }


    var WindowResizeInterval = "";
    function onWindowResize() {
        // Clear the interval so these resizes only happen once
        if (WindowResizeInterval != "")
            WindowResizeInterval = window.clearInterval(WindowResizeInterval);

        // Resize all textarea elements
        $("textarea").not(":hidden").each(function() {
            var el = $(this);

            // Remove any pre-existing height/width from the textarea
            $(el).removeAttr('style');

            // Set the height of the textarea so all its content is visible
            var scrollHeight = $(el).prop('scrollHeight') + 1;
            $(el).height(scrollHeight);
        });
    }


    function setupImageGalleries() {
        // Set up image galleries
        $(".ODRImageGallery").not(".ODRImageGallery_ready").each(function() {
            var id_data = $(this).attr('id').split(/_/);
            var datafield_id = id_data[1];
            var datarecord_id = id_data[2];

            var count = 0;
            var images_per_row = parseInt( $("#imagestorage_" + datafield_id + "_" + datarecord_id).attr('rel') );

//            var width = $("#imagegallery_" + datafield_id + "_" + datarecord_id).find(".ODRImageGalleryImage").width();
//            var height = width * 0.75;
//            $("#imagegallery_" + datafield_id + "_" + datarecord_id).find(".ODRImageGalleryImage").css('width', width);
//            $("#imagegallery_" + datafield_id + "_" + datarecord_id).find(".ODRImageGalleryImage").css('height', height);

            $("#imagestorage_" + datafield_id + "_" + datarecord_id).children(".ODRImage").each(function() {
//                $(this).find("img").css('max-width', width);
//                $(this).find("img").css('max-height', height);

                if ( count < images_per_row ) {
                    $(this).remove().appendTo($("#imagegallery_" + datafield_id + "_" + datarecord_id).find(".ODRImageGalleryImage"));
                }
                count++;
            });

            if (count <= images_per_row) {
                $("#ODRImageLeft_" + datafield_id + "_" + datarecord_id).hide();
                $("#ODRImageRight_" + datafield_id + "_" + datarecord_id).hide();

                if (count == 0)
                    $(this).html('<center><strong>No Images Found</strong></center>');
            }

            $(this).addClass("ODRImageGallery_ready");
        });

        $(".ODRGalleryLeftArrow").unbind('click').click(function(event) {
            // Stop other click events from firing when this is clicked
            event.stopImmediatePropagation();

            var id_data = $(this).attr('rel');
            var gallery = "#imagegallery_" + id_data + " .ODRImageGalleryImage";
            var storage = "#imagestorage_" + id_data;

            $(gallery).children(".ODRImage").first().remove().prependTo(storage);
            $(storage).children(".ODRImage").last().remove().appendTo(gallery);
        });

        $(".ODRGalleryRightArrow").unbind('click').click(function(event) {
            // Stop other click events from firing when this is clicked
            event.stopImmediatePropagation();

            var id_data = $(this).attr('rel');
            var gallery = "#imagegallery_" + id_data + " .ODRImageGalleryImage";
            var storage = "#imagestorage_" + id_data;

            $(gallery).children(".ODRImage").last().remove().appendTo(storage);
            $(storage).children(".ODRImage").first().remove().prependTo(gallery);
        });
    }

    function reloadPage() {
        // TODO - should check if URL has hash value...
        var url = window.location.hash.substr(1);
        LoadContentFullAjax( url );
    }

    function resetRemodalInnerHeight() {
        var modal = $("#ODRRemodal");
        var modal_inner = modal.find(".ODRRemodalInner");
        var modal_inner_content = modal.find(".ODRRemodalInnerContent");

        // Get Scroll height of inner
        var content_height = modal_inner_content.prop('scrollHeight');
//console.log('h1: ' + content_height);

        var modal_height =  $(window).height()
            - modal.find(".ODRRemodalButtons").height()
            - modal.find(".ODRRemodalTitle").height();

        if ( $(window).width() >= 568 )
            modal_height -= 30;
//console.log('mh0: ' + modal_height);

        // Just show content if smaller than window height
        if (content_height < modal_height)
            modal_height = content_height;
//console.log('mh1: ' + modal_height);

        // Ensure it looks okay
        modal_height += 20;
        if (modal_height < 100)
            modal_height = 100;

        modal_inner.animate(
            {height: modal_height},
            {
                duration: 400,
                easing: "swing"
            }
        );
    }

    {# This is apparently only used in ODROpenRepositoryGraphBundle:Base:Graph/graph.html.twig #}
    var waitForFinalEvent = (function () {
        var timers = {};
        return function (callback, ms, uniqueId) {
            if (!uniqueId) {
                uniqueId = "Don't call this twice without a uniqueId";
            }
            if (timers[uniqueId]) {
                clearTimeout (timers[uniqueId]);
            }
            timers[uniqueId] = setTimeout(callback, ms);
        };
    })();

    $.fn.alternateNestedBgColor = function(subselect, colors) {
        var l = colors.length;

        // Itterate over all element in possible array
        // jQuery best practice to handle initializing multiple elements at once
        return this.each(function() {
            var $sub = $(this), i = 0;

            // Executes code, at least once
            do {
                // Set bg color for current $sub element
                $sub.addClass(colors[i++ % l]);
                console.log($sub.next().attr('id'))
                // Set $sub to direct children matching given selector
                $sub = $sub.next().find(subselect);
                console.log('Found subs: ', $sub.length);

                // Will repeat the do section if the condition returns true
                console.log('Repeat sub: ', i)
            } while ($sub.length > 0);
        });
    };

</script>

{% include 'ODRAdminBundle:Default:file_handling.html.twig' %}
{% include 'ODRAdminBundle:Flow:flow_common.html.twig' %}

{% endmacro %}
