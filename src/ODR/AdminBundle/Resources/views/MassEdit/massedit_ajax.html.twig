{% spaceless %}

{% set datatype = datatype_array[initial_datatype_id] %}

{% set can_delete_datarecord = false %}
{% if datatype_permissions[initial_datatype_id] is defined and datatype_permissions[initial_datatype_id][ 'dr_delete' ] is defined %}
    {% set can_delete_datarecord = true %}
{% endif %}

{% set can_change_public_status = false %}
{% if datatype_permissions[initial_datatype_id] is defined and datatype_permissions[initial_datatype_id][ 'dr_public' ] is defined %}
    {% set can_change_public_status = true %}
{% endif %}

<div id="MassEditForm">
    <div class="grid_12 no-margin-top-phone">
        <h1 style="display: inline;">
            <span>Mass Update &raquo; {{ datatype.dataTypeMeta.shortName }}</span>
        </h1>
    </div>

    <form id="massedit_form" style="display:none;" action="{{ path('odr_mass_update_start') }}">
        <input type="hidden" value="{{ odr_tab_id }}" name="odr_tab_id"/>
        <input type="hidden" value="{{ datatype.id }}" name="datatype_id"/>
    </form>

    <div>
        <button id="ODRMassEdit_start" class="pure-button pure-button-primary" type="button">
            Save Changes
        </button>&nbsp;
    {% if can_delete_datarecord %}
        <button id="ODRMassEdit_delete" class="pure-button" type="button">
            <i class="fa fa-warning"></i>&nbsp;Mass Delete
        </button>
    {% endif %}
    </div>

    <br><br>

    {% include 'ODRAdminBundle:MassEdit:massedit_area.html.twig' with {
        'datatype_array': datatype_array,
        'theme_array': theme_array,

        'initial_datatype_id': initial_datatype_id,
        'initial_theme_id': initial_theme_id,

        'datatype_permissions': datatype_permissions,
        'datafield_permissions': datafield_permissions,

        'mass_edit_trigger_datafields': mass_edit_trigger_datafields,
    } %}

</div>

<div id="LoadingBlock" class="ODRHidden">
    <div class="ODRRemodalLoading pure-u-1">
        <div class="JobStatusWrapper">
            <div class="JobComplete ODRHidden">Mass Edit Complete</div>
            <div class="loading-container">
                <div class="loading"></div>
                <div class="loading-text">editing</div>
            </div>
        </div>
        <div class="JobTracker"></div>
        <div class="CSVExportMessage">Your edits will run in the background. If you don't want to
            wait, feel free to continue to use the site and a message will inform you when mass edit
            is complete.
        </div>
    </div>
</div>
{% endspaceless %}

<script>
var SaveTimeout = 1500;

$(function() {
    disableSearchSidebar();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}
    window.scrollTo(0,0);

    // Attach click handlers to tags
    setupTagTree();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}

    // Adding/removing the class .ODRSearchResultsWide triggers a 0.25s transition
    // The overlay divs need this transition to finish before they can get the correct width
    setTimeout("initPage()", 350);

    // Need a tab id in html5 sessionStorage if one doesn't exist
    if ( !window.sessionStorage.getItem('odr_tab_id') )
        window.sessionStorage.setItem('odr_tab_id', '{{ odr_tab_id }}');

    $("#ODRMassEdit_start").unbind('click').click(function() {
        doMassUpdate();
    });
    $("#ODRMassEdit_delete").unbind('click').click(function() {
        doMassDelete();
    });

    $('#ODRHelpButton').unbind('click').click(function() {
        ODRMassEdit_startIntroJS();
    });
    ODRMassEdit_setupIntroJS();
});

/**
 * Attaches event handlers to all relevant elements on the page.
 */
function initPage() {

    // Hide all theme elements without input fields
    $(".ODRThemeElement").each(function() {
        var found = false;
        $(this).find("input,select,textarea").each(function() {
            found = true;
            return false;
        });

        if (!found)
            $(this).hide();
    });

    $(".ODRMassEdit_block").each(function() {
        var df_data = $(this).attr('id').split(/_/);
        var df_id = df_data[1];

        var inputs = [];
        inputs.push( $('#Form_DataField_' + df_id).find('input.ODRField_clearAll').first() );
        inputs.push( $('#Form_DataField_' + df_id).find('input.ODRField').first() );
        inputs.push( $('#Form_DataField_' + df_id).find('textarea.ODRParagraphField').first() );
        inputs.push( $('#Form_DataField_' + df_id).find('input.ODRDatePicker').first() );

        if ( $(this).hasClass('ODRUniqueField') ) {
            $.each(inputs, function (index, elem) {
                $(elem).prop('disabled', true).attr('title', "This Datafield is marked as unique, and therefore can't be mass updated...multiple Datarecords would have the same value afterwards.");
            });
        }
        else if ( $(this).hasClass('ODRBlockedField') ) {
            $.each(inputs, function (index, elem) {
                $(elem).prop('disabled', true).attr('title', "The Datatype's administrator has blocked changes to this Datafield.");
            });
        }
    });

    $(".ODRDatePicker").datepicker({
        dateFormat: 'yy-mm-dd',
        changeMonth: true,
        changeYear: true,
        yearRange: "1800:+10",
        onClose: function() {
            $(this).blur();

            // If a date was selected, ensure the 'clear all dates' checkbox is unchecked
            if ( $(this).val() !== '' )
                $(this).parent().parent().find('input').prop('checked', false);
        }
    });

    $(".ODRDatePicker_clear").unbind('click').click(function() {
        var blocked = false;
        if ( $(this).closest('.ODRDataField').find('input.ODRMassEdit_block').length > 0 )
            blocked = true;

        var input = $(this).closest('fieldset').find(".ODRDatePicker");
        $(input).datepicker('setDate', null);

        if ( !blocked ) {
            // Disable the input if the checkbox says to clear all values
            if ( $(this).children('input').first().is(':checked') )
                $(input).prop("disabled", true);
            else
                $(input).prop("disabled", false);
        }
    });

    $(".ODRParagraphField_clear").unbind('click').click(function() {
        var blocked = false;
        if ( $(this).closest('.ODRDataField').find('input.ODRMassEdit_block').length > 0 )
            blocked = true;

        var input = $(this).closest('fieldset').find(".ODRParagraphField");
        $(input).val('');

        if ( !blocked ) {
            // Disable the input if the checkbox says to clear all values
            if ( $(this).children('input').first().is(':checked') )
                $(input).prop("disabled", true);
            else
                $(input).prop("disabled", false);
        }
    });

    $(".ODRField_clear").unbind('click').click(function() {
        var blocked = false;
        if ( $(this).closest('.ODRDataField').find('input.ODRMassEdit_block').length > 0 )
            blocked = true;

        var input = $(this).closest('fieldset').find(".ODRField");
        $(input).val('');

        if ( !blocked ) {
            // Disable the input if the checkbox says to clear all values
            if ( $(this).children('input').first().is(':checked') )
                $(input).prop("disabled", true);
            else
                $(input).prop("disabled", false);
        }
    });

    // Tristate checkbox
    $(".ODRRadioLabel > .ODRTristateCheckbox").unbind('click').click(function() {
        // Grab data about the option being clicked
        var icon = $(this).children('i').first();
        var input = $(this).children('input').first();
        var radio_option_id = $(input).attr('rel');

        if ( $(icon).hasClass('fa-check') ) {
            // Currently selected, change to deselected
            $(this).attr('title', 'Deselect this option in all Datarecords');
            $(icon).removeClass('fa-check').addClass('fa-ban');
            $(input).val(0);
        }
        else if ( $(icon).hasClass('fa-ban') ) {
            // Currently deselected, change to blank
            $(this).removeAttr('title');
            $(icon).removeClass('fa-ban');
            $(input).val('');
        }
        else {
            // If only a single radio/select, uncheck all other options
            if ( $(this).attr('rel') == 'single') {
                $(this).parent().parent().find('.fa-check').each(function() {
                    $(this).parent().removeAttr('title');
                    $(this).removeClass('fa-check');
                    $(this).next().val('');
                });
            }

            // Currently blank, change to selected
            $(this).attr('title', 'Select this option in all Datarecords');
            $(icon).addClass('fa-check');
            $(input).val(1);
        }
    });

    // tag Tristate checkbox
    $(".ODRTagLabel > .ODRTristateCheckbox").unbind('click').click(function () {
        // Grab data about the tag being clicked
        var icon_div = $(this).children('i').first();
        var input_div = $(this).children('input').first();

        if ( $(icon_div).hasClass('fa-check') ) {
            // Currently "selected", change this tag to "deselected"
            $(this).attr('title', 'Deselect this tag in all records that match the search');
            $(icon_div).removeClass('fa-check').addClass('fa-ban');
            $(input_div).val(0);
        }
        else if ( $(icon_div).hasClass('fa-ban') ) {
            // Currently "deselected", change this tag to "blank"
            $(this).removeAttr('title');
            $(icon_div).removeClass('fa-ban');
            $(input_div).val('');
        }
        else {
            // Currently "blank", change this tag to "selected"
            $(this).attr('title', 'Select this tag in all records that match the search');
            $(icon_div).addClass('fa-check');
            $(input_div).val(1);
        }
    });

    var context = $(".ODRMassEdit");
    var tag_filter_interval = [];
    $(context).find(".ODRSearchDatafieldFilter").unbind('change').unbind('keyup').unbind('paste').on('keyup paste', function() {
        var df = $(this).parents('.ODRDataField');
        var id_data = $(df).attr('id').split(/_/);
        var df_id = id_data[1];

        if ( tag_filter_interval[df_id] !== undefined )
            clearTimeout( tag_filter_interval[df_id] );

        tag_filter_interval[df_id] = setTimeout(function() {
            filterMassEditTagField(context, df_id);
        }, 750);
    });
}

/**
 * Filters the displayed options/tags for a field in MassEdit mode.
 *
 * @param {HTMLElement} context
 * @param {number} df_id
 */
function filterMassEditTagField(context, df_id) {
    var filter_element = $(context).find("#massedit_df_" + df_id + "_filter").first();
    // var fieldtype = $(filter_element).attr('rel');
    var filter_text = $(filter_element).val().trim().toLowerCase();

    // Tag fields could have a hierarchy...
    var tags = $(context).find("#Field_" + df_id).find(".ODRTagItem");

    if ( filter_text == '' ) {
        // If no text in the filter, ensure all tags are visible
        $(tags).each(function(index,elem) {
            $(elem).removeAttr('style');
        });
    }
    else {
        $(tags).each(function(index,elem) {
            // Otherwise, need to convert each tag to lower case...
            var tag_name = $(elem).children('label').text().toLowerCase();

            // ...so it can get compared against the provided filter text
            if ( tag_name.indexOf(filter_text) === -1 )
                $(elem).hide();
            else {
                $(elem).removeAttr('style');

                // Also need to ensure that all parents of this tag are visible
                $(elem).parents('.ODRTagItem').removeAttr('style');
            }
        });
    }
}

/**
 * Triggers a mass update of all datarecords in the search results.
 */
function doMassUpdate() {

    // Remove any already-existing input elements added by this function
    $("#MassEditForm .massedit_form_input").remove();

    // Only save if there are no input errors...
    var has_errors = false;
    $(".ODRInputError").each(function(index, elem) {
        if ( $(elem).is(':visible') )
            has_errors = true;
    });
    if ( has_errors ) {
        alert('At least one field has a problem that must be fixed before saving.');
        return;
    }

    // Public status
    $("#MassEditForm .ODRPublicSelect").each(function() {
        // Grab the ID of the datatype
        var datatype_id = $(this).attr('rel');

        // Remove any value for this field currently stored in the form
        if ( $("#PublicStatus_" + datatype_id) !== null )
            $("#PublicStatus_" + datatype_id).remove();

        // Save any value currently in this field
        var val = $(this).val();
        if (val == '-1' || val == '1') {
            var element = $("<input>", {"id": "PublicStatus_" + datatype_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "public_status[" + datatype_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Checkboxes
    $("#MassEditForm .ODRBoolean").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val();
        if (val !== '' && val !== '-1') {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Files/Images
    $("#MassEditForm .ODRFile").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val();
        if (val !== '' && val !== '0') {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Single Selects
    $("#MassEditForm .ODRSingleSelect").each(function() {
        // Grab the datafield id
        var datafield_id = $(this).attr('rel');

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val();
        if (val !== '' && val !== '0') {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": 1, "name": "datafields[" + datafield_id + "][" + val + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Multiple Radio/Select and Tags
    $("#MassEditForm .ODRTristateCheckbox > input").each(function() {
        // Grab the ID of the field
        var datafield_id = $(this).attr('name');
        var item_id = $(this).attr('rel');

        if ( $(this).is(':disabled') /*|| $(this).hasClass('ODRSearchParentTag') */)
            return;

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id + "_" + item_id) !== null )
            $("#Value_" + datafield_id + "_" + item_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {"id": "Value_" + datafield_id + "_" + item_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "datafields[" + datafield_id + "][" + item_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Single Radio
    $("#MassEditForm .ODRSingleRadio").each(function() {
        // Grab the datafield id
        var datafield_id = $(this).attr('rel');

        // Save any value currently in this datafield
        $(this).find(".ODRRadioOption").each(function() {
            if ( $(this).is(":checked") ) {

                // Remove any value for this datafield currently stored in the form
                if ( $("#Value_" + datafield_id) !== null )
                    $("#Value_" + datafield_id).remove();

                var radio_option_id = $(this).attr('rel');
                if ( radio_option_id !== '0' ) {
                    var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": 1, "name": "datafields[" + datafield_id + "][" + radio_option_id + "]"});
                    $("#massedit_form").append(element);
                }
            }
        });
    });

    // Datetime fields
    $("#MassEditForm .ODRDatePicker").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).parent().attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var clear_all = $(this).parent().parent().find('input.ODRField_clearAll').prop('checked');
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        } else if (clear_all == true) {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": '', "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Paragraph fields
    $("#MassEditForm .ODRParagraphField").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).parent().attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var clear_all = $(this).parent().parent().find('input.ODRField_clearAll').prop('checked');
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        } else if (clear_all == true) {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": '', "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Everything else...Short/Medium/Longvarchar and Integer/Decimalvalue
    $("#MassEditForm .ODRField").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).parent().attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var clear_all = $(this).parent().parent().find('input.ODRField_clearAll').prop('checked');
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": val, "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        } else if (clear_all == true) {
            var element = $("<input>", {"id": "Value_" + datafield_id, "class": "massedit_form_input", "type": "hidden", "value": '', "name": "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    // Ensure no event triggers are in the form...
    $(".massedit_form_event_trigger").remove();
    // ...and add selected triggers back in
    $("#MassEditForm .ODRMassEdit_EventTrigger").each(function() {
        var datafield_id = $(this).attr('rel');
        var checkbox = $(this).find('input');
        if ( $(checkbox).is(':checked') ) {
            var element = $("<input>", {"id": "EventTrigger_" + datafield_id, "class": "massedit_form_event_trigger", "type": "hidden", "value": 1, "name": "event_triggers[" + datafield_id + "][" + $(checkbox).val() + "]"});
            $("#massedit_form").append(element);
        }
    });

    if ( $("#massedit_form").children().length <= 2 ) {
        alert('No changes made on page, aborting');
        return;
    }

    if ( !confirm('Are you sure you want to make these edits to multiple records?') )
        return;

    var redirect = false;
    if ( $("#massedit_form").children("[name^='datafields']").length > 0 )
        redirect = true;

    var data = $("#massedit_form").serialize();
    var url = $("#massedit_form").attr('action');

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        dataType: 'json',
        success: function(data) {
            if(data.d.tracked_job_id !== undefined) {
                // Replace this with loading message/checker directly
                $('#MassEditForm').hide();
                $('#LoadingBlock').fadeIn('fast');
                // Get CSV Exports from Jobs Page - add messaging

                // data.d.tracked_job_id
                getJobProgress('mass_edit', data.d.tracked_job_id);
            }
        },
        error: function (jqXHR, textStatus, errorThrown) {
            // Don't need to do anything specific on an error
            // alert('Error encountered, no changes made');
        },
        complete: function(jqXHR, textStatus) {
            // Get the xdebugToken from response headers
            var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

            // If the Sfjs object exists
            if (typeof Sfjs !== "undefined") {
                // Grab the toolbar element
                var currentElement = $('.sf-toolbar')[0];

                // Load the data of the given xdebug token into the current toolbar wrapper
                Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
            }
        }
    });
}

/**
 * Triggers a mass delete of all datarecords in the search result.
 */
function doMassDelete() {
    var str = 'This will delete ALL records listed in the search result.  Are you absolutely sure you want to do this?';
    if ( confirm(str) ) {
        var url = '{{ path('odr_mass_delete', {'datatype_id': datatype.id, 'odr_tab_id': odr_tab_id}) }}';

        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            success: function(data, textStatus, jqXHR) {
                LoadContentFullAjax( data.d.redirect_url );
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Error encountered, no changes made');
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
}

/**
 * Not strictly necessary to have this off in its own function, but it makes more sense this way.
 */
function ODRMassEdit_setupIntroJS() {
    // Setup IntroJS Walkthrough
    $('#ODRHelpButton')
        .attr('data-step', '1')
        .attr('data-intro', 'Welcome to the ODR Help System.  This system will guide you through the features of this page.<br><br>For quicker navigation, use your left and right arrow keys to go through the tutorial.');

    $('#massedit_form').prev()
        .attr('data-step', '2')
        .attr('data-intro', "This page allows you to perform a \"MassEdit\"...making the same set of changes to multiple records at once...to all records in the search result.<br><br>Be careful when saving changes here, because it's easy to accidentally overwrite data.");

    // Want to find sevarl types of fields to attach steps to
    var varchar_field = null;
    var unique_varchar_field = null;
    var file_image_field = null;
    var single_select_field = null;
    var single_radio_field = null;
    var multiple_radio_field = null;
    $('.ODRDataField').each(function(index,elem) {
        if ( unique_varchar_field === null && $(elem).find('div.ODRUniqueField').length > 0 )
            unique_varchar_field = $(elem);
        if ( varchar_field === null && $(elem).find('div.ODRUniqueField').length === 0 && $(elem).find('input.ODRField').length > 0 )
            varchar_field = $(elem);

        if ( file_image_field === null && $(elem).find('select.ODRFile').length > 0 )
            file_image_field = $(elem);

        if ( single_select_field === null && $(elem).find('select.ODRSingleSelect').length > 0 )
            single_select_field = $(elem);
        if ( single_radio_field === null && $(elem).find('select.ODRSingleRadio').length > 0 )
            single_radio_field = $(elem);
        if ( multiple_radio_field === null && $(elem).find('label.ODRRadioLabel').length > 0 )
            multiple_radio_field = $(elem);
    });

    $(varchar_field)
        .attr('data-step', '3')
        .attr('data-intro', 'Entering a value in a text/number/date field will update the values for that field across all records in the search result. If the input is left blank, then no changes will be made.');
    $(varchar_field).find('.ODRMassEdit_clear')
        .attr('data-step', '4')
        .attr('data-intro', 'Alternately, if you need to delete all values in a text/number/date field, then you can select the checkbox assocated with the field.');
    $(unique_varchar_field)
        .attr('data-step', '5')
        .attr('data-intro', 'Text/number fields marked as "unique" cannot be modified in MassEdit...multiple fields would have the same value afterwards, and therefore the values in the field would no longer be unique.');
    $(single_select_field)
        .attr('data-step', '6')
        .attr('data-intro', 'Single Select fields can be changed to any of their defined options, and also have two additional available actions.<br><br>"&lt;&lt;No change&gt;&gt;" does not change the selected options, while "&lt;&lt;Deselect everything&gt;&gt;" deselects any previously selected option in the field.');
    $(single_radio_field)
        .attr('data-step', '7')
        .attr('data-intro', 'Single Radio fields can be changed to any of their defined options, and also have two additional available actions.<br><br>"&lt;&lt;No change&gt;&gt;" does not change the selected options, while "&lt;&lt;Deselect everything&gt;&gt;" deselects any previously selected option in the field.');
    $(multiple_radio_field)
        .attr('data-step', '8')
        .attr('data-intro', 'Multiple Radio/Select fields allow you to select one of three states per option.<br><br>A blank box means "no changes", a green checkmark icon means "select this option", and a red no-access icon means "deselect this option".');
    $(file_image_field)
        .attr('data-step', '9')
        .attr('data-intro', "File and Image fields don't allow you to upload new files/images or delete existing files/images from here, but you have the option to change whether all files/images uploaded to this field are public or not.");

    $('.ODRPublicSelect').first()
        .attr('data-step', '10')
        .attr('data-intro', "This dropdown gives you the option to change the public status of all top-level records in this database.");
    if ( $('.ODRPublicSelect').length > 1 ) {
        var childtype_publicstatus = $('.ODRPublicSelect')[1];
        $(childtype_publicstatus)
            .attr('data-step', '11')
            .attr('data-intro', "If you instead want to change the public status of all records in a child database, then you can do that with the dropdown next to the child database's header.");
    }

    $('#ODRMassEdit_start').first()
        .attr('data-step', '12')
        .attr('data-intro', 'Clicking this button will begin making the requested changes to all records in the search result.');
    $('#ODRMassEdit_delete').first()
        .attr('data-step', '13')
        .attr('data-intro', 'Clicking this button will delete all records in the search result.<br><br>This action can not be aborted or reversed, so USE WITH CAUTION.');
}

/**
 * Begins the introJS tour for ODR's MassEdit page.
 */
function ODRMassEdit_startIntroJS() {
    introJs().setOption("disableInteraction", true)
        .start();
}
</script>

{% include 'ODRAdminBundle:Job:job_progress.html.twig' %}
