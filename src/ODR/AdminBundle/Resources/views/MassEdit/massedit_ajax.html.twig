{% spaceless %}

{% set datatype = datatype_tree.datatype %}
<h1 class="grid_12 no-margin-top-phone">
    <span>Mass Update &raquo; {{ datatype.shortname }}</span>
</h1>

<form id="massedit_form" style="display:none;" action="{{ path('odr_mass_update_start') }}">
    <input type="hidden" value="{{ search_checksum }}" name="search_checksum"/>
    <input type="hidden" value="{{ datatype.id }}" name="datatype_id"/>
</form>

<div>
    <select id="public_select" class="SelectGroup">
        <option value="-1">Make all Datarecords non-public</option>
        <option value="0" selected>Don't change public status</option>
        <option value="1">Make all Datarecords public</option>
    </select>
    </br></br>
</div>

<div>
    <button class="pure-button pure-button-primary" type="button" onclick="doMassUpdate();">Save Changes</button>
</div>

{% include 'ODRAdminBundle:MassEdit:massedit_area.html.twig' with {'datatype_tree': datatype_tree, 'datafield_permissions': datafield_permissions} %}

{% endspaceless %}

<style>
    .fa {
        padding: 0px;
    }
    .ODRTristateCheckbox > .fa-ban {
        color: red;
    }
    .ODRTristateCheckbox > .fa-check {
        color: green;
    }
    .ODRTristateCheckbox {
        cursor: pointer;
        border: 2px solid #666;
        border-radius: 5px;
        height: 1.5em;
        width: 1.5em;
        display: inline-block;
    }
    .ODRTristateCheckbox > .fa {
        line-height: 1.25em;
        margin-left: 0.25em;
    }
    .ODRTristateCheckbox:hover, .ODRTristateCheckbox:active, .ODRTristateCheckbox:focus {
        background: #9cd4d4;
    }
</style>

<script>

$(function() {
    initPage();
    window.scrollTo(0,0);

    // Tristate checkbox
    $(".ODRTristateCheckbox").unbind('click');
    $(".ODRTristateCheckbox").click(function() {
        // Grab data about the option being clicked
        var icon = $(this).children('i').first();
        var input = $(this).children('input').first();
        var radio_option_id = $(input).attr('rel');

        if ( $(icon).hasClass('fa-check') ) {
            // Currently selected, change to deselected
            $(this).attr('title', 'Deselect this option in all Datarecords');
            $(icon).removeClass('fa-check').addClass('fa-ban');
            $(input).val(0);
        }
        else if ( $(icon).hasClass('fa-ban') ) {
            // Currently deselected, change to blank
            $(this).removeAttr('title');
            $(icon).removeClass('fa-ban');
            $(input).val('');
        }
        else {
            // If only a single radio/select, uncheck all other options
            if ( $(this).attr('rel') == 'single') {
                $(this).parent().parent().find('.fa-check').each(function() {
                    $(this).parent().removeAttr('title');
                    $(this).removeClass('fa-check');
                    $(this).next().val('');
                });
            }

            // Currently blank, change to selected
            $(this).attr('title', 'Select this option in all Datarecords');
            $(icon).addClass('fa-check');
            $(input).val(1);
        }
    });
});


function initPage() {

    // Hide all TEDs without input fields
    $(".ODRThemeElement").each(function() {
        var found = false;
        $(this).find("input").each(function() {
            found = true;
            return;
        });

        if (!found)
            $(this).hide();
    });

    // Attach an overlay div of sorts over each datafield 
    $(".ODROverlayDiv").each(function() {
        // Need dimensions of parent div...
        var height = $(this).parent().css('height');
        var width = $(this).parent().css('width');

        // Apply dimensions of parent div to loading div
        $(this).css({"height": height, "line-height": height, "width": width});

        $(this).attr('title', "This Datafield is marked as unique, and therefore can't be mass updated...multiple Datarecords would have the same value if that happened.");
    });

    $(".ODRDatePicker").datepicker({
        dateFormat: 'yy-mm-dd',
        changeMonth: true,
        changeYear: true,
        yearRange: "1800:+10",
        onClose: function() {
            $(this).blur();

            // If a date was selected, ensure the 'clear all dates' checkbox is unchecked
            if ( $(this).val() !== '' )
                $(this).parent().parent().find('input').prop('checked', false);
        }
    });

    $(".ODRDatePicker_clear").unbind('click');
    $(".ODRDatePicker_clear").click(function() {
        $(this).parent().parent().find(".ODRDatePicker").datepicker('setDate', null);
//        var form_id = $(this).parent().parent().parent().parent().attr('id');
//        SaveRecordData('#' + form_id, '');
    });

}

function doMassUpdate() {

    if ( !confirm('Are you sure you want to make these edits to multiple datarecords?') )
        return;

    // Remove any already-existing input elements added by this function
    $(".massedit_form_input").remove();

    // Public status
    var val = $("#public_select").val();
    if (val == '-1' || val == '1') {
        var element = $("<input>", {id: "Value_public", class: "massedit_form_input", type: "hidden", value: val, name: "datarecord_public"});
        $("#massedit_form").append(element);
    }

    // Checkboxes
    $(".ODRBoolean").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val();
        if (val !== '' && val !== '-1') {
            var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: val, name: "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });


    // Single Selects
    $(".ODRSingleSelect").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val();
        if (val !== '' && val !== '0') {
            var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: 1, name: "datafields[" + datafield_id + "][" + val + "]"});
            $("#massedit_form").append(element);
        }
    });


    // TODO - Multiple Radio/Select
    $(".ODRTristateCheckbox > input").each(function() {
        // Grab the ID of the field
        var datafield_id = $(this).attr('name');
        var radio_option_id = $(this).attr('rel');

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id + "_" + radio_option_id) !== null )
            $("#Value_" + datafield_id + "_" + radio_option_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {id: "Value_" + datafield_id + "_" + radio_option_id, class: "massedit_form_input", type: "hidden", value: val, name: "datafields[" + datafield_id + "][" + radio_option_id + "]"});
            $("#massedit_form").append(element);
        }
    });


    // Single Radio
    $(".ODRSingleRadio").each(function() {
        // Grab the ID of the field
        var datafield_id = $(this).attr('rel');

        // Save any value currently in this datafield
        $(this).find(".ODRRadioOption").each(function() {
            if ( $(this).is(":checked") ) {

                // Remove any value for this datafield currently stored in the form
                if ( $("#Value_" + datafield_id) !== null )
                    $("#Value_" + datafield_id).remove();

                var radio_option_id = $(this).attr('rel');
                if ( radio_option_id != 0 ) {
                    var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: 1, name: "datafields[" + datafield_id + "][" + radio_option_id + "]"});
                    $("#massedit_form").append(element);
                }
            }
        });
    });

    // Datetime fields
    $(".ODRDatePicker").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).parent().attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var clear_all = $(this).parent().parent().find('input.ODRDatePicker_clearAll').prop('checked');
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: val, name: "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        } else if (clear_all == true) {
            var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: '', name: "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });


    // Paragraph fields
    $(".ODRParagraphField").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).parent().attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).html().trim();
        if (val !== '') {
            var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: val, name: "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });


    // Everything else
    $(".ODRField").each(function() {
        // Grab the ID of the field
        var datafield_id_data = $(this).parent().attr('id').split('_');
        var datafield_id = datafield_id_data[1];

        // Remove any value for this datafield currently stored in the form
        if ( $("#Value_" + datafield_id) !== null )
            $("#Value_" + datafield_id).remove();

        // Save any value currently in this datafield
        var val = $(this).val().trim();
        if (val !== '') {
            var element = $("<input>", {id: "Value_" + datafield_id, class: "massedit_form_input", type: "hidden", value: val, name: "datafields[" + datafield_id + "]"});
            $("#massedit_form").append(element);
        }
    });

    if ( $("#massedit_form").children().length <= 2 ) {
        alert('No changes made on page, aborting');
        return;
    }

    var redirect = false;
    if ( $("#massedit_form").children("[name^='datafields']").length > 0 )
        redirect = true;

    var data = $("#massedit_form").serialize();
    var url = $("#massedit_form").attr('action');
//alert(url);
//return;

    $.ajax({
        type: 'POST',
        url: url,
        data: data,
        dataType: 'json',
        success: function(data, textStatus, jqXHR) {
            if ( data.r == 0 ) {
                if (redirect) {
                    alert( 'Mass Update in progress' );
                    var url = '{{ path('odr_job_list') }}';
                    UpdateURL(url);
                }
                else {
                    alert( 'Public status of Datarecords updated' );
                }
            }
            else {
                alert( data.d );
                alert( 'There was an error...no changes made' );
            }
        },
        complete: function(jqXHR, textStatus) {
            // Get the xdebugToken from response headers
            var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

            // If the Sfjs object exists
            if (typeof Sfjs !== "undefined") {
                // Grab the toolbar element
                var currentElement = $('.sf-toolbar')[0];

                // Load the data of the given xdebug token into the current toolbar wrapper
                Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
            }
        }
    });

}
</script>
