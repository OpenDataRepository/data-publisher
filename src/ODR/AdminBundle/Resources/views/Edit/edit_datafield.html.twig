{% spaceless %}

{% set DATAFIELD_PLUGIN = constant('ODR\\AdminBundle\\Entity\\RenderPlugin::DATAFIELD_PLUGIN') %}
{% set datarecord_is_fake = false %}

{% set datafield_meta = datafield.dataFieldMeta %}
{% set field_typename = datafield_meta.fieldType.typeName %}
{% set field_typeclass = datafield_meta.fieldType.typeClass %}

{% set datarecordfield = '' %}
{% set valuefield = '' %}
{% set valuefield_value = '' %}
{% if datarecord.dataRecordFields[ datafield.id ] is defined %}
    {% set datarecordfield = datarecord.dataRecordFields[ datafield.id ] %}

    {% if field_typename == "Boolean" and datarecordfield.boolean[0] is defined %}
        {% set valuefield = datarecordfield.boolean[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "File" %}
        {% set valuefield = datarecordfield.file %}
    {% elseif field_typename == "Image" %}
        {% set valuefield = datarecordfield.image %}
    {% elseif field_typename == "Decimal" and datarecordfield.decimalValue[0] is defined %}
        {% set valuefield = datarecordfield.decimalValue[0] %}
        {% set valuefield_value = valuefield.original_value %}
    {% elseif field_typename == "Integer" and datarecordfield.integerValue[0] is defined %}
        {% set valuefield = datarecordfield.integerValue[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "Paragraph Text" and datarecordfield.longText[0] is defined %}
        {% set valuefield = datarecordfield.longText[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "Long Text" and datarecordfield.longVarchar[0] is defined %}
        {% set valuefield = datarecordfield.longVarchar[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "Medium Text" and datarecordfield.mediumVarchar[0] is defined %}
        {% set valuefield = datarecordfield.mediumVarchar[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typeclass == "Radio" %}
        {% set valuefield = datarecordfield.radioSelection %}
    {% elseif field_typeclass == "Tag" %}
        {% set valuefield = datarecordfield.tagSelection %}
    {% elseif field_typename == "Short Text" and datarecordfield.shortVarchar[0] is defined %}
        {% set valuefield = datarecordfield.shortVarchar[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "DateTime" and datarecordfield.datetimeValue[0] is defined %}
        {% set valuefield = datarecordfield.datetimeValue[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "XYZ Data" %}
        {% set valuefield = datarecordfield.xyzData %}

        {% set labels = datafield_meta.xyz_data_column_names|split(',') %}
        {% for num,xyz_data in valuefield %}
            {% if labels|length == 1 %}
                {% set valuefield_value = valuefield_value ~ '(' ~ xyz_data.x_value ~ ')' %}
            {% elseif labels|length == 2 %}
                {% set valuefield_value = valuefield_value ~ '(' ~ xyz_data.x_value ~ ',' ~ xyz_data.y_value ~ ')' %}
            {% elseif labels|length == 3 %}
                {% set valuefield_value = valuefield_value ~ '(' ~ xyz_data.x_value ~ ',' ~ xyz_data.y_value ~ ',' ~ xyz_data.z_value ~ ')' %}
            {% endif %}

            {% if not loop.last %}
                {% set valuefield_value = valuefield_value ~ '|' %}
            {% endif %}
        {% endfor %}
    {% elseif field_typename == "Markdown" %}
        {% set valuefield = '' %}
    {% endif %}
{% endif %}

{% if valuefield == '' and (field_typename == 'File' or field_typename == 'Image' or field_typeclass == 'Radio') %}
    {% set valuefield = [] %}
{% endif %}

{% set max_length = '' %}
{% if field_typename == "Long Text" %}
    {% set max_length = 255 %}
{% elseif field_typename == "Medium Text" %}
    {% set max_length = 64 %}
{% elseif field_typename == "Short Text" %}
    {% set max_length = 32 %}
{% endif %}

{% set unique_id = datarecord.id ~ '_' ~ datafield.id %}
{% set input_id = field_typeclass ~ 'Form_' ~ unique_id %}
{% set input_name = field_typeclass ~ 'Form[value]' %}
{# TODO - can't change a decimal from like "532" to "532.0" because of Symfony's automatic conversion on the "value" property
   TODO - ...but the form complains of "extra fields" when using "original_value" instead of "value"
{% if field_typeclass == 'Decimal' %}
    {% set input_name = field_typeclass ~ 'Form[original_value]' %}
{% endif %}
#}

    <form
        autocomplete="off"
        {% if field_typename != "XYZ Data" %}
        action="{{ path('odr_record_save', { 'datarecord_id': datarecord.id, 'datafield_id': datafield.id }) }}"
        {% else %}
        action="{{ path('odr_record_save_xyzdata', { 'datarecord_id': datarecord.id, 'datafield_id': datafield.id }) }}"
        {% endif %}
        class="pure-u-1"
        id="EditForm_{{ unique_id }}"
        method="POST"
    >

        <input type="hidden" id="{{ field_typeclass }}Form__token" name="{{ field_typeclass }}Form[_token]" value="{{ token_list[ datarecord.id ][ datafield.id ] }}" />

    {# Determine whether a render plugin needs to be run #}
    {% set rendering_options = {'is_link': is_link, 'is_datatype_admin': is_datatype_admin, 'context': 'edit'} %}
    {% set render_plugin_instance = null %}
    {% set can_execute_plugin = false %}

    {% set uses_file_renamer_plugin = false %}

    {% for rpi_num,rpi in datafield.renderPluginInstances %}
        {% if rpi.renderPlugin.pluginClassName == 'odr_plugins.base.file_renamer' %}
            {% set uses_file_renamer_plugin = true %}
        {% endif %}

        {% if rpi.renderPlugin.plugin_type == DATAFIELD_PLUGIN and rpi.renderPlugin.active and rpi.renderPlugin.render != 'false' %}
            {% set can_execute_plugin = rpi|can_execute_datafield_plugin(datafield, datarecord, rendering_options) %}

            {# Only want to save the render_plugin_instance if it's render-able #}
            {% if can_execute_plugin %}
                {% set render_plugin_instance = rpi %}
            {% endif %}
        {% endif %}
    {% endfor %}

    {% set content = '' %}
    {% if can_execute_plugin %}
        {% set content = datafield|datafield_plugin(datarecord, render_plugin_instance, rendering_options) %}
    {% endif %}

    {% if can_execute_plugin and content|length > 0 %}
        {# TODO - ...require the render plugin to also handle the <form> element? #}
        {{ content|raw }}

    {% elseif field_typename == "Boolean" %}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                    <input
                        {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                        id="{{ input_id }}"
                        type="checkbox"
                        name="{{ input_name }}"
                        value="1"
                        {% if valuefield_value == 1 %}checked{% endif %}
                    />
                    &nbsp;{{ datafield_meta.fieldName }}

                    {% if is_datatype_admin %}
                    &nbsp;&nbsp;<i class="fa fa-history Pointer ODRDatafieldHistory" title="View history of {{ datafield_meta.fieldName }}"></i>
                    {% endif %}
                </div>
            </label>
        </fieldset>

    {% elseif field_typename == "File" %}
        {% set has_file = false %}
        {% if valuefield|length > 0 %}
            {% set has_file = true %}
        {% endif %}

        {#<fieldset>#}
        <div class="ODRFileDatafield">
            <div class="ODRFileDatafield_header pure-u-1">
            {% if not datarecord_is_fake %}
                <i class="Pointer fa fa-download fa-lg ODRDownloadAllFiles" title="Download all Files in this Datafield"></i>&nbsp;
                <span title="{{ datafield.dataFieldMeta.description }}">{{ datafield.dataFieldMeta.fieldName }}</span>
            {% else %}
                <i class="fa fa-download fa-lg ODRDownloadAllFiles"></i>&nbsp;
                <span>{{ datafield.dataFieldMeta.fieldName }}</span>
            {% endif %}
            </div>

            <div class="ODRFileDatafield_content pure-u-1">
                {# Don't want to execute anything special after a file gets deleted #}
                {#{% set file_delete_callback = 'function() {}' %}#}
                {% include "ODRAdminBundle:Edit:edit_file_datafield.html.twig" with {
                    'datafield': datafield,
                    'datarecord': datarecord,
                    'files': valuefield,

                    'datarecord_is_fake': datarecord_is_fake,
                    'uses_file_renamer_plugin': uses_file_renamer_plugin,
                } %}
            </div>
        </div>

        <div class="pure-u-1 {% if datafield_meta.allow_multiple_uploads == 0 and has_file == true %}ODRHidden{% endif %}">
            {# show upload area only if multiples are allowed or nothing has been uploaded yet #}
            {% set target = 'drf_' ~ datarecord.id ~ '_' ~ datafield.id %}
            {% set single_file = true %}
            {% if datafield_meta.allow_multiple_uploads == 1 %}
                {% set single_file = false %}
            {% endif %}
            {% set callback = 'ReloadFileDatafield(' ~ datarecord.id ~ ',' ~ datafield.id ~ ');' %}

            {% include 'ODRAdminBundle:Flow:flow_upload.html.twig' with {
                'target': target,
                'single_file': single_file,
                'upload_type': 'file',
                'datatype_id': datarecord.dataType.id,
                'datarecord_id': datarecord.id,
                'datafield_id': datafield.id,
                'callback': callback
            } %}
        </div>
        {#</fieldset>#}

    {% elseif field_typename == "Image" %}
        {% set has_image = false %}

        {#<fieldset>#}
            <div class="ODRFileDatafield_header ODRFileImageHeader pure-u-1">
                <span title="{{ datafield_meta.description }}">{{ datafield_meta.fieldName }}</span>
            </div>

            <div class="pure-u-1">
            {% if datafield_meta.allow_multiple_uploads == 1 or has_image == false %}
                {# show upload area only if multiples are allowed or nothing has been uploaded yet #}
                {% set target = 'drf_' ~ datarecord.id ~ '_' ~ datafield.id %}
                {% set single_file = true %}
                {% if datafield_meta.allow_multiple_uploads == 1 %}
                    {% set single_file = false %}
                {% endif %}
                {% set callback = 'ReloadEditDatafield(' ~ datarecord.id ~ ',' ~ datafield.id ~ ');' %}

                {% include 'ODRAdminBundle:Flow:flow_upload.html.twig' with {
                    'target': target,
                    'single_file': single_file,
                    'upload_type': 'image',
                    'datatype_id': datarecord.dataType.id,
                    'datarecord_id': datarecord.id,
                    'datafield_id': datafield.id,
                    'callback': callback
                } %}
            {% endif %}
            </div>

            <div class="ODRSortableImage pure-u-1">

            {% for image in valuefield %}
                {% set oimage = image.parent %}
                {% set image_ext = oimage.ext %}
                {% set oimage_meta = oimage.imageMeta %}
                {% set image_caption = oimage_meta.caption %}
                {% set image_filename = oimage_meta.originalFileName %}
                {% set has_image = true %}

                <div id="Image_{{ oimage.id }}" class="pure-u-1 pure-u-md-1-{{ datafield_meta.children_per_row }}" rel="{{ image.id }}">    {# rel is the id of the thumbnail, id attr is the id of the full-size image #}
                    <div class="pure-u-1">
                        &nbsp;<i class="Cursor tooltip fa fa-calendar fa-lg" title="Uploaded {{ oimage.created|date('Y-m-d') }} by {{ oimage.createdBy|user_string }}"></i>
                        &nbsp;<i class="ODRDeleteImage tooltip Pointer fa fa-lg fa-trash-o" title="Delete Image" rel="{{ oimage.id }}"></i>
                        &nbsp;<i class="ODRPublicImage tooltip Pointer fa fa-lg fa-globe {% if oimage_meta.publicDate|is_public %}fa-public{% else %}fa-not-public{% endif %}" title="{% if not oimage_meta.publicDate|is_public %}Image is not public{% else %}Public since {{ oimage_meta.publicDate|date('Y-m-d') }}{% endif %}" rel="{{ oimage.id }}"></i>
                        &nbsp;<i class="ODRRotateImage tooltip Pointer fa fa-lg fa-rotate-left" title="Rotate Image 90 degrees counter-clockwise" rel="{{ oimage.id }}"></i>
                        &nbsp;<i class="ODRRotateImage tooltip Pointer fa fa-lg fa-rotate-right" title="Rotate Image 90 degrees clockwise" rel="{{ oimage.id }}"></i>
                        &nbsp;<i class="ODRImageRenameTrigger tooltip Pointer fa fa-lg fa-edit" title="Rename Image" rel="{{ oimage.id }}"></i>

                        {% if datafield_meta.quality_str != '' %}
                            {% include 'ODRAdminBundle:Edit:file_quality.html.twig' with {
                                'datafield': datafield,
                                'file': oimage,
                                'meta': oimage_meta,
                            } %}
                        {% endif %}
                    </div>

                    <div class="pure-u-1 ODRHidden">
                        <input id="ODRImage_{{ oimage.id }}_rename"
                               class="ODRImageRenameInput pure-u-1"
                               type="text"
                               maxlength="255"
                               value="{{ image_filename }}"
                        />
                        <button class="pure-button ODRImageRenameButton" title="Save changes to filename">
                            <i class="fa fa-lg fa-save"></i>
                        </button>
                    </div>

                    <div class="pure-u-23-24">
                        <a target="_blank" href="{{ path('odr_image_download', {'image_id': oimage.id}) }}" title="{{ image_caption }}">
                            <img class="pure-img" src="{{ path('odr_image_download', {'image_id': image.id}) }}?{{ oimage_meta.updated|date('U') }}" title="{% if image_filename != null %}{{ image_filename }}{% else %}Image_{{ image.id }}.{{ image_ext }}{% endif %}" />
                        </a>
                    </div>
                </div>
            {% endfor %}

            </div>
        {#</fieldset>#}

    {% elseif field_typename == "Paragraph Text" %}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                {% if is_datatype_admin %}
                <i class="fa fa-history Pointer ODRDatafieldHistory" title="View history of {{ datafield_meta.fieldName }}"></i>&nbsp;
                {% endif %}
                {{ datafield_meta.fieldName }}
            </label>
            <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                <textarea
                    id="{{ input_id }}"
                    class="pure-u-1"
                    name="{{ input_name }}"
                    {% if datafield_meta.required == 1 %}required="required"{% endif %}
                    data-error-type="inline"
                    {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                >{{ valuefield_value }}</textarea>
                <i class="fa fa-save ODRSaveIndicator"></i>
            </div>
        </fieldset>

    {% elseif field_typename == "Integer" or field_typename == "Decimal" or field_typename == "Long Text" or field_typename == "Medium Text" or field_typename == "Short Text" %}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                {% if is_datatype_admin %}
                <i class="fa fa-history Pointer ODRDatafieldHistory" title="View history of {{ datafield_meta.fieldName }}"></i>&nbsp;
                {% endif %}
                {{ datafield_meta.fieldName }}
            </label>
            <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                <input
                    {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                    type="text"
                    id="{{ input_id }}"
                    class="pure-u-1"
                    name="{{ input_name }}"
                    value="{{ valuefield_value }}"
                    data-error-type="inline"
                />
                <i class="fa fa-save ODRSaveIndicator"></i>
            </div>
        </fieldset>

    {#{% elseif field_typename == "Single Radio" or field_typename == "Multiple Radio" %}#}
    {% elseif field_typename == "Single Radio" or field_typename == "Multiple Radio" or field_typename == "Multiple Select" %}
        <fieldset>
            <label class="ODRRadioField ODRFieldLabel" title="{{ datafield_meta.description }}">{{ datafield_meta.fieldName }}</label>

            {% set print_null_option = false %}
            {% set has_selection = false %}
            {% if field_typename == "Single Radio" %}
                {% set print_null_option = true %}

                {% for radio_selection in valuefield %}
                    {% if radio_selection.selected == 1 %}
                        {% set has_selection = true %}
                    {% endif %}
                {% endfor %}
            {% endif %}

            {% if datafield.radioOptions is defined %}
                <div class="ODRRadioOptionsEdit">
                {% for radio_option in datafield.radioOptions %}
                    {% set is_selected = 0 %}
                    {% if datarecordfield.radioSelection[ radio_option.id ] is defined %}
                        {% set is_selected = datarecordfield.radioSelection[ radio_option.id ].selected %}
                    {% endif %}

                    {% if print_null_option == true %}
                        {% set print_null_option = false %}
                        <label for="{{ input_id }}_0" class="pure-u-1 pure-u-md-1-{{ datafield_meta.children_per_row }}" style="margin: 0.5em 0;">
                            <input
                                id="{{ input_id }}_0"
                                type="radio"
                                name="RadioGroup_{{ unique_id }}"
                                {% if has_selection == false %}checked{% endif %}
                                class="SingleRadioGroup {% if has_selection == false %}ODRRadioOptionChecked{% endif %}"
                            />
                            No Option Selected
                        </label>
                    {% endif %}

                    <label for="{{ input_id }}_{{ radio_option.id }}" class="pure-u-1 pure-u-md-1-{{ datafield_meta.children_per_row }}" style="margin: 0.5em 0;">

                    {% if field_typename == "Single Radio" %}
                        <input
                            {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                            id="{{ input_id }}_{{ radio_option.id }}"
                            type="radio"
                            name="RadioGroup_{{ unique_id }}"
                            {% if is_selected == 1 %}checked{% endif %}
                            class="SingleRadioGroup {% if is_selected == 1 %}ODRRadioOptionChecked{%endif %}"
                        />
                    {% else %}
                        <input
                            {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                            id="{{ input_id }}_{{ radio_option.id }}"
                            type="checkbox"
                            name="RadioGroup_{{ unique_id }}"
                            {% if is_selected == 1 %}checked{% endif %}
                            class="MultipleRadioGroup"
                        />
                    {% endif %}

                    {{ radio_option.radioOptionMeta.optionName }}
                    </label>
                {% endfor %}
                </div>
            {% endif %}
        </fieldset>

    {#{% elseif field_typename == "Single Select" or field_typename == "Multiple Select" %}#}
    {% elseif field_typename == "Single Select" %}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">{{ datafield_meta.fieldName }}</label>

            <select
                {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                id="{{ input_id }}"
                class="pure-u-24-24 {% if field_typename == "Multiple Select" %}MultipleSelectGroup{% else %}SingleSelectGroup{% endif %}"
                {% if field_typename == "Multiple Select" %}multiple{% endif %}
            >

            {% if datafield.radioOptions is defined %}
                {% if field_typename == "Single Select" %}
                    <option id="Option_0" value="0">No Option Selected</option>
                {% endif %}

                {% for radio_option in datafield.radioOptions %}
                    {% set is_selected = 0 %}
                    {% if datarecordfield.radioSelection[ radio_option.id ] is defined %}
                        {% set is_selected = datarecordfield.radioSelection[ radio_option.id ].selected %}
                    {% endif %}

                    <option id="Option_{{ radio_option.id }}"
                            value="{{ radio_option.id}}"
                            {% if is_selected == 1 %}selected {% if field_typename == "Multiple Select" %}class="MultipleSelect_prev"{% endif %}{% endif %}
                    >
                        {{ radio_option.radioOptionMeta.optionName }}
                    </option>
                {% endfor %}
            {% endif %}
            </select>
        </fieldset>

    {% elseif field_typename == "Tags" %}
        <fieldset>
            <label class="ODRFieldLabel pure-u-23-24" title="{{ datafield_meta.description }}">
                {{ datafield_meta.fieldName }}
                {% if datafield_meta.tags_allow_non_admin_edit or is_datatype_admin %}
                <span class="ODRTagsEdit" rel="{{ datafield.id }}"><i class="Pointer fa fa-lg fa-cog" title="Edit Tags"></i></span>
                {% endif %}

                <input id="edit_df_{{ datafield_id }}_filter" class="ODRSearchDatafieldFilter fa" type="text"
                       title="Filter {{ field_typeclass }} field" rel="{{ field_typeclass }}"
                       placeholder="&#xf002;"    {# use the fa-search icon as a placeholder #}
                       size="15" maxlength="15"
                />
            </label>

            {% if datafield.tags is defined %}
                {% include 'ODRAdminBundle:Edit:tag_wrapper.html.twig' with {
                    'unique_id': unique_id,

                    'drf': datarecordfield,
                    'stacked_tags': datafield.tags,

                    'inline_search_link': false
                } %}
            {% endif %}
        </fieldset>

    {% elseif field_typename == "DateTime" %}
        {% set new_id = 'DatetimeValueForm_value_' ~ datafield.id %}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                {% if is_datatype_admin %}
                <i class="fa fa-history Pointer ODRDatafieldHistory" title="View history of {{ datafield_meta.fieldName }}"></i>&nbsp;
                {% endif %}
                {{ datafield_meta.fieldName }}
            </label>
            <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                <input
                    {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                    type="text"
                    id="{{ new_id }}"
                    class="Pointer pure-u-1 ODRDatePicker"
                    name="{{ input_name }}"
                    readonly="readonly"
                    value="{% if valuefield_value != '' and valuefield_value|date('Y-m-d') != "9999-12-31" %}{{ valuefield_value|date('Y-m-d') }}{% endif %}"
                    data-error-type="inline"
                />
            </div>
            <div style="margin-bottom:5px;"><label class="Pointer ODRDatePicker_clear"><u>Clear Date</u></label></div>
        </fieldset>

    {% elseif field_typename == "XYZ Data" %}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                {% if is_datatype_admin %}
                    <i class="fa fa-history Pointer ODRXYZDatafieldHistory" title="View history of {{ datafield_meta.fieldName }}"></i>&nbsp;
                {% endif %}
                {{ datafield_meta.fieldName }}
            </label>
            <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                {% if is_datatype_admin and datafield_meta.xyz_data_column_names|trim == '' %}
                <span class="ODRInputError">No column names defined!</span>
                {% else %}
                <textarea
                    id="{{ input_id }}"
                    class="pure-u-1"
                    name="{{ input_name }}"
                    {% if datafield_meta.required == 1 %}required="required"{% endif %}
                    data-error-type="inline"
                    {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                >{{ valuefield_value }}</textarea>
                <i class="fa fa-save ODRSaveIndicator"></i>
                {% endif %}
            </div>
        </fieldset>

    {% endif %}
    </form>

{# Only output save javascript when a plugin was not run #}
{% if not can_execute_plugin or content|length == 0 %}
    {# Markdown fields can't be changed...File/Image fields are handled by flow.js #}
    {# Radio/Tag/XYZData fields have their own controller actions #}

    {% if field_typename == "Boolean" %}
    <script>
        var {{ field_typeclass }}Interval_{{ unique_id }} = null;
        $("#EditForm_{{ unique_id }}").find("input[name='{{ input_name }}']").unbind('change').change(function() {
            clearTimeout( {{ field_typeclass }}Interval_{{ unique_id }} );
            {{ field_typeclass }}Interval_{{ unique_id }} = setTimeout( "$('#EditForm_{{ unique_id }}').submit()", SaveTimeout );
        });

        $("#EditForm_{{ unique_id }}").validate({
            submitHandler: function(form) {
                SaveRecordData(
                    '#EditForm_{{ unique_id }}',
                    {{ field_typeclass }}Interval_{{ unique_id }}
                );
            }
        });
    </script>
    {% elseif field_typename == "XYZ Data" %}
        <script>
            var {{ field_typeclass }}Interval_{{ unique_id }} = null;
            $("#EditForm_{{ unique_id }}").find("textarea[name='{{ input_name }}']").unbind('change').unbind('keyup').unbind('paste').on('keyup paste', function() {
                clearTimeout( {{ field_typeclass }}Interval_{{ unique_id }} );
                {{ field_typeclass }}Interval_{{ unique_id }} = setTimeout( "SaveRecordData('#EditForm_{{ unique_id }}', {{ field_typeclass }}Interval_{{ unique_id }})", 2000 );
                {# Reusing SaveRecordData() here...but since the form's action attribute is different, it'll go to a different controller action #}
            });
        </script>
    {% elseif
        field_typename == "Integer"
        or field_typename == "Decimal"
        or field_typename == "Paragraph Text"
        or field_typename == "Long Text"
        or field_typename == "Medium Text"
        or field_typename == "Short Text"
    %}
    <script>
        var {{ field_typeclass }}Interval_{{ unique_id }} = null;
        $("#EditForm_{{ unique_id }}").find("{% if field_typename == 'Paragraph Text' %}textarea{% else %}input{% endif %}[name='{{ input_name }}']").unbind('change').unbind('keyup').unbind('paste').on('keyup paste', function() {
            clearTimeout( {{ field_typeclass }}Interval_{{ unique_id }} );
            {{ field_typeclass }}Interval_{{ unique_id }} = setTimeout( "$('#EditForm_{{ unique_id }}').submit()", SaveTimeout );
        });

        $("#EditForm_{{ unique_id }}").validate({
            rules: {
                "{{ input_name }}": {
                {% if field_typename == "Integer" %}
                    ODRInteger: {},  {# 'ODRInteger' rule defined in app.js...the default 'digits' rule apparently doesn't allow negative numbers #}
                {% elseif field_typename == "Decimal" %}
                    ODRDecimal: {},  {# 'ODRDecimal' rule defined in app.js...the default 'number' rule apparently allows leading zeros e.g. '00045' #}
                {% elseif field_typename == "Long Text" or field_typename == "Medium Text" or field_typename == "Short Text" %}
                    maxlength: {{ max_length }},
                {% endif %}

                {% if datafield_meta.is_unique %}
                    required: true,
                {% endif %}

                {% if datafield_meta.is_unique %}
                    {# need to query ODR to see whether the contents of this field are unique or not #}
                    remote: {
                        url: "{{ path('odr_check_fake_record_field_uniqueness', { 'datafield_id': datafield.id, 'datarecord_id': datarecord.id }) }}",
                        type: "post",
                        data: {
                            {# The form's value is automatically inserted by jQuery validate #}
                            "{{ field_typeclass }}Form[_token]": function () {
                                return $("#EditForm_{{ unique_id }}").find("input[type=hidden]").val();
                            },
                            "{{ field_typeclass }}Form[error_type]": "json",
                        }
                    }
                {% endif %}
                }
            },

            {% if datafield_meta.is_unique %}
            onkeyup: false,    // If the datafield fires off a remote event to check uniqueness, then don't trigger validation on every keyup event
            {% endif %}

            submitHandler: function(form) {
                SaveRecordData(
                    '#EditForm_{{ unique_id }}',
                    {{ field_typeclass }}Interval_{{ unique_id }}
                );

                {# TODO - this is not the correct way of saving changes to these properties... #}
                {# TODO - the server needs to automatically run these so loss of network won't leave the database out of sync with its metadata #}
                // Need to check if this is a datatype properties value
                var field_reference = jQuery('#Input_{{ unique_id }}').children(':first-child').attr('rel');
                switch(field_reference) {
                    case 'database_name':
                        // Update datatype meta with this value for short and long name
                        if(typeof saveDatatypeMeta === "function") {
                            saveDatatypeMeta(
                                field_reference,
                                jQuery('#Input_{{ unique_id }}').children(':first-child').val()
                            )
                        }
                        break;

                    case 'database_description':
                        // Update datatype meta with this value for description
                        if(typeof saveDatatypeMeta === "function") {
                            saveDatatypeMeta(
                                field_reference,
                                jQuery('#Input_{{ unique_id }}').children(':first-child').val()
                            )
                        }
                        break;

                }
            }
            // focusInvalid: false
        });
    </script>
    {% endif %}
{% endif %}

{% endspaceless %}
