{% spaceless %}

    {% set is_valid_fieldtype = true %}
    {% if local_datafield != null and render_plugin.pluginClassName != "odr_plugins.base.default" %}
        {% for rpf_id,rpf in render_plugin['renderPluginFields'] %}
            {% if local_datafield.fieldtype.id not in allowed_fieldtypes[rpf_id] %}
                {% set is_valid_fieldtype = false %}
            {% endif %}
        {% endfor %}
    {% endif %}

    <fieldset>
        {% if is_valid_fieldtype == false %}
            <span><i class="fa fa-lg fa-exclamation-triangle"></i></span>
            <span>&nbsp;The "{{ render_plugin.pluginName }}" Render Plugin is not compatible with a "{{ local_datafield.fieldtype.typeclass }}" Datafield</span>
        {% else %}
            {{ render_plugin.description }}
        {% endif %}
    </fieldset>

{% if local_datafield == null %}    {# if render plugin is for a datatype #}
    <fieldset>
        {# Determine if the rendering plugin has any required fields #}
        {% set has_fields = 0 %}
        {% if render_plugin['renderPluginFields']|length > 0 %}
            {% set has_fields = 1 %}
        {% endif %}

        {% if has_fields == 0 %}
            This Render Plugin does not require specific fields.
        {% else %}
            {# Print out all required fields for this plugin #}
            <table class="pure-table pure-table-bordered pure-table-striped Cursor">
                <thead><tr>
                    <th>Field Name</th>
                    <th>Field Description</th>
                    <th>Field Type</th>
                    <th>Map to DataField...</th>
                </tr></thead>
                <tbody>
                {% for rpf_id,rpf in render_plugin['renderPluginFields'] %}
                    <tr>
                        <td><strong>{{ rpf.fieldName }}: </strong></td>
                        <td>{{ rpf.description }}</td>
                        <td>
                            <select id="plugin_fieldtype_{{ rpf_id }}" class="ODRRenderPluginFieldtype" name="plugin_fieldtypes[{{ rpf_id }}]">
                                {% for ft_id,typeClass in all_fieldtypes %}
                                    {% if ft_id in allowed_fieldtypes[rpf_id] %}
                                        <option value="{{ ft_id }}">{{ typeClass }}</option>
                                    {% endif %}
                                {% endfor %}
                            </select>
                        </td>
                        <td>
                            {# Print out a dropdown of fields in this datatype that match the fieldtype of the required field #}
                            <select id="plugin_map_{{ rpf_id }}" class="ODRRenderPluginMap" name="plugin_map[{{ rpf_id }}]" rel="{{ rpf_id }}">
                                <option value="-1" selected>Create new datafield...</option>
                                {% for df in datafields %}
                                    {% if df.fieldtype.id in allowed_fieldtypes[rpf_id] %}
                                        <option value="{{ df.id }}" rel="{{ df.fieldtype.id }}">{{ df.fieldName }}</option>
                                    {% endif %}
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>

            <div id="plugin_datafield_creation_warn">
                <span><i class="fa fa-lg fa-exclamation-circle"></i></span>
                <span>&nbsp;Saving this Render Plugin will trigger the creation of new Datafields</span>
            </div>
        {% endif %}
    </fieldset>

    <script>
        $(function() {
            {# apparently this block of code can't be moved to plugin_settings_dialog_form.html.twig #}
            $(".ODRRenderPluginMap").unbind('change').change(function() {
                var datafield_id = $(this).val();
                var render_plugin_field_id = $(this).attr('rel');
                var fieldtype_id = $(this).children(':selected').attr('rel');

                if (datafield_id != '-1') {
                    // Prevent user from changing fieldtype of existing datafield
                    $("#plugin_fieldtype_" + render_plugin_field_id).attr('disabled', 'disabled');
                    // Select fieldtype of selected datafield, for consistency
                    $("#plugin_fieldtype_" + render_plugin_field_id).val(fieldtype_id);

                    // Show warning about creating new datafields if needed
                    var show_warning = false;
                    $(".ODRRenderPluginMap").each(function() {
                        if ( $(this).val() == '-1' ) {
                            show_warning = true;
                            return false;
                        }
                    });

                    if (show_warning)
                        $("#plugin_datafield_creation_warn").show();
                    else
                        $("#plugin_datafield_creation_warn").hide();
                }
                else {
                    // Let user select fieldtype of new datafield
                    $("#plugin_fieldtype_" + render_plugin_field_id).removeAttr('disabled');
                     // Show warning about creating new datafields
                    $("#plugin_datafield_creation_warn").show();
                }
            });

        {% if render_plugin_instance != null %}
            // Pre-select any existing datafield mappings
            {% for num,rpm in render_plugin_instance['renderPluginMap'] %}
            $("#plugin_map_{{ rpm['renderPluginFields']['id'] }}").val("{{ rpm['dataField']['id'] }}");
            $("#plugin_map_{{ rpm['renderPluginFields']['id'] }}").trigger('change');
            {% endfor %}
        {% endif %}

        });
    </script>

{% else %}  {# render plugin is for a datafield #}
    {# Should only be one rpf entry... #}
    {% for rpf_id,rpf in render_plugin['renderPluginFields'] %}
        <input type="hidden" name="plugin_map[{{ rpf_id }}]" value="{{ local_datafield.id }}" />
    {% endfor %}
{% endif %}

{% if is_valid_fieldtype == true %}
    <fieldset style="text-align: left;">

        {# Determine if the rendering plugin has any available options #}
        {% set has_options = 0 %}
        {% if render_plugin['renderPluginOptions']|length > 0 %}
            {% set has_options = 1 %}
        {% endif %}

        {% if has_options == 0 %}
            <div style="text-align: center;">This Render Plugin has no options.</div>
        {% else %}
            {% for rpo_id,rpo in render_plugin['renderPluginOptions'] %}
                {# Save the default value for the RenderPluginOption #}
                {% set default_value = '' %}
                {% if rpo['defaultValue'] is defined %}
                    {% set default_value = rpo['defaultValue'] %}
                {% endif %}

                {# Locate the existing selection/value for this RenderPluginOption, if there is one #}
                {% set current_value = default_value %}
                {% if render_plugin_instance != null and render_plugin_instance['renderPluginOptionsMap'][rpo_id] is defined %}
                    {% set current_value = render_plugin_instance['renderPluginOptionsMap'][rpo_id]['value'] %}
                {% endif %}

                <div class="pure-u-1 pure-u-lg-1-2 {#pure-u-xl-1-3#}">
                    <label for="plugin_option_{{ rpo_id }}">
                        {{ rpo['displayName'] }}
                        <span class="ODRRenderPlugin_option_description" title="{{ rpo['description'] }}">?</span>
                    </label>

                {% if rpo['choices'] is defined and rpo['choices'] != null %}
                    {# Create a dropdown to display the available choices for this RenderPluginOption #}
                    <select id="plugin_option_{{ rpo_id }}" name="plugin_options[{{ rpo_id }}]">
                    {% for key,value in rpo['choices'] %}
                        <option value="{{ key }}" {% if key == current_value %}selected{% endif %}>{{ value }}</option>
                    {% endfor %}
                    </select>
                {% else %}
                    {# Create a textfield so the user can enter a value for this RenderPluginOption #}
                    <input id="plugin_option_{{ rpo_id }}" size="20" type="text" name="plugin_options[{{ rpo_id }}]" value="{{ current_value }}" />
                {% endif %}
                </div>

            {% endfor %}

        {% endif %}
    </fieldset>
{% endif %}

{% endspaceless %}
