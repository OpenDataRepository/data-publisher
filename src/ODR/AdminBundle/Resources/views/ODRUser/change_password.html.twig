{% spaceless %}

<div class="ODRContentWrapper pure-u-1">
    <div class="ODRThemeElement pure-u-1">
        <div class="ODRInnerBox pure-u-1">
            <h3 class="ODRHeader"><i class="fa fa-md fa-info-circle fa-fw"></i>
                Change Password - {{ target_user.getuserstring }}
                <span id="saved">&nbsp;&nbsp;&nbsp;SAVED</span>
            </h3>

            <div class="ODRBodyContent">
                {% include 'ODRAdminBundle:ODRUser:change_password_form.html.twig' with {'form': form} %}
            </div>
        </div>
    </div>
</div>

{% include 'ODRAdminBundle:ODRUser:password_rules.html.twig' with {'form': form} %}

<script>
    $(function() {
        $("#saved").hide();

        $("#submitButton").unbind('click').click(function() {
            submitForm();
        });

        $("#ODRAdminChangePasswordForm").submit(function(event) {
            // Prevent default form submission...only want the one from submitForm() to go through
            event.preventDefault();
        });

        $(".ODRReturnToProfile").unbind('click').click(function(event) {
            // Prevent default form submission
            event.preventDefault();
            event.stopImmediatePropagation();

{% if current_user.id != target_user.id %}
            var url = "{{ path('odr_profile_edit', {'user_id': 0}) }}";
            url = url.substring(0, (url.length - 1));
            url += {{ target_user.id }};
{% else %}
            var url = "{{ path('odr_self_profile_edit') }}";
{% endif %}

            UpdateURL(url);
        })
    });

    function submitForm() {
        if ( !ODR_isPasswordValid() ) {
            alert('Password is not valid');
            return;
        }

        var url = "{{ path('odr_admin_save_password') }}";

        $.ajax({
            url: url,
            type: 'POST',
            dataType: 'json',
            data: $("#ODRAdminChangePasswordForm").serialize(),
            success: function(data, textStatus, jqXHR) {
                $('#saved').fadeIn();

                setTimeout(function() {
                    $('#saved').fadeOut();
                }, 2500);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Don't need to do anything specific on an error
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
</script>

{% endspaceless %}
