{% spaceless %}

<div class="ODRContentWrapper pure-u-1">
    <div class="ODRThemeElement pure-u-1">
        <div class="ODRInnerBox pure-u-1">
            <h3 class="ODRHeader"><i class="fa fa-md fa-info-circle fa-fw"></i>
                Create User
                <span id="saved">&nbsp;&nbsp;&nbsp;SAVED</span>
            </h3>

            <div class="ODRBodyContent">
                {% include 'ODRAdminBundle:ODRUser:create_user_form.html.twig' with {'profile_form': profile_form} %}
            </div>
        </div>
    </div>
</div>

<script>
    $(function() {
        disableSearchSidebar();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}

        $("#saved").hide();

        $("#ODRUserProfileForm").validate({
            rules: {
                "{{ profile_form.email.vars.full_name }}": {
                    required: true,
                    email: true
                }
            },
            errorLabelContainer: "#email_errors",
            messages: {
                "{{ profile_form.email.vars.full_name }}": {
                    required: "Invalid email address",
                    email: "Invalid email address"
                }
            },
            submitHandler: function(form) {
                saveProfileForm();
            }
        });

        var old_email = '';
        $("#submitButton").removeClass('pure-button-primary').attr('disabled', 'disabled').attr('title', 'Email needs to be checked for availability first');
        $("#{{ profile_form.email.vars.id }}").unbind('keyup').unbind('paste');
        $("#{{ profile_form.email.vars.id }}").on('keyup paste', function() {
            var new_email = $(this).val();
            if (old_email != new_email) {
                old_email = new_email;

                $("#emailCheckButton").addClass('pure-button-primary').html('Check Email Availability').removeAttr('disabled');
                $("#submitButton").removeClass('pure-button-primary').attr('disabled', 'disabled').attr('title', 'Email needs to be checked for availability first');
            }
        });

        // Don't allow regular form submission...
        $("#ODRUserProfileForm").submit(function(event) {
            event.preventDefault();
        });
    });

    function checkEmail() {
        var url = "{{ path('odr_admin_new_user_check') }}";
        var email = $("#{{ profile_form.email.vars.id }}").val().trim();

        // Require a valid email address before sending an ajax request
        if ( !$("input[name='{{ profile_form.email.vars.full_name }}']").valid() )
            return;

        $.ajax({
            url: url,
            type: 'post',
            dataType: 'json',
            data: {"email": email},
            success: function(data, textStatus, jqXHR) {
                $("#emailCheckButton").removeClass('pure-button-primary').attr('disabled', 'disabled');

                if (data.d == 0) {
                    // Email not found
                    $("#submitButton").addClass('pure-button-primary').html('Save').attr('onclick', 'saveProfileForm();').removeAttr('disabled').removeAttr('title');
                }
                else {
                    // Email already exists
                    $("#submitButton").addClass('pure-button-primary').html('View User Permissions').attr('onclick', 'viewPermissions(' + data.d + ');').removeAttr('disabled').removeAttr('title');
                    $("#emailCheckButton").html('User already exists');
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Don't need to do anything specific on an error
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    function viewPermissions(user_id) {
        var url = "{{ path('odr_manage_user_groups', {'user_id': 0}) }}";
        url = url.substr(0, url.length-1);
        url += user_id;

        UpdateURL(url);
    }

    function saveProfileForm() {
        if ( !$("#ODRUserProfileForm").valid() ) {
            alert("Invalid form");
            return;
        }

        if ( !ODR_isPasswordValid() ) {
            alert('Password is not valid');
            return;
        }

        var url = "{{ path('odr_admin_new_user_save') }}";

        $("#submitButton").attr('disabled', 'disabled').html('Creating New User...');

        $.ajax({
            url: url,
            type: 'post',
            dataType: 'json',
            data: $("#ODRUserProfileForm").serialize(),
            success: function(data, textStatus, jqXHR) {
                // Redirect to their permissions page
                alert('User Created');
                UpdateURL( data.d.url );
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Reset the email validation and the save button
                checkEmail();
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
</script>

{% endspaceless %}
