{% spaceless %}

{# Determine permissino level of the user doing the changing of permissions #}
{% set admin_level = 0 %}
{% for role in admin_user.getroles %}
    {% if role == 'ROLE_SUPER_ADMIN' %}
        {% set admin_level = admin_level + 4 %}
    {% elseif role == 'ROLE_ADMIN' %}
        {% set admin_level = admin_level + 2 %}
    {% elseif role == 'ROLE_USER' %}
        {% set admin_level = admin_level + 1 %}
    {% endif %}
{% endfor %}


<div class="content">
<div class="header">
    <h2>User List</h2>
</div>
    <button type="button" id="deleted_user_toggle" class="pure-button" onclick="toggleDeletedUsers();" rel="Hide">Show deleted users</button>
{% if admin_level >= 3 %}
    <button type="button" class="pure-button" onclick="createNewUser();" rel="Hide">Create new user</button>
{% endif %}

    <div class="ODRTableOuterWrap">
    <div class="ODRTableWrap">
    <table id="ODRUserList" class="display dataTable">
        <thead>
            <tr>
                <th></th>
                <th>User Name</th>
                <th>Email</th>
                <th>Edit Profile</th>
                <th>Manage Groups</th>
                <th>Delete User</th>
            </tr>
        </thead>
        <tbody>
        {% for user in users %}
            <tr {% if user.enabled == 0 %}class="ODRDeletedUser ODRHidden"{% endif %}>
                <td>{{ user.id }}</td>
                <td>{{ user.getuserstring }}</td>
                <td>{{ user.email }}</td>

            {% if user.enabled == 1 %}
                {% set target_is_super_admin = false %}
                {% set target_is_admin = false %}
                {% for role in user.getroles %}
                    {% if role == "ROLE_SUPER_ADMIN" %}
                        {% set target_is_super_admin = true %}
                    {% endif %}
                    {% if role == "ROLE_ADMIN" %}
                        {% set target_is_admin = true %}
                    {% endif %}
                {% endfor %}

                <td class="center">
                    {% if user.id == admin_user.id %}
                    <a class="address" href="#{{ path('odr_self_profile_edit') }}"><i class="fa fa-lg fa-user"></i>&nbsp;Edit Profile</a>
                    {% elseif (admin_level == 3 and target_is_super_admin == false) or admin_level == 7 %}
                    <a class="address" href="#{{ path('odr_profile_edit', { 'user_id': user.id } ) }}"><i class="fa fa-lg fa-user"></i>&nbsp;Edit Profile</a>
                    {% endif %}
                </td>

                <td class="center">
                {% if target_is_super_admin == true or (admin_level == 1 and target_is_admin == true) %}
                    {# either target has all permissions by definition, or the user visiting this page has insufficient permissions...do nothing #}
                {% else %}
                    <a class="address" href="#{{ path('odr_manage_user_groups', { 'user_id': user.id } ) }}"><i class="fa fa-lg fa-list"></i>&nbsp;Manage Groups</a>
                {% endif %}
                </td>

                <td class="center">
                    {% if admin_level == 7 and user != admin_user %}
                    <a style="cursor:pointer;" onclick="deleteUser({{ user.id }});"><i class="fa fa-lg fa-times"></i>&nbsp;Delete User</a>
                    {% endif %}
                </td>

            {% else %}
                <td class="center"></td>
                <td class="center"></td>
                <td class="center">
                    {% if admin_level == 7 %}
                    <a style="cursor:pointer;" onclick="undeleteUser({{ user.id }});"><i class="fa fa-lg fa-repeat"></i>&nbsp;Undelete User</a>
                    {% endif %}
                </td>
            {% endif %}
            </tr>
        {% endfor %}

        </tbody>
    </table>
    </div>
    </div>
            
</div><!-- End of .content -->

<style>
    .ODRHidden {
        display: none;
    }
</style>

<script>
    $(function() {
        $("#ODRUserList").dataTable({
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                },
                {
                    "targets": [3,4,5],
                    "orderable": false,
                    "searchable": false,
                }
            ],
            "paging": false,
            "info": false,
            "language": {
                "emptyTable": "No Users found"
            }
        });

        $("#ODRUserList").removeAttr('style');
        redoRowClasses();
    });

    function redoRowClasses() {
        var count = 0;
        $("#ODRUserList tbody tr").each(function() {
            if ( !$(this).hasClass('ODRHidden') ) {
                count++;
                if ( count % 2 == 0 )
                    $(this).removeClass('odd').addClass('even');
                else
                    $(this).removeClass('even').addClass('odd');
            }
        });
    }

    function toggleDeletedUsers() {
        var action = $("#deleted_user_toggle").attr('rel');
        $("#deleted_user_toggle").html( action + " deleted users");

        if (action == "Hide") {
            $("#deleted_user_toggle").attr('rel', 'Show');
            $("#ODRUserList tbody tr.ODRDeletedUser").each(function() {
                $(this).removeClass('ODRHidden');
            });
        }
        else {
            $("#deleted_user_toggle").attr('rel', 'Hide');
            $("#ODRUserList tbody tr.ODRDeletedUser").each(function() {
                $(this).addClass('ODRHidden');
            });
        }

        redoRowClasses();
    }

    function deleteUser(user_id) {
        // Prevent an admin from deleting himself
        if (user_id == {{ admin_user.id }}) {
            alert("For safety reasons, an Admin can't delete his own profile.");
            return;
        }

        if ( confirm("Are you sure you want to delete this user?") ) {
            var url = '{{ path('odr_delete_user', { 'user_id': 0 } ) }}';
            url = url.substring(0, (url.length - 1));
            url += user_id;
            var dataType = "json";

            // Ajax Load Form in box
            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: dataType,
                success: function(data, textStatus, jqXHR) {
                    if (data.r == 0) {
                        alert("User Deleted");
                        $('#content').html(data.d.html);
                    }
                    else {
                        // TODO - no error message ability?
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        }
    }

    function undeleteUser(user_id) {
        var url = '{{ path('odr_undelete_user', { 'user_id': 0 } ) }}';
        url = url.substring(0, (url.length - 1));
        url += user_id;
        var dataType = "json";

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: dataType,
            success: function(data, textStatus, jqXHR) {
                if (data.r == 0) {
                    alert("User Reinstated");
                    $('#content').html(data.d.html);
                }
                else {
                    // TODO - no error message ability?
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

{% if admin_level >= 3 %}
    function createNewUser() {
        var url = '{{ path('odr_admin_new_user_create') }}';
        UpdateURL(url);
    }
{% endif %}
</script>

{% endspaceless %}
