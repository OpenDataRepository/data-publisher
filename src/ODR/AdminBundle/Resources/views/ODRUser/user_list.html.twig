{% spaceless %}

<div class="content">
    <div class="header">
        <h2>User List</h2>
    </div>

    {% if is_granted("ROLE_SUPER_ADMIN") %}
        {# Only super admins can see deleted users #}
        <button type="button" id="deleted_user_toggle" class="pure-button" onclick="toggleDeletedUsers();" rel="Hide">Show deleted users</button>
    {% endif %}
    {% if is_datatype_admin %}
    <button type="button" class="pure-button" onclick="createNewUser();" rel="Hide">Create new user</button>
    {% endif %}

    <div class="ODRTableOuterWrap">
        <div class="ODRTableWrap">
            <table id="ODRUserList" class="display dataTable">
                <thead><tr>
                    <th></th>
                    <th>User Name</th>
                    {% if is_granted("ROLE_SUPER_ADMIN") %}<th>Email</th>{% endif %}
                    <th>Institution</th>
                    <th>Edit Profile</th>
                    <th>Manage Groups</th>
                    <th>View Activity</th>
                    <th>Delete User</th>
                </tr></thead>
                <tbody>
                {% for user in users %}
                    {% set target_is_super_admin = user.hasrole("ROLE_SUPER_ADMIN") %}

                    <tr {% if user.enabled == 0 %}class="ODRDeletedUser ODRHidden"{% endif %}>
                        <td>{{ user.id }}</td>
                        <td>{{ user.getuserstring }}</td>
                        {% if is_granted("ROLE_SUPER_ADMIN") %}<td>{{ user.email }}</td>{% endif %}
                        <td>{{ user.institution }}</td>

                    {% if user.enabled == 1 %}
                        <td class="center">
                        {% if user.id == admin_user.id %}
                            {# Calling user is always able to edit their own profile #}
                            <a class="address" href="#{{ path('odr_self_profile_edit') }}"><i class="fa fa-lg fa-user"></i>&nbsp;Edit Profile</a>
                        {% elseif is_granted("ROLE_SUPER_ADMIN") %}
                            {# Calling user is only able to edit other users' profiles if they're a super admin #}
                            <a class="address" href="#{{ path('odr_profile_edit', { 'user_id': user.id } ) }}"><i class="fa fa-lg fa-user"></i>&nbsp;Edit Profile</a>
                        {% endif %}
                        </td>

                        <td class="center">
                        {% if target_is_super_admin == true %}
                            {# target has all permissions by definition...do nothing #}
                        {% elseif user == admin_user %}
                            {# users are unable to modify their own group membership #}
                        {% elseif is_datatype_admin %}
                            {# calling user can modify permissions for at least one datatype, so let them reach the group membership page for this user #}
                            <a class="address" href="#{{ path('odr_manage_user_groups', { 'user_id': user.id } ) }}"><i class="fa fa-lg fa-list"></i>&nbsp;Manage Groups</a>
                        {% endif %}
                        </td>

                        <td class="center">
                        {% if is_granted("ROLE_SUPER_ADMIN") or can_edit_datatype %}
                            {# calling user has edit permissions for at least one datatype, so let them view the tracking page #}
                            <a class="address" href="#{{ path('odr_track_user_changes', { 'target_user_id': user.id } ) }}"><i class="fa fa-lg fa-camera"></i>&nbsp;View Activity</a>
                        {% endif %}
                        </td>

                        <td class="center">
                        {% if is_granted("ROLE_SUPER_ADMIN") and user.id != admin_user.id %}
                            {# Users are only allowed to delete other users if they're a super admin #}
                            <a style="cursor:pointer;" onclick="deleteUser({{ user.id }});"><i class="fa fa-lg fa-times"></i>&nbsp;Delete User</a>
                        {% endif %}
                        </td>

                    {% else %}
                        {# User is deleted #}
                        <td class="center"></td>
                        <td class="center"></td>
                        <td class="center">
                        {% if is_granted("ROLE_SUPER_ADMIN") or can_edit_datatype %}
                            {# viewing changes made by deleted users is permissible #}
                            {# calling user has edit permissions for at least one datatype, so let them view the tracking page #}
                            <a class="address" href="#{{ path('odr_track_user_changes', { 'target_user_id': user.id } ) }}"><i class="fa fa-lg fa-camera"></i>&nbsp;View Activity</a>
                        {% endif %}
                        </td>
                        <td class="center">
                        {% if is_granted("ROLE_SUPER_ADMIN") %}
                            {# Only able to undelete a user if calling user is a super admin #}
                            <a style="cursor:pointer;" onclick="undeleteUser({{ user.id }});"><i class="fa fa-lg fa-repeat"></i>&nbsp;Undelete User</a>
                        {% endif %}
                        </td>

                    {% endif %}
                    </tr>
                {% endfor %}
                </tbody>

            </table>
        </div><!-- End of .ODRTableWrap -->
    </div><!-- End of .ODRTableOuterWrap -->
            
</div><!-- End of .content -->

<script>
    $(function() {
        disableSearchSidebar();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}

        {% if is_granted("ROLE_SUPER_ADMIN") %}
        var not_searchable = [4,5,6];
        {% else %}
        var not_searchable = [3,4,5];    {# there's no "email" column to search/order #}
        {% endif %}

        $("#ODRUserList").dataTable({
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                },
                {
                    "targets": not_searchable,
                    "orderable": false,
                    "searchable": false,
                }
            ],
            "paging": false,
            "info": false,
            "language": {
                "emptyTable": "No Users found"
            }
        });
        $("#ODRUserList").removeAttr('style');

        redoRowClasses( $("#ODRUserList") );
    });

{% if is_granted("ROLE_SUPER_ADMIN") %}
    function toggleDeletedUsers() {
        var action = $("#deleted_user_toggle").attr('rel');
        $("#deleted_user_toggle").html( action + " deleted users");

        if (action == "Hide") {
            $("#deleted_user_toggle").attr('rel', 'Show');
            $("#ODRUserList tbody tr.ODRDeletedUser").each(function() {
                $(this).removeClass('ODRHidden');
            });
        }
        else {
            $("#deleted_user_toggle").attr('rel', 'Hide');
            $("#ODRUserList tbody tr.ODRDeletedUser").each(function() {
                $(this).addClass('ODRHidden');
            });
        }

        redoRowClasses( $("#ODRUserList") );
    }
{% endif %}

{% if is_granted("ROLE_SUPER_ADMIN") %}
    function deleteUser(user_id) {
        // Prevent an admin from deleting himself
        if (user_id == {{ admin_user.id }}) {
            alert("For safety reasons, an Admin can't delete his own profile.");
            return;
        }

        if ( confirm("If you delete this user, they will be unable to log in and lose all permissions across all databases.  Are you sure?") ) {
            var url = '{{ path('odr_delete_user', { 'user_id': 0 } ) }}';
            url = url.substring(0, (url.length - 1));
            url += user_id;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function(data, textStatus, jqXHR) {
                    if (data.r == 0) {
                        alert("User Deleted");
                        UpdateURL(data.d.url);
                    }
                    else {
                        // TODO - no error message ability?
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        }
    }
{% endif %}

{% if is_granted("ROLE_SUPER_ADMIN") %}
    function undeleteUser(user_id) {
        var url = '{{ path('odr_undelete_user', { 'user_id': 0 } ) }}';
        url = url.substring(0, (url.length - 1));
        url += user_id;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                if (data.r == 0) {
                    alert("User Reinstated");
                    UpdateURL(data.d.url);
                }
                else {
                    // TODO - no error message ability?
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
{% endif %}

{% if is_datatype_admin %}
    function createNewUser() {
        var url = '{{ path('odr_admin_new_user_create') }}';
        UpdateURL(url);
    }
{% endif %}
</script>

{% endspaceless %}
