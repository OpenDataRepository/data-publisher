{% spaceless %}
<h1 class="grid_12 no-margin-top-phone">
    <span>Datatype Properties for {{ datatype.shortname }}</span>
    <span id="saved">&nbsp;&nbsp;&nbsp;SAVED</span>
</h1>

<div class="ODRFormWrap">
    <form action="{{ path('odr_save_type') }}" method="post" class="{#full validate#} pure-form pure-form-aligned" id="SaveDataTypeForm_{{ datatype.id }}">
        <input type="hidden" name="datatype_id" value="{{ datatype.id }}" />

        <fieldset>
            <div class="pure-control-group">
                <label for="namefield_select">Name Field:</label>
                <select id="namefield_select" name="namefield" onchange="SaveNameField({{ datatype.id }});">
                    <option value="-1" {% if datatype.getnamefield == null %}selected{% endif %}>NONE</option>
                    {% for datafield in name_datafields %}
                        <option value="{{ datafield.id }}" {% if datatype.getnamefield != null and datatype.getnamefield.id == datafield.id %}selected{% endif %}>{{ datafield.getfieldname }}</option>
                    {% endfor %}
                </select>
            </div>

            <div class="pure-control-group">
                <label for="sortfield_select">Sort Field:</label>
                <select id="sortfield_select" name="sortfield" onchange="SaveSortField({{ datatype.id }});">
                    <option value="-1" {% if datatype.getsortfield == null %}selected{% endif %}>NONE</option>
                    {% for datafield in sort_datafields %}
                        <option value="{{ datafield.id }}" {% if datatype.getsortfield != null and datatype.getsortfield.id == datafield.id %}selected{% endif %}>{{ datafield.getfieldname }}</option>
                    {% endfor %}
                </select>
            </div>

            <div class="pure-control-group">
                <input type="hidden" id="old_search_slug" name="old_search_slug" value="{{ datatype.getsearchslug }}" />
                <label for="search_slug">Search Abbreviation:</label>
                <span>
                    {{ site_baseurl ~ '/'}}<input type="text" id="new_search_slug" name="search_slug" value="{{ datatype.getsearchslug }}" maxlength="32" />
                </span>
                <span id="search_slug_error" style="display: none;">
                    <i class="fa fa-lg fa-exclamation-triangle"></i>&nbsp;A Datatype with this abbreviation already exists!
                </span>
            </div>


            <div class="pure-control-group">
                <label for="imagefield_select">Background Image Field:</label>
                <select id="imagefield_select" name="imagefield" onchange="SaveImageField({{ datatype.id }});">
                    <option value="-1" {% if datatype.getbackgroundimagefield == null %}selected{% endif %}>NONE</option>
                    {% for datafield in image_datafields %}
                        <option value="{{ datafield.id }}" {% if datatype.getbackgroundimagefield != null and datatype.getbackgroundimagefield.id == datafield.id %}selected{% endif %}>{{ datafield.getfieldname }}</option>
                    {% endfor %}
                </select>
            </div>

            <div class="pure-control-group">
                <label for="shortdisplay_select">Short Display:</label>
                <select id="shortdisplay_select" name="shortdisplay" onchange="ToggleTextResults({{ datatype.id }});">
                    <option value="1" {% if datatype.getuseshortresults == 1 %}selected{% endif %}>ShortResults</option>
                    <option value="0" {% if datatype.getuseshortresults == 0 %}selected{% endif %}>TextResults</option>
                </select>
            </div>

        </fieldset>
    </form>

    <div id="TextResults_design" class="row">
        <div>
            <h1>Available Fields</h1>
        </div>
        <div id="TextResults_start" class="TextResults_design">
        {% for datafield in textresults_datafields %}
            <div id="DataField_{{ datafield.id }}" class="DraggableField TextResults_DataField{% if datafield.getdisplayorder > 0 %} TextResults_hidden{% endif %}">{{ datafield.getfieldname }}</div>
        {% endfor %}
        </div>

        <div>
            <h1>Field Order</h1>
        </div>
        <div id="TextResults_order" class="TextResults_design SortableArea SortableArea_design">
        {% for datafield in textresults_datafields %}
            {% if datafield.getdisplayorder > 0 %}<span id="DataField_{{ datafield.id }}_design" class="TextResults_DataField">{{ datafield.getfieldname }}</span>{% endif %}
        {% endfor %}
        </div>

        <div>
            <h1>Do Not Display</h1>
        </div>
        <div id="TextResults_delete" class="TextResults_design SortableArea"></div>
    </div>

</div>

<style type="text/css">
    .ODRFormWrap {
        padding-top: 25px;
    }
    .TextResults_design {
        border: 1px solid #FF0000;
        min-height: 100px;
        position: relative;
        width: 900px;
        /*z-index: -1;*/
        clear: right;
    }
    #TextResults_design>div {
        float: none;
    }
    .TextResults_hidden {
        display: none !important;
    }
    .TextResults_DataField {
        /*position: relative;*/
        display: inline-block;
        border: 1px solid #0000FF;
        margin: 10px;
        padding: 10px;
        cursor: pointer;
        /*top: 25px;*/
    }
    #search_slug_error {
        color: red;
    }
</style>

<script>
$(function() {

    $("#SaveDataTypeForm_{{ datatype.id }}").submit(function(event) {
        event.preventDefault();
    });

    $("#saved").hide();
    $(".MenuDesignArea").remove();

    // Need to watch the search slug field...
    window.SearchSlugInterval_{{ datatype.id }} = null;
    $("#new_search_slug").unbind('keyup');
    $("#new_search_slug").unbind('paste');
    $("#new_search_slug").on('keyup paste', function() {
        window.SearchSlugInterval_{{ datatype.id }} = window.clearInterval(window.SearchSlugInterval_{{ datatype.id }});
        window.SearchSlugInterval_{{ datatype.id }} = window.setInterval("SaveSearchSlug({{ datatype.id }})", 2000);
    });

    var draggable_id = null;
    $(".DraggableField").draggable({

        // Need to use this combination of settings so datafield visually shows on top of all theme elements
        appendTo: $(".ODRFormWrap"),
        helper: "clone",
        zIndex: 1000,

        start: function() {
            // Save the ID of the field that's being dragged around
            draggable_id = $(this).attr('id');
        },
        stop: function (event, ui) {
            // jQuery sortable's stop event appears to fire before draggable's stop event...don't want this ID anymore
            draggable_id = null;
        },
        grid: [ 2, 2 ],
        connectToSortable: ".SortableArea_design"
    });

    $(".SortableArea").sortable({

//        cancel: ".DraggableField",
//        axis: "x",

        start: function( event, ui ) {

            // Style the placeholder to more closely match the datafield being drug around
//            $(ui.placeholder).addClass( $(ui.helper).attr('class') );

            $(ui.placeholder).removeAttr('style');
            $(ui.placeholder).css( 'max-height', $(ui.helper).height() );
            $(ui.placeholder).css( 'width', $(ui.helper).width() * 0.95 );
            $(ui.placeholder).css( 'padding', '10px' );
            $(ui.placeholder).css( 'margin', '10px' );

//            $(ui.placeholder).css( 'top', '100px' );
//            $(ui.placeholder).css( 'display', 'inline-block' );
//            $(ui.placeholder).css( 'visibility', 'visible' );
        },
        stop: function( event, ui ) {
            // Determine where the sortable field ended up
            var ending_div_id = $(ui.item).parent().attr('id');

            // If the item ended up in the delete box...
            if (ending_div_id === 'TextResults_delete') {
                // Remove the item
                var item_id = $(ui.item).attr('id').split(/_/);
                $(ui.item).remove();

                // Re-show the original DraggableField
                var original_id = '#' + item_id[0] + '_' + item_id[1];
                $(original_id).removeClass('TextResults_hidden');
            }
            // If a draggable was dropped into here...
            else if (draggable_id !== null) {
                // The new item in the SortableArea has the old DraggableField properties...fix that
                $(ui.item).removeClass('DraggableField ui-draggable');
                $(ui.item).attr('id', draggable_id + '_design');
                $(ui.item).draggable('destroy');
                $(ui.item).css('display', '');

                // Hide the old DraggableField
                $('#'+draggable_id).addClass('TextResults_hidden');

                // Refresh the SortableArea so the new item can be sorted
                $(".SortableArea").sortable('refresh');
            }

            // Reset the placeholder
            $(ui.item).removeAttr('style');

            // Save the changes
            SaveFieldOrder();
        },
        connectWith: ".SortableArea",
        grid: [ 2, 2 ]
    });
    $(".SortableArea").disableSelection();


});

function SaveFieldOrder() {

    var unused_field_ids = '';
    $('#TextResults_start').find('.TextResults_DataField').not('.TextResults_hidden').each(function() {
        var id_data = $(this).attr('id').split(/_/);
        unused_field_ids += id_data[1] + ',';
    });

    var used_field_ids = '';
    $('#TextResults_order').find('.TextResults_DataField').each(function() {
        var id_data = $(this).attr('id').split(/_/);
        var id =  id_data[1];
        used_field_ids += id + ',';
    });

    unused_field_ids = unused_field_ids.substring(0, unused_field_ids.length-1);
    used_field_ids = used_field_ids.substring(0, used_field_ids.length-1);

    var url = '{{ path('odr_textresults_field_order', { 'unused_field_ids': 0, 'used_field_ids': 0 } ) }}';
    url = url.substring(0, (url.length - 3));
    url += unused_field_ids + '/' + used_field_ids;

    var dataType = "json";
    $.ajax({
        cache: false,
        type: 'GET',
        url: url,
        dataType: dataType,
        success: function(data, textStatus, jqXHR) {
            if(data.r == 0) {
                $('#saved').fadeIn();
                setTimeout(function() {
                    $('#saved').fadeOut();
                }, 1500);
            }
            else {
                // An error has occurred.
                // Show Error message dialog
                alert(data.d);
            }
        },
        complete: function(jqXHR, textStatus) {
            // Get the xdebugToken from response headers
            var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

            // If the Sfjs object exists
            if (typeof Sfjs !== "undefined") {
                // Grab the toolbar element
                var currentElement = $('.sf-toolbar')[0];

                // Load the data of the given xdebug token into the current toolbar wrapper
                Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
            }
        }
    });
}

function ToggleTextResults(id) {
{#
    if ( $("#TextResults_design").is(':hidden') )
        $("#TextResults_design").fadeIn();
    else
        $("#TextResults_design").fadeOut();
#}
    SubmitForm(id);
}

function SaveSortField(id) {

    SubmitForm(id);
}

function SaveNameField(id) {

    SubmitForm(id);
}

function SaveImageField(id) {

    SubmitForm(id);
}

function SaveSearchSlug(id) {
    window.clearInterval(window.SearchSlugInterval_{{ datatype.id }});
    // TODO - validation on the field?
    if ( $("#new_search_slug").val().match(/[^a-zA-Z0-9_]+/) === null ) {

        if ( $("#new_search_slug").val() !== $("#old_search_slug").val() ) {
            var url = "{{ site_baseurl }}" + '/' + $("#new_search_slug").val();
            if ( $("#new_search_slug").val() == '' )
                url = '';

            $("#search_url").html(url);

            SubmitForm(id);
//            $("#old_search_slug").val( $("#new_search_slug").val() );
        }
    }
    else {
        alert('Search Abbreviation must consist of alphanumeric characters only');
        $("#new_search_slug").val( $("#old_search_slug").val() );
    }
}

function SubmitForm(id) {
    var url = '{{ path('odr_save_type') }}';
    
    var form_data = $("#SaveDataTypeForm_" + id).serialize();
    var dataType = "json";

    $.ajax({
        type: 'POST',
        url: url,
        data: form_data,
        dataType: dataType,
        success: function(data, textStatus, jqXHR) {
            if(data.r == 0) {
                $('#saved').fadeIn();
                setTimeout(function() {
                    $('#saved').fadeOut();
                }, 1500);

                $("#old_search_slug").val( $("#new_search_slug").val() );
            }
            else if(data.r == 2) {
                $('#saved').fadeIn();
                setTimeout(function() {
                    $('#saved').fadeOut();
                }, 1500);

                $("#new_search_slug").attr('readonly', 'readonly');
                $('#search_slug_error').fadeIn();
                setTimeout(function() {
                    $('#search_slug_error').fadeOut();
                    $("#new_search_slug").val( $("#old_search_slug").val() );
                    $("#new_search_slug").removeAttr('readonly');
                }, 3000);

            }
            else {
                // An error has occurred.
                // Show Error message dialog
                alert(data.d);
                window.location.reload();
            }
        },
        complete: function(jqXHR, textStatus) {
            // Get the xdebugToken from response headers
            var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

            // If the Sfjs object exists
            if (typeof Sfjs !== "undefined") {
                // Grab the toolbar element
                var currentElement = $('.sf-toolbar')[0];

                // Load the data of the given xdebug token into the current toolbar wrapper
                Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
            }
        }
    });
}
</script>
{% endspaceless %}
