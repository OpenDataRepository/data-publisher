{% spaceless %}
    <div class="ODRContentWrapper">
        {% set level = 0 %}
        {% for role in user.getroles %}
            {% if role == 'ROLE_SUPER_ADMIN' %}
                {% set level = level + 4 %}
            {% elseif role == 'ROLE_ADMIN' %}
                {% set level = level + 2 %}
            {% elseif role == 'ROLE_USER' %}
                {% set level = level + 1 %}
            {% endif %}
        {% endfor %}


        {# Template Group Default Datatype Manager #}
        {% set datatype = related_datatypes[initial_datatype_id] %}
        {% set datatype_meta = datatype.dataTypeMeta %}

        {% set datatype_baseurl = path('odr_search', { 'search_slug': datatype_meta.searchSlug } ) %}
        {% if datatype_meta.searchSlug == '' %}
            {# this shouldn't be an issue anymore, but keep around just in case #}
            {% set datatype_baseurl = path('odr_admin_homepage') %}
        {% endif %}

        {% set is_metadata_datatype = false %}
        {% if datatype.metadata_for is not null %}
            {% set is_metadata_datatype = true %}
        {% endif %}

        {# Pre-determine which permissions user has for this datatype... #}
        {% set can_view_datatype = false %}
        {% set can_view_datarecord = false %}
        {% set can_edit_datarecord = false %}
        {% set can_add_datarecord = false %}
        {% set can_delete_datarecord = false %}
        {% set is_datatype_admin = false %}

        {% if datatype_permissions[ datatype.id ] is defined %}

            {% if datatype_permissions[ datatype.id ][ 'dt_view' ] is defined %}
                {% set can_view_datatype = true %}
            {% endif %}
            {% if datatype_permissions[ datatype.id ][ 'dr_view' ] is defined %}
                {% set can_view_datarecord = true %}
            {% endif %}
            {% if datatype_permissions[ datatype.id ][ 'dr_edit' ] is defined %}
                {% set can_edit_datarecord = true %}
            {% endif %}
            {% if datatype_permissions[ datatype.id ][ 'dr_add' ] is defined %}
                {% set can_add_datarecord = true %}
            {% endif %}
            {% if datatype_permissions[ datatype.id ][ 'dr_delete' ] is defined %}
                {% set can_delete_datarecord = true %}
            {% endif %}
            {% if datatype_permissions[ datatype.id ][ 'dt_admin' ] is defined %}
                {% set is_datatype_admin = true %}
            {% endif %}
        {% endif %}

        {% if can_view_datatype or datatype_meta.publicDate|is_public == true %}
            {% include 'ODRAdminBundle:Default:generic_block_head.html.twig' with {
                'header_label': 'Database Tools',
                'pure_sizes': 'pure-u-md-1-4 pure-u-lg-5-24 pure-u-xl-5-24',
                'icon': 0
            } %}

            <div {#{% if hidden_datatype %}class="ODRPublicDatatype ODRHidden"{% endif %}#}>
                <span id="ODRDatarecordList_{{ datatype.id }}_name">{{ datatype_meta.longName }}</span>
                &nbsp;
                <span class="ODRDatatypeInfoDiv">
                    <i class="fa fa-lg fa-info-circle"></i>
                    <span class="ODRDatatypeInfo">
                        <div>
                            <b>Created By: </b>{{ datatype.createdBy|user_string }}
                            <b> on </b>{{ datatype.created|date('Y-m-d') }}
                        </div>
                        <div>
                            <b>Description: </b>{{ datatype_meta.description }}
                        </div>
                    </span>
                </span>

                {# number of datarecords for this datatype #}
                {% set datarecord_count = 0 %}
                {% if related_metadata[ datatype.id ] is defined %}
                    {% set datarecord_count = related_metadata[ datatype.id ] %}
                {% endif %}
                <div>
                    Records:
                    <span id="ODRDatarecordList_{{ datatype.id }}_count">{{ datarecord_count }}</span>
                </div>

                {# link to search this datatype #}
                <div>
                    {% if datarecord_count == 0 %}
                        {# don't display link, nothing to view #}
                    {% else %}
                        <a id="ODRDatarecordList_{{ datatype.id }}_search"
                           href="{{ datatype_baseurl }}"
                           title="Search {{ datatype_meta.shortName }} DataRecords"
                        >
                            <i class="fa fa-lg fa-search"></i>&nbsp;Search
                        </a>
                    {% endif %}
                </div>

                {# add/import links for this datatype...only makes sense for a metadata datatype if
                   it doesn't already have a record #}
                <div>
                    {% if can_add_datarecord %}
                        {% if (is_metadata_datatype and datarecord_count == 0)
                            or (not is_metadata_datatype)
                        %}
                        <a id="ODRDatarecordList_{{ datatype.id }}_add"
                           class="Pointer"
                           onclick="addDataRecord('{{ datatype_baseurl }}',{{ datatype.id }});"
                        >
                            <i class="fa fa-lg fa-plus-circle"></i>&nbsp;Add New Record
                        </a>
                        {% endif %}
                    {% endif %}
                </div>

                {# CSV import link for this datatype...never makes sense for a metadata dataype #}
                <div>
                    {% if is_datatype_admin and not is_metadata_datatype %}
                        <a class="address"
                           href="{{ datatype_baseurl }}#{{ path('odr_csv_import', { 'datatype_id': datatype.id }) }}"
                        >
                            <i class="fa fa-lg fa-upload"></i>&nbsp;Import
                        </a>
                    {% endif %}
                </div>

                {# master layout designer link #}
                <div>
                    {% if is_datatype_admin %}
                        <a id="ODRDatatypeList_{{ datatype.id }}_master_layout"
                           class="address"
                           href="{{ datatype_baseurl }}#{{ path('odr_design_master_theme', { 'datatype_id': datatype.id }) }}"
                           title="Edit {{ datatype_meta.shortName }} Master Design"
                        >
                            <i class="fa fa-lg fa-pencil"></i>&nbsp;Edit Database Design
                        </a>
                    {% endif %}
                </div>

                {# TODO - some way to create a metadata thingy from here if one doesn't exist? #}
                {# metadata layout designer link...never makes sense for a metadata datatype #}
                <div>
                {% if not is_metadata_datatype %}
                    {% if level >= 3 and is_datatype_admin %}    {# ROLE_ADMIN or above #}
                        {% if datatype.metadata_datatype is defined and datatype.metadata_datatype is not null %}
                            <a id="ODRDatatypeList_{{ datatype.id }}_master_layout"
                               class="address"
                               href="{{ datatype_baseurl }}#{{ path('odr_datatype_properties', { 'datatype_id': datatype.id, 'wizard': 0 }) }}"
                               title="Edit {{ datatype_meta.shortName }} Master Layout"
                            >
                                <i class="fa fa-lg fa-pencil"></i>&nbsp;Edit Database Properties
                            </a>
                        {%  else %}
                            <a id="ODRDatatypeList_{{ datatype.id }}_master_layout"
                               class="address"
                               href="{{ datatype_baseurl }}#{{ path('odr_add_metadata_type_chooser', { 'datatype_id': datatype.id }) }}"
                               title="Choose a metadata template"
                            >
                                <i class="fa fa-lg fa-plus-circle"></i>
                                <span class="pure-visible-xl">&nbsp;Add Properties Page</span>
                            </a>
                        {% endif %}
                    {% endif %}
                {% endif %}
                </div>

                {# Group management link for this datatype #}
                <div>
                {% if level >= 3 and is_datatype_admin %}    {# ROLE_ADMIN or above #}
                    <a id="ODRDatatypeList_{{ datatype.id }}_manage_groups"
                       class="address"
                       href="{{ datatype_baseurl }}#{{ path('odr_manage_groups', { 'datatype_id': datatype.id }) }}"
                    >
                        <i class="fa fa-lg fa-cog"></i>&nbsp;Manage Groups
                    </a>
                {% endif %}
                </div>

            {% if is_datatype_admin and not is_metadata_datatype %}
                {# spacer div so deletion is harder to unintentionally click on #}
                <div>&nbsp;</div>

                {# deletion link for this datatype #}
                <div>
                    <a id="ODRDatatypeList_{{ datatype.id }}_delete"
                       class="Pointer"
                       onclick="deleteDataType({{ datatype.id }});"
                    >
                        <i class="fa fa-lg fa-trash-o"></i>&nbsp;Delete
                    </a>
                </div>
            {% endif %}

            </div>
            {% include 'ODRAdminBundle:Default:generic_block_foot.html.twig' %}
        {% endif %}
        {# Template Group Default Datatype Manager #}


        {# Template Group Instructions #}
        {% include 'ODRAdminBundle:Default:generic_block_head.html.twig' with {
            'header_label': 'Manage Your Database',
            'pure_sizes': 'pure-u-md-3-4 pure-u-lg-19-24 pure-u-xl-19-24',
            'icon': 0
        } %}
        <p>The settings under the "Manage Database" heading allow you to modify and add records to your database.</p>
        <p>Your database may have related databases that provide reference or other data that are used in your database.
            If so, you can managed those databases using the tools in the list of "Related Databases" below. Depending
            on
            your permission level, you may not have access to all features of the related databases.</p>
        {% include 'ODRAdminBundle:Default:generic_block_foot.html.twig' %}
        {# END Template Group Instructions #}


        {# Manage Related Databases #}
        {% include 'ODRAdminBundle:Default:generic_block_head.html.twig' with {
            'header_label': 'Related Databases',
            'pure_sizes': 'pure-u-md-1-1 pure-u-lg-24-24 pure-u-xl-24-24',
            'icon': 0
        } %}
        {% include 'ODRAdminBundle:Datatype:type_list_related_databases.html.twig' with {
            'top_level_datatype': datatype,
            'datatypes': related_datatypes,
            'metadata': related_metadata,
            'datatype_permissions': datatype_permissions
        } %}
        {% include 'ODRAdminBundle:Default:generic_block_foot.html.twig' %}
        {# END Manage Related Databases #}


        {# Recent Activity Graphs #}
        {% include 'ODRAdminBundle:Default:generic_block_head.html.twig' with {
            'header_label': 'Recent Activity over the past 6 weeks',
            'pure_sizes': 'pure-u-md-1-1 pure-u-lg-24-24 pure-u-xl-24-24',
            'icon': 0
        } %}
        <div id="ODRDashboardGraphs">
        {% if dashboard_graphs|raw|length > 0 %}
            {{ dashboard_graphs | raw }}
        {% else %}
            <div style="margin-left: 20px;">No changes made</div>
        {% endif %}
        </div>
        {% include 'ODRAdminBundle:Default:generic_block_foot.html.twig' %}
        {# END Recent Activity Graphs #}
    </div>

    <script>
        $(function () {
            disableSearchSidebar();    {# defined in ODRAdminBundle:Default:common_js.html.twig #}

            // Get the sparkline plugin to work on the smaller graphs
            $(".sparkline").sparkline('html', {type: 'bar', barWidth: '8', height: '50', stackedBarColor: ['#04710a', '#9f1915']});
        });

        function addDataRecord(urlpath, datatype_id) {
            if (confirm('Are you sure you want to create a new record?')) {
                var url = '{{ path('odr_record_add', { 'datatype_id': 0 }) }}';
                url = url.substring(0, (url.length - 1));
                url += datatype_id;

                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: url,
                    dataType: "json",
                    success: function (data, textStatus, jqXHR) {
                        // Reload this area of the page
                        var datarecord_id = data.d.datarecord_id;

                        var url = urlpath + '#{{ path('odr_record_edit', { 'datarecord_id': 0 }) }}';
                        url = url.substring(0, (url.length - 1));
                        url += datarecord_id;

                        // Adding a new record from here makes changes both before and after the
                        //  hash...this'll attempt to load the edit page and fail the first time,
                        //  requiring the reload() call to actually
                        window.location = url;
                        window.location.reload();

                        // UpdateURL(url) just changes stuff after the hash creating a bad URL
                        // LoadContentFullAjax(url) and $(window).hashchange() don't work
                        // loadSearchContent(url) and window.location.assign(url) don't do anything
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Don't need to do anything specific on an error
                    },
                    complete: function (jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {
                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                        }
                    }
                });
            }
        }

        function deleteDataType(datatype_id) {
            var datatype_name = $("#ODRDatarecordList_" + datatype_id + "_name").html();

            if (confirm("Are you sure you want to delete the \"" + datatype_name + "\" database and all associated records?")) {
                // Delete the datatype selected
                var url = '{{ path('odr_design_delete_datatype', { 'datatype_id': 0 }) }}';
                url = url.substring(0, (url.length - 1));
                url += datatype_id;

                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: url,
                    dataType: "json",
                    success: function (data, textStatus, jqXHR) {
                        // ...the only safe place to reload is the datatype list
                        window.location = '{{ path('odr_admin_homepage') }}';
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Don't need to do anything specific on an error
                    },
                    complete: function (jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {
                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                        }
                    }
                });
            }
        }

    </script>
{% endspaceless %}
