{% spaceless %}

{% set level = 0 %}
{% for role in user.getroles %}
    {% if role == 'ROLE_SUPER_ADMIN' %}
        {% set level = level + 4 %}
    {% elseif role == 'ROLE_ADMIN' %}
        {% set level = level + 2 %}
    {% elseif role == 'ROLE_USER' %}
        {% set level = level + 1 %}
    {% endif %}
{% endfor %}

        
<div class="tabletools">
    {% if level > 1 %}
    <div>
        <button id="ODRDatatypeList_createDatatype" class="pure-button pure-button-primary ODRCreateDatatype"><i class="fa fa-lg fa-plus"></i> New Database</button>
    </div>
    {% endif %}
{#
    {% if level == 7 %}
    <div>
        <button id="ODRDatatypeList_recache" class="pure-botton pure-button-primary ODRRecacheAll"><i class="fa fa-lg fa-refresh"></i>Recache All Datatypes</button>
    </div>
    {% endif %}
#}
</div>

<div id="ODRDataTypeListWrapper">
<table id="ODRDatatypeList" class="display dataTable">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th>Database Name</th>
            <th>Viewable Records</th>
            <th>Master Layout</th>
            <th>Derivative Layouts</th>
            <th>Manage Groups</th>
            <th>CSV Import</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
    {% for datatype in datatypes %}

        {% set datatype_baseurl = path('odr_search', { 'search_slug': datatype.dataTypeMeta.searchSlug } ) %}

        {# Pre-determine which permissions user has for this datatype... #}
        {% set is_datatype_admin = false %}

        {% if datatype_permissions[ datatype.id ] is defined %}
            {% if datatype_permissions[ datatype.id ][ 'dt_admin' ] is defined %}
                {% set is_datatype_admin = true %}
            {% endif %}
        {% endif %}


        {% if is_datatype_admin == true %}
        <tr>
            <td>{{ datatype.id }}</td>
            <td>
                <span class="ODRDatatypeInfoDiv">
                    <i class="fa fa-lg fa-info-circle"></i>
                    <span class="ODRDatatypeInfo">
                        <div>
                            <b>Created By: </b>{{ datatype.createdBy|user_string }}<b> on </b>{{ datatype.created|date('Y-m-d') }}
                        </div>
                        <div>
                            <b>Description: </b>{{ datatype.dataTypeMeta.description }}
                        </div>
                    </span>
                </span>
            </td>
            <td id="ODRDatatypeList_{{ datatype.id }}_name">{{ datatype.dataTypeMeta.shortName }}</td>


            {# number of datarecords for this datatype #}
            {% set datarecord_count = 0 %}
            {% if metadata[ datatype.id ] is defined %}
                {% set datarecord_count = metadata[ datatype.id ] %}
            {% endif %}
            <td id="ODRDatarecordList_{{ datatype.id }}_count">{{ datarecord_count }}</td>


            {# master layout designer link #}
            <td>
            {% if datatype.dataTypeMeta.searchSlug == '' %}
                <a id="ODRDatatypeList_{{ datatype.id }}_master_layout" class="address" href="#{{ path('odr_design_master_theme', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.dataTypeMeta.shortName }} Master Layout"><i class="fa fa-lg fa-pencil"></i>&nbsp;Edit</a>
            {% else %}
                <a id="ODRDatatypeList_{{ datatype.id }}_master_layout" class="address" href="{{ datatype_baseurl }}#{{ path('odr_design_master_theme', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.dataTypeMeta.shortName }} Master Layout"><i class="fa fa-lg fa-pencil"></i>&nbsp;Edit</a>
            {% endif %}
            </td>

            {# derivative layout designer link #}
            <td>
            {% if datatype.dataTypeMeta.searchSlug == '' %}
                <a id="ODRDatatypeList_{{ datatype.id }}_derivative_layout" class="address" href="#{{ path('odr_design_master_theme', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.dataTypeMeta.shortName }} Master Layout"><i class="fa fa-lg fa-exclamation-triangle"></i>&nbsp;No Search Abbreviation!</a>
            {% else %}
                <a id="ODRDatatypeList_{{ datatype.id }}_derivative_layout" class="address" href="{{ datatype_baseurl }}#{{ path('odr_design_derivative_themes', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.dataTypeMeta.shortName }} Derivative Layouts"><i class="fa fa-lg fa-list-alt"></i>&nbsp;Manage</a>
            {% endif %}
            </td>


            {# Group management link for this datatype #}
            <td>
                <a id="ODRDatatypeList_{{ datatype.id }}_manage_groups" class="address" href="{{ datatype_baseurl }}#{{ path('odr_manage_groups', { 'datatype_id': datatype.id }) }}"><i class="fa fa-lg fa-cog"></i>&nbsp;Manage Groups</a>
            </td>


            {# CSV import link for this datatype #}
            <td>
            {% if datatype.dataTypeMeta.searchSlug == '' %}
                <a id="ODRDatatypeList_{{ datatype.id }}_csv_import" class="address" href="#{{ path('odr_design_master_theme', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.dataTypeMeta.shortName }} Master Layout"><i class="fa fa-lg fa-exclamation-triangle"></i>&nbsp;No Search Abbreviation!</a>
            {% else %}
                <a class="address" href="{{ datatype_baseurl }}#{{ path('odr_csv_import', { 'datatype_id': datatype.id }) }}"><i class="fa fa-lg fa-upload"></i>&nbsp;Import</a>
            {% endif %}
            </td>


            {# deletion link for this datatype #}
            <td>
                <a id="ODRDatatypeList_{{ datatype.id }}_delete" class="Pointer" onclick="deleteDataType({{ datatype.id }});"><i class="fa fa-lg fa-trash-o"></i>&nbsp;Delete</a>
            </td>
        </tr>
        {% endif %}
    {% endfor %}

    </tbody>
</table>
</div>

<script>
    $(function() {
        $(".ODRCreateDatatype").unbind('click').click(function() {
            // Open the dialog to create a new datatype
            $("#dialog_add_datatype").dialog( "open" );
        });
{#
        $(".ODRRecacheAll").unbind('click').click(function() {
            if ( confirm("This will rebuild all cache entries for all datatypes.") ) {
                recacheAll();
            }
        });
#}

        $("#ODRDatatypeList").dataTable({
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                },
                {
                    "targets": [1,4,5,6,7,8],
                    "orderable": false,
                    "searchable": false,
                }
            ],
            "order": [[ 2, "asc" ]],
            "fixedHeader": {
                // headerOffset: 42
            },
            responsive: true,
//            "paging": true,
            "paging": false,
            "info": false,
            "language": {
                "emptyTable": "No Datatypes found"
            }
        });

        $("#ODRDatatypeList").removeAttr('style');
    });

    function deleteDataType(datatype_id) {
        var datatype_name = $("#ODRDatatypeList_" + datatype_id + "_name").html();

        if( confirm("Are you sure you want to delete the \"" + datatype_name + "\" datatype and all associated datarecords?") ) {
            // Delete the datatype selected
            var url = '{{ path('odr_design_delete_datatype', { 'datatype_id': 0 }) }}';
            url = url.substring(0, (url.length - 1));
            url += datatype_id;

            var dataType = "json";
            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: dataType,
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        // Reload this area of the page
                        window.location.reload(true);
                    }
                    else {
                        // Error occurred
                        alert( data.d );
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        }
    }
{#
    function recacheAll() {
        // Rebuild all cache entries for all datatypes
        var url = '{{ path('odr_recache_all') }}';

        var dataType = "json";
        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: dataType,
            success: function(data, textStatus, jqXHR) {
                if (data.r == 0) {
                    alert( 'All DataTypes scheduled for recache...this may take awhile...' );
                }
                else {
                    // Error occurred
                    alert( data.d );
                }
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
#}
</script>

{% endspaceless %}
