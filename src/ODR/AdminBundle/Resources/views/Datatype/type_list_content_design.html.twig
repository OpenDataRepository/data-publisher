{% set level = 0 %}
{% for role in user.getroles %}
    {% if role == 'ROLE_SUPER_ADMIN' %}
        {% set level = level + 4 %}
    {% elseif role == 'ROLE_ADMIN' %}
        {% set level = level + 2 %}
    {% elseif role == 'ROLE_USER' %}
        {% set level = level + 1 %}
    {% endif %}
{% endfor %}

        
<div class="tabletools">
    {% if level > 1 %}
    <div class="left">
        <a class="ODRCreateDatatype Pointer"><i class="fa fa-lg fa-plus"></i>New Data Type</a>
    </div>
    {% endif %}
    {% if level == 7 %}
    <div class="left">
        <a class="Pointer" onclick="recacheAll();"><i class="fa fa-lg fa-refresh"></i>Recache All Datatypes</a>
    </div>
    {% endif %}
</div>

<table id="ODRDatatypeList" class="{#pure-table pure-table-striped#}display dataTable">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th>Type Name</th>
            <th>Number of Records</th>
            <th>Master Layout</th>
            <th>Derivative Layouts</th>
            <th>Download Schema</th>
            <th>CSV Import</th>

            {#{% if level > 1 %}#}
            <th>Delete</th>
            {#{% endif %}#}
        </tr>
    </thead>
    <tbody>
    {% for datatype in datatypes %}

        {% set can_view_datatype = false %}
        {% set can_edit_datatype = false %}
        {% set can_design_datatype = false %}
        {% set is_type_admin = false %}
        {% if permissions[ datatype.id ] is defined %}
            {% if permissions[ datatype.id ][ 'view' ] is defined %}
                {% set can_view_datatype = true %}
            {% endif %}
            {% if permissions[ datatype.id ][ 'edit' ] is defined %}
                {% set can_edit_datatype = true %}
            {% endif %}
            {% if permissions[ datatype.id ][ 'design' ] is defined %}
                {% set can_design_datatype = true %}
            {% endif %}
            {% if permissions[ datatype.id ][ 'admin' ] is defined %}
                {% set is_type_admin = true %}
            {% endif %}
        {% endif %}

        {#{% if datatype.ispublic == true or can_view_datatype == true %}#}
        {% if can_view_datatype == true %}
        <tr>
            <td>{{ datatype.id }}</td>
            <td>
                <span class="ODRDatatypeInfoDiv">
                    <i class="fa fa-lg fa-info-circle"></i>
                    <span class="ODRDatatypeInfo">
                        <div>
                            <b>Created By: </b>{{ datatype.createdBy.getuserstring }}<b> on </b>{{ datatype.created|date('Y-m-d') }}
                        </div>
                        <div>
                            <b>Description: </b>{{ datatype.description }}
                        </div>
                    </span>
                </span>
            </td>
            <td id="datatype_{{ datatype.id }}_name">{{ datatype.shortname }}</td>

            {% set found = false %}
            {% for datatype_id, data in metadata %}
                {% if datatype_id == datatype.id %}
                    {% set found = true %}
                    <td class="center">{{ data.count }}</td>
                {% endif %}
            {% endfor %}

            {% if found == false %}
                <td class="center">0</td>
            {% endif %}

            {% if can_design_datatype == true %}
                {# If user has design permissions... #}
                <td class="center"><a class="address" href="#{{ path('odr_design_master_theme', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.shortname }} Master Layout"><i class="fa fa-lg fa-pencil"></i>&nbsp;Edit</a></td>
                <td class="center"><a class="address" href="#{{ path('odr_design_derivative_themes', { 'datatype_id': datatype.id }) }}" title="Edit {{ datatype.shortname }} Derivative Layouts"><i class="fa fa-lg fa-list-alt"></i>&nbsp;Manage</a></td>
            {% else %}
                {# Otherwise, print out nothing #}
                <td class="center"></td>
                <td class="center"></td>
            {% endif %}

                <td class="center"><a class="Pointer" onclick="downloadXSD({{ datatype.id }});"><i class="fa fa-lg fa-download"></i>&nbsp;Download</a></td>

            {% if can_design_datatype == true and can_edit_datatype == true %}
                <td class="center"><a class="address" href="#{{ path('odr_csv_import', { 'datatype_id': datatype.id }) }}"><i class="fa fa-lg fa-upload"></i>&nbsp;Import</a></td>
            {% else %}
                <td class="center"></td>
            {% endif %}

            {% if level == 7 or is_type_admin == true %}
                <td class="center"><a style="cursor:pointer;" onclick="deleteDataType({{ datatype.id }});"><i class="fa fa-lg fa-trash-o"></i>&nbsp;Delete</a></td>
            {#{% elseif level > 1 %}#}
            {% else %}
                <td class="center"></td>
            {% endif %}
        </tr>
        {% endif %}
    {% endfor %}

    </tbody>
</table>

<style>
    .ODRDatatypeInfoDiv {
        cursor: pointer;
        position: relative;
    }
    .ODRDatatypeInfoDiv:hover .ODRDatatypeInfo {
        visibility: visible;
        top: 20px;
        left: 20px;
    }
    .ODRDatatypeInfo {
        visibility: hidden;
        position: absolute;
        background-color: lightyellow;
        padding: 5px;
        border: 1px dashed gray;
        z-index: 999;
        width: 500px;
    }
</style>

<script>
    $(function() {
        $(".ODRCreateDatatype").unbind('click').click(function() {
            // Open the dialog to create a new datatype
            $("#dialog_add_datatype").dialog( "open" );
        });

        $("#ODRDatatypeList").dataTable({
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                },
                {
                    "targets": [1,4,5,6,7,8],
                    "orderable": false,
                    "searchable": false,
                }
            ],
            "order": [[ 2, "asc" ]],
            "paging": false,
            "info": false,
            "language": {
                "emptyTable": "No Datatypes found"
            }
        });

        $("#ODRDatatypeList").removeAttr('style');
    });

    function deleteDataType(datatype_id) {
        var datatype_name = $("#datatype_" + datatype_id + "_name").html();

        if( confirm("Are you sure you want to delete the \"" + datatype_name + "\" datatype and all associated datarecords?") ) {
            // Delete the datatype selected
            var url = '{{ path('odr_design_delete_datatype', { 'datatype_id': 0 }) }}';
            url = url.substring(0, (url.length - 1));
            url += datatype_id;

            var dataType = "json";
            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: dataType,
                success: function(data, textStatus, jqXHR) {
                    if(data.r == 0) {
                        // Reload this area of the page
                        //window.location.replace( "{{ path('odr_admin_homepage') }}" + "#" + "{{ path('odr_list_types', { 'section': 'design' }) }}" );
                        window.location.reload(true);
                    }
                    else {
                        // Error occurred
                        alert( data.d );
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        }
    }

    function recacheAll() {
        if( confirm("This will rebuild all cache entries for all datatypes.") ) {
            // Delete the datatype selected
            var url = '{{ path('odr_recache_all') }}';

            var dataType = "json";
            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: dataType,
                success: function(data, textStatus, jqXHR) {
                    if (data.r == 0) {
                        alert( 'All DataTypes scheduled for recache...this may take awhile...' );
                    }
                    else {
                        // Error occurred
                        alert( data.d );
                    }
                },
                complete: function(jqXHR, textStatus) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                    }
                }
            });
        }
    }

    function downloadXSD(datatype_id) {
        var url = '{{ path('odr_get_datatype_xsd', { 'version': 'v1', 'datatype_id': 0 }) }}';
        url = url.substring(0, (url.length - 1));
        url += datatype_id;

        document.location = url;
    }
</script>
