{% spaceless %}

<ul id="wizardStatus">
    <li class="current">Step 1. <span class="wizardStatusText">Choose a template.</span></li>
    <li class="">Step 1. <span class="wizardStatusText">Database information.</span></li>
    <li class="">Step 3. <span class="wizardStatusText">Add or change fields.</span></li>
    <li>Step 4. <span class="wizardStatusText">Setup search templates.</span></li>
    <!-- <li>Step 4. <span class="wizardStatusText">Book/Order repair</span></li> -->
</ul>

<div class="ODRThemeElement pure-u-1">
    <div class="ODRInnerBox pure-u-1">
        <div class="ODRInstructions">
            <p>Choose a name for your database and enter a description.</p>
            <p>You can select a pre-defined template or create a completely custom database by selecting from the database templates column.</p>
        </div>
    </div>
</div>

<!-- Add Datatype Dialog -->
<div class="ODRThemeElement pure-u-1">
    <div class="ODRInnerBox pure-u-1">
    <div class="pure-form pure-g pure-u-1" id="dialog_add_datatype" title="Create a new database">
        <div class="form_contents pure-u-1">
            {% include 'ODRAdminBundle:Datatype:create_datatype_info_form.html.twig' with {'form': form} %}
        </div>
        <div class="form_contents pure-u-1">
            <ul>
                {% for datatype in master_templates %}
                    <li>{{ datatype.dataTypeMeta[0].shortName }}</li>
                {% endfor %}
            </ul>
        </div>
    </div>
    </div>
</div>
<!--  End of Add DataType Dialog -->

<script>
    $(function() {
        AddDatatypeFormInit();
    });

    function AddDatatypeFormInit() {
        // Initialize the form
        $("#AddDatatypeForm").validate({
            submitHandler: function(form){
                var data = $(form).serialize();
                var url = $(form).attr('action');

                $.ajax({
                    type: 'POST',
                    url: url,
                    data: data,
                    dataType: "json",
                    success: function(data, textStatus, jqXHR) {
                        if(data.r == 0) {
                            window.location.reload(true);
                        }
                        else {
                            // An error has occurred.
                            // Show Error message dialog
                            alert(data.d);
                        }

                        $("#dialog_add_datatype").dialog('close');
                    },
                    complete: function(jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {
                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                        }
                    }
                });
            },
            invalidHandler: function(){
                // Custom invalid message here if needed
            }
        });
    }

</script>

{% endspaceless %}
