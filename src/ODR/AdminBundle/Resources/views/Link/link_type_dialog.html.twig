{% spaceless %}

<script>
    /**
     * Opens ODR's modal and loads valid datatypes/templates that can be cloned/linked to by the
     * local datatype/template.
     *
     * @param {number} local_datatype_id
     * @param {number} theme_element_id
     */
    function openLinkDatatypeDialog(local_datatype_id, theme_element_id) {
        /** @type {odr_remodal_options} modal_options */
        var modal_options = {
            title: 'Manage Linked {% if datatype.is_master_type %}Templates{% else %}Databases{% endif %}',
            buttons: [
                {
                    id: 'ODRLinkDatatypeFormSubmit',
                    text: 'Link to Selected {% if datatype.is_master_type %}Template{% else %}Database{% endif %}',
                    // secondary: true,
                    disabled: true,
                    click_handler: function() {
                        submitLinkDatatypeForm();
                    }
                }
            ]
        };
        openODRRemodal(modal_options);

        var url = '{{ path('odr_design_get_link_datatypes', {'datatype_id': 0, 'theme_element_id': 0 } ) }}';
        url = url.substring(0,(url.length - 3)) + local_datatype_id + "/" + theme_element_id;

        $.ajax({
            cache: false,
            type: 'GET',
            url: url,
            dataType: "json",
            success: function(data) {
//                alert( data.d.html );
                updateODRRemodalBody( data.d.html );
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Close the dialog so it's not in some half-initialized state
                closeODRRemodal();
            },
            complete: function(jqXHR) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }

    /**
     * Submits a form that links/unlinks the selected datatype/template.
     */
    function submitLinkDatatypeForm() {
        // If the button got clicked, and the selection matches the current remote datatype, then
        //  the user wants to break the link
        var selected_datatype_id = $("#selected_datatype").val();
        var current_remote_datatype = $("#ODRLinkDatatypeForm_previous").val();
        if ( selected_datatype_id === current_remote_datatype )
            $("#selected_datatype").val('');

        var data = $('#ODRLinkDatatypeForm').serialize();
        var url = $('#ODRLinkDatatypeForm').attr('action');

        $.ajax({
            type: 'POST',
            url: url,
            data: data,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                // Reload ThemeElement
                var theme_element_id = data.d.element_id;

                // Need to reload the theme element so the linked datatype/template displays properly,
                //  and so icons are properly muted
                ReloadThemeElement(theme_element_id);

                // Reset icons - nothing selected
                ResetToolSet();

                closeODRRemodal();
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Close the dialog so it's not in some half-initialized state
                closeODRRemodal();
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
</script>

{% endspaceless %}
