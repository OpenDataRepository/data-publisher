{% spaceless %}

{% set theme = theme_array[datatype.id] %}

{# Page/View Options #}
{% include 'ODRAdminBundle:Default:view_manager.html.twig' with {
    'datatype': datatype,
    'theme': theme,
    'page_type': 'table',
} %}

<div>
    <table id="TextResults_search" class="display {#pure-table pure-table-striped#}"></table>
</div>
</br></br>
<div id="TextResults_link_div">
    <button class="pure-button" type="button" onclick="selectAll();">Select All</button>
    &nbsp;
    <button class="pure-button" type="button" onclick="deselectAll();">Deselect All</button>
</div>

<style>
    #TextResults_search_paginate > a {
        margin: 5px;
    }
</style>

<script>
    // Need to be able to store all datarecords returned from the search incase "Select All" is clicked
    var all_datarecords = [];

    $(function() {
        all_datarecords = [{% for num,dr_id in all_datarecords %}{{ dr_id }},{% endfor %}];

        var allow_multiple_links = $("#LinkDataRecordForm").children('input[name="allow_multiple_links"]').val();
        var local_datarecord_is_ancestor = $("#LinkDataRecordForm").children('input[name="local_datarecord_is_ancestor"]').val();
        if (allow_multiple_links == 0)
            $("#TextResults_link_div").remove();

        // Initialize the datatables object
        var search_table = $("#TextResults_search").dataTable({
            "columns": [{{ column_names | raw }}],
            "searching": false,
            "autoWidth": false,

            "processing": true,   // only displays a little "processing..." blurb
            "serverSide": true,
            "ajax": {
                "url": "{{ path('odr_datatables_row_request') }}",
                "type": "POST",
                "data": {
                    'datatype_id': {{ datatype.id }},
                    "theme_id": {{ theme.id }},
                    'search_key': "{{ search_key }}",
                    // Don't want anything done to this table to be saved, so don't send the tab id
                }
            },
            "language": {
                "emptyTable": "No Datarecords found"
            },

            "deferRender": true,
            "createdRow": function( row, data, index ) {
                if (allow_multiple_links == 1 || local_datarecord_is_ancestor == 0)
                    $(row).prepend('<td><input type="checkbox" class="dr_' + data[0] + '" rel="' + data[0] + '" onchange="LinkRecord(' + data[0] + ');"/></td>');
                else
                    $(row).prepend('<td><input type="radio" name="radio_group" class="dr_' + data[0] + '" rel="' + data[0] + '" onchange="LinkRecord(' + data[0] + ');"/></td>');
            },

        });

        // Don't want dataTables to make an alert() every time it encounters an error, but still want to make a note of it...
        $.fn.dataTable.ext.errMode = 'none';
        $(search_table).on('error.dt', function(e, settings, techNote, message) {
            console.log(message);
        });

        // Because this table is dynamic, it needs to check for potential changes in the number of columns that it loads via ajax...
        $(search_table).on('xhr.dt', function(e, settings, json) {
            // check number of columns in json array
            var reload_page = false;
            var original_num_columns = {{ num_columns }};

            if ( json.data[0] != undefined ) {
                // If number of columns is different from what's expected, reload the page
                if (json.data[0].length != original_num_columns)
                    reload_page = true;

                // If the json data has fewer columns than expected, splice in enough columns so datatables doesn't throw an alert before reloading the page
                if (json.data[0].length < original_num_columns) {
                    for (var i = 0; i < json.data.length; i++) {
                        for (var j = json.data[i].length; j < original_num_columns; j++)
                            json.data[i].push('');
                    }
                }

                // Reload the page if necessary
                // TODO - better notification
                if (reload_page)
                    alert('A designer user has changed the number of columns for this table...please reset and redo your search');
//                window.location.reload();
            }
        });


        // Ensure checkboxes have proper state on redraw of search results table
        $(search_table).on('draw.dt', function() {
            initCheckboxes("#TextResults_search", false);
        });

        // Prepend a header for the checkbox column
        $("#TextResults_search").children('thead').children('tr').prepend('<th rowspan="1" colspan="1">Linked?</th>');
    });

    function selectAll() {
        // Add hidden input elements for all currently unselected datarecords
        jQuery.each(all_datarecords, function(index, dr_id) {
            var dr = "#dr_" + dr_id;

            if ( $(dr).length > 0 ) {
                // hidden input exists, do nothing
            }
            else if ( $(dr).length == 0 ) {
                // hidden input does not exist, create it
                $("#LinkDataRecordForm").append('<input type="hidden" id="dr_' + dr_id + '" name="datarecords[' + dr_id + ']" value="1" />');
            }
        });

        // Update state of all checkboxes
        linked_datarecords = all_datarecords;
        initCheckboxes("#TextResults_current", true);
        initCheckboxes("#TextResults_search", false);
    }

    function deselectAll() {
        // Remove hidden input elements for all currently selected datarecords
        jQuery.each(linked_datarecords, function(index, dr_id) {
            var dr = "#dr_" + dr_id;

            if ( $(dr).length > 0 ) {
                // hidden input exists, remove it
                $(dr).remove();
            }
            else if ( $(dr).length == 0 ) {
                // hidden input does not exist, do nothing
            }
        });

        // Update state of all checkboxes
        linked_datarecords = [];
        initCheckboxes("#TextResults_current", true);
        initCheckboxes("#TextResults_search", false);
    }
</script>

{% endspaceless %}
