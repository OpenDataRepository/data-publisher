{% spaceless %}

{# The "intent" variable passed in is always "linking" for this file...
   ODRCustomController::renderList() renders ODRAdminBundle:TextResults:textresultslist.html.twig
   when intent == 'searching' #}

{% set theme = theme_array[initial_theme_id] %}

{# Page/View Options #}
{% include 'ODRAdminBundle:Default:view_manager.html.twig' with {
    'datatype': datatype,
    'theme': theme,
    'page_type': 'table',
    'search_key': search_key,

    'has_datarecords': has_datarecords,
    'has_search_restriction': has_search_restriction,
    'editable_only': editable_only,

    'display_export_options': false,
    'intent': 'linking',

    'user': user,
    'user_permissions': user_permissions,
} %}

<div class="ODRTableOuterWrap">
    <table id="TextResults_search" class="display ODRDatatableInstance"></table>
</div>

{% if theme.themeMeta.enableHorizontalScrolling == true %}
{# NOTE: this is intentionally a *local* override to CSS...the datatables FixedHeader plugin can't handle horizontal scrolling at the moment #}
<style>
    .dataTables_scrollHead {
        position: sticky !important;
        top: 0px;
        z-index: 99;
        background-color: white;
        box-shadow: 0px 5px 5px 0px rgba(82, 63, 105, 0.08);
    }
</style>
{% endif %}

<script>
    // Need to be able to store all datarecords returned from the search incase "Select All" is clicked
    var all_datarecords = [];

    $(function() {
        all_datarecords = [{% for num,dr_id in all_datarecords %}{{ dr_id }},{% endfor %}];

        $("#ChooseView").unbind('click').click(function(event) {
            window.ODRChooseView_applyredirectcallback = function(theme_id) {
                // When a new theme is selected for this usage, the result needs to be surgically
                //  spliced into a specific div on the page...
                $("#selected_theme_id").val(theme_id);
                doSearch( '{{ path('odr_search_results') }}' );
            }
            openChooseViewRemodal({{ datatype.id }}, 'search_results', '{{ search_key }}');
        });

        var allow_multiple_links = $("#LinkDataRecordForm").children('input[name="allow_multiple_links"]').val();
        var local_datarecord_is_ancestor = $("#LinkDataRecordForm").children('input[name="local_datarecord_is_ancestor"]').val();

        // Initialize the datatables object
        var search_table = $("#TextResults_search").dataTable({
            "columns": [{{ column_names | raw }}],
            "searching": false,
            "autoWidth": false,

            // "processing": true,   // only displays a little "processing..." blurb
            "serverSide": true,
            "ajax": {
                "url": "{{ path('odr_datatables_row_request') }}",
                "type": "POST",
                "data": {
                    'datatype_id': {{ datatype.id }},
                    "theme_id": {{ theme.id }},
                    'search_key': "{{ search_key }}",
                    // Don't want anything done to this table to be saved, so don't send the tab id
                }
            },

            {% if theme.themeMeta.enableHorizontalScrolling == false %}
            "responsive": true,
            "fixedHeader": {
                "header": true,
            },
            {% else %}
            "scrollX": true,
            {% endif %}

            {# have  web/js/mylibs/jquery_datatables/datatables.input.js  handle pagination #}
            "pagingType": "input",

            "language": {
                "emptyTable": "No Datarecords found"
            },

            "deferRender": true,
            "createdRow": function( row, data, index ) {
                var dr_id = data[0];
                if (allow_multiple_links == 1 || local_datarecord_is_ancestor == 0)
                    $(row).prepend('<td><input type="checkbox" class="ODRLinkCheckbox dr_' + dr_id + '" rel="' + dr_id + '" onchange="ODRLinkDatarecords_linkRecord(' + dr_id + ');"/></td>');
                else
                    $(row).prepend('<td><input type="radio" name="radio_group" class="ODRLinkCheckbox dr_' + dr_id + '" rel="' + dr_id + '" onchange="ODRLinkDatarecords_linkRecord(' + dr_id + ');"/></td>');
            }
        });

        // Don't want dataTables to make an alert() every time it encounters an error, but still want to make a note of it...
        $.fn.dataTable.ext.errMode = 'none';
        $(search_table).on('error.dt', function(e, settings, techNote, message) {
            console.log(message);
        });

        // Because this table is dynamic, it needs to check for potential changes in the number of columns that it loads via ajax...
        $(search_table).on('xhr.dt', function(e, settings, json) {
            // check number of columns in json array
            var reload_page = false;
            var original_num_columns = {{ num_columns }};

            if ( json.data[0] != undefined ) {
                // If number of columns is different from what's expected, reload the page
                if (json.data[0].length != original_num_columns)
                    reload_page = true;

                // If the json data has fewer columns than expected, splice in enough columns so datatables doesn't throw an alert before reloading the page
                if (json.data[0].length < original_num_columns) {
                    for (var i = 0; i < json.data.length; i++) {
                        for (var j = json.data[i].length; j < original_num_columns; j++)
                            json.data[i].push('');
                    }
                }

                // Reload the page if necessary
                // TODO - better notification
                if (reload_page)
                    alert('A designer user has changed the number of columns for this table...please reset and redo your search');
//                window.location.reload();
            }
        });


        // Ensure checkboxes have proper state on redraw of search results table
        $(search_table).on('draw.dt', function() {
            ODRLinkDatarecords_initCheckboxes("#TextResults_search", false);
        });

        // Prepend a header for the checkbox column
        $("#TextResults_search").children('thead').children('tr').prepend('<th rowspan="1" colspan="1">Link to this record</th>');
    });
</script>

{% endspaceless %}
