ODR\AdminBundle\Entity\DataFields:
    type: entity
    table: odr_data_fields
    gedmo:
        soft_deleteable:
            field_name: deletedAt
    fields:
        id:
            id: true
            type: integer
            unsigned: false
            nullable: false
            generator:
                strategy: IDENTITY

        is_master_field:
            type: boolean
            nullable: false
            default: false

        created:
            type: datetime
            gedmo:
                timestampable:
                    on: create
        deletedAt:
            type: datetime
            nullable: true

    oneToMany:
        # TODO These will probably need to be moved to map tables
        # so that child types can be re-used across multiple master
        # data types.
        relatedMasterFields:
            targetEntity: DataFields
            mappedBy: masterDataField
            inversedBy: null
            fetch: EXTRA_LAZY

        dataRecordFields:
            targetEntity: DataRecordFields
            cascade: {  }
            mappedBy: dataField
            inversedBy: null
            fetch: EXTRA_LAZY
            orphanRemoval: false

        themeDataFields:
            targetEntity: ThemeDataField
            cascade: {  }
            mappedBy: dataField
            inversedBy: null
            orphanRemoval: false

        radioOptions:
            targetEntity: RadioOptions
            cascade: {  }
            mappedBy: dataField
            inversedBy: null
            orphanRemoval: false

        dataFieldMeta:
            targetEntity: DataFieldsMeta
            cascade: {  }
            mappedBy: dataField
            inversedBy: null
            orphanRemoval: false

        groupDatafieldPermissions:
            targetEntity: GroupDatafieldPermissions
            cascade: {  }
            mappedBy: dataField
            inversedBy: null
            orphanRemoval: false

    manyToOne:
        # TODO These will probably need to be moved to map tables
        # so that child types can be re-used across multiple master
        # data types.
        masterDataField:
            targetEntity: DataFields
            fetch: EXTRA_LAZY
            joinColumns:
                master_datafield_id:
                    referencedColumnName: id
            inversedBy: relatedMasterFields

        dataType:
            targetEntity: DataType
            cascade: {  }
            mappedBy: null
            inversedBy: dataFields
            joinColumns:
                data_type_id:
                    referencedColumnName: id
            orphanRemoval: false

        # This property is only defined because of Doctrine ORM limitations...
        # The Datafield needs to be able to record a history of which RenderPlugin it has used, but
        #  the RenderPlugin needs to reference a static datafield_id
        # This property SHOULD NOT be changed, use the one in DataFieldsMeta should be used instead
        renderPlugin:
            targetEntity: RenderPlugin
            cascade: {  }
            mappedBy: null
            inversedBy: dataFields
            joinColumns:
                render_plugin_id:
                    referencedColumnName: id
            orphanRemoval: false

        createdBy:
            targetEntity: ODR\OpenRepository\UserBundle\Entity\User
            cascade: {  }
            mappedBy: null
            inversedBy: null
            joinColumns:
                createdBy:
                    referencedColumnName: id
            orphanRemoval: false
        deletedBy:
            targetEntity: ODR\OpenRepository\UserBundle\Entity\User
            cascade: {  }
            mappedBy: null
            inversedBy: null
            joinColumns:
                deletedBy:
                    referencedColumnName: id
            orphanRemoval: false

    lifecycleCallbacks: {  }
