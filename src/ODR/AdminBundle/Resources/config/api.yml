

#-----------------------------------------
#
# API Controller
#
#-----------------------------------------
odr_api_userdata:  # DEPRECATED v0
  path: /api/{version}/userdata.{_format}
  defaults: { _controller: ODRAdminBundle:API:userdata, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v1'
    _format: '|json|xml'

odr_api_get_datatype_list:
  path: /api/{version}/search/databases.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatatypeList, type: 'databases',  _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

odr_api_get_template_list:
  path: /api/{version}/search/templates.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatatypeList, type: 'master_templates', _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

odr_api_get_datatype_single:
  path:  /api/{version}/search/database/{datatype_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatatypeExport, type: 'databases', _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    datatype_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

#odr_api_get_jsonld_test:
#    path:  /api/{version}/jsonld
#    defaults: { _controller: ODRAdminBundle:API:jsonLD, version: 'v5', dataset_uuid: '9d26d533e9bfe1907a18280cfc25'}
#    methods: [ GET ]
#    requirements:
#        version: 'v\d+'
#        dataset_uuid: '^[a-z0-9]+$'

#
odr_api_get_jsonld:
  path:  /api/{version}/jsonld/{dataset_uuid}
  defaults: { _controller: ODRAdminBundle:API:jsonLD, version: 'v5' }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    dataset_uuid: '^[a-z0-9]+$'

#
# Gets master templates
#
odr_api_get_master_template:
  path:  /api/{version}/master/{datatype_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatatypeExport, type: 'master_template', _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    datatype_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

#
# Gets dataset templates (non-master)
#
odr_api_get_dataset_template:
  path:  /api/{version}/template/{datatype_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatatypeExport, type: 'master_template', _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    datatype_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

#
# DEPRECATED (old version for AHED Only)
# Gets master templates
#
odr_api_get_template_single:
  path:  /api/{version}/search/template/{datatype_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatatypeExport, type: 'master_template', _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    datatype_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

odr_api_datarecord_list:
  path: /api/{version}/search/database/{datatype_uuid}/records/{limit}/{offset}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatarecordList, limit: 0, offset: 0, recent: false, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d'  # v1, v2, v3, v4 - no difference
    datatype_uuid: '^[a-z0-9]+$'
    limit: \d+
    offset: \d+
    _format: '|json|xml'

odr_api_recent_dataset_record_list:
  path:  /api/{version}/dataset/{dataset_uuid}/modified/records/{recent}/{limit}/{offset}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatarecordList, limit: 0, offset: 0, recent: true, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d'  # v1, v2, v3, v4 - no difference
    datatype_uuid: '^[a-z0-9]+$'
    limit: \d+
    offset: \d+
    _format: '|json|xml'

odr_api_recent_datarecord_list:
  path: /api/{version}/search/database/{datatype_uuid}/modified/records/{recent}/{limit}/{offset}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getDatarecordList, limit: 0, offset: 0, recent: true, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d'  # v1, v2, v3, v4 - no difference
    datatype_uuid: '^[a-z0-9]+$'
    limit: \d+
    offset: \d+
    _format: '|json|xml'

odr_api_template_datatype_list:
  path: /api/{version}/search/template/{datatype_uuid}/databases/{limit}/{offset}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getTemplateDatatypeList, limit: 0, offset: 0, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v1'
    datatype_uuid: '^[a-z0-9]+$'
    limit: \d+
    offset: \d+
    _format: '|json|xml'

odr_api_get_datarecord_single_no_format:
  path:  /api/{version}/search/record/{record_uuid}
  defaults: { _controller: ODRAdminBundle:API:getRecord, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    record_uuid: '^[a-z0-9]+$'
    format: 'json'

odr_api_get_datarecord_single:
  path:  /api/{version}/search/record/{record_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getRecord, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    record_uuid: '^[a-z0-9]+$'
    format: '|xml|json'

odr_api_get_field_stats:
  path:  /api/{version}/search/field/stats/{template_uuid}/{template_field_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getfieldstats, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    template_uuid: '^[a-z0-9]+$'
    template_field_uuid: '^[a-z0-9]+$'
    format: '|xml|json'

odr_api_get_field_stats_by_dataset:
  path:  /api/{version}/search/field/statsbydataset/{template_uuid}/{template_field_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getfieldstatsbydataset, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    template_uuid: '^[a-z0-9]+$'
    template_field_uuid: '^[a-z0-9]+$'
    format: '|xml|json'

odr_api_get_field_legacystats:
  path:  /api/{version}/search/field/legacystats/{template_uuid}/{template_field_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:search_field_stats, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    template_uuid: '^[a-z0-9]+$'
    template_field_uuid: '^[a-z0-9]+$'
    format: '|xml|json'

odr_api_download_file:
  path: /api/{version}/search/file_download/{file_id}
  defaults: { _controller: ODRAdminBundle:API:filedownload }
  methods: [ GET ]
  requirements:
    file_id: \d+

odr_api_download_image:
  path: /api/{version}/search/image_download/{image_id}
  defaults: { _controller: ODRAdminBundle:API:imagedownload }
  methods: [ GET ]
  requirements:
    image_id: \d+


# Alternative API access routes - migrated from search
odr_search_api_get_datatype_single:
  path:  /{search_slug}/api/info.{_format}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getDatatypeExport, search_slug: '', _format: json }
  requirements:
    search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'    # any 32 character alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter
    _format: '|json|xml'

odr_search_api_get_datarecord_list:
  path:  /{search_slug}/api/records.{_format}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getDatarecordList, search_slug: '', _format: json }
  requirements:
    search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
    limit: \d+
    offset: \d+
    _format: '|json|xml'

odr_search_api_get_datarecord_single:
  path:  /{search_slug}/api/records/{datarecord_id}.{_format}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getDatarecordExport, search_slug: '', _format: json }
  requirements:
    search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
    datarecord_id: \d+
    _format: '|json|xml'

#
## API for cross template search
#odr_search_api_get_template_by_uuid_no_format:
#    path: /api/{version}/search/template/{template_uuid}
#    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getTemplate, version: 'v1', _format: 'json' }
#    methods: [ GET ]
#    requirements:
#        version: 'v\d+'
#        template_uuid: '[a-z0-9]+'

#odr_search_api_get_template_by_uuid:
#    path: /api/{version}/search/template/{template_uuid}.{_format}
#    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getTemplate, version: 'v1' }
#    methods: [ GET ]
#    requirements:
#        version: 'v\d+'
#        template_uuid: '[a-z0-9]+'
#        _format: '|json|xml'

odr_search_api_template_get:
  path: /api/{version}/search/{json_key}/{limit}/{offset}.{_format}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:searchTemplateGet, limit: 0, offset: 0, _format: json }
  methods: [ GET ]
  requirements:
    json_key: '[a-zA-Z0-9\=]+'
    version: 'v\d+'
#        template_uuid: '[a-z0-9]+'


#odr_search_api_get_field_stats_by_uuid:
#    path: /api/{version}/search/field/stats/{template_uuid}/{template_field_uuid}
#    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:search_field_stats, version: 'v1', _format: 'json'}
#    methods: [ GET ]
#    requirements:
#        version: 'v\d+'
#        template_uuid: '[a-z0-9]+'
#        template_field_uuid: '[a-z0-9]+'

odr_search_api_get_field_by_uuid:
  path: /api/{version}/search/field/{template_field_uuid}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getfield, version: 'v1' }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    template_field_uuid: '[a-z0-9]+'

#
# Searches an individual datatype using the format of the
# standard web-based search
#
odr_search_api_general_search:
  path: /api/{version}/dataset/search/{search_key}/{limit}/{offset}/{return_as_list}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:datasetSearch, search_key: '', limit: 0, offset: 0, _format: 'json', version: 'v1', return_as_list: 0 }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    search_key: '[a-zA-Z0-9\=]+'
    limit: \d+
    offset: \d+
    return_as_list: \d
    _format: '|json|xml'

#
# Cross-template search.  Requires a master datatype
# and searches across all datasets matching that type.
#
# This is a metadata only search.
# TODO Determine if you can search data datatypes
#
odr_search_api_template_post:
  path: /api/{version}/search/{limit}/{offset}.{_format}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:searchTemplatePostOptimized, limit: 0, offset: 0, _format: 'json', version: 'v1'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    limit: \d+
    offset: \d+
    _format: '|json|xml'


odr_search_api_template_post_old:
  path: /api/{version}/legacysearch/{limit}/{offset}.{_format}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:searchTemplatePost, limit: 0, offset: 0, _format: 'json', version: 'v1'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    limit: \d+
    offset: \d+
    _format: '|json|xml'

#
#
# DEPRECATED - NO SUCH Method
#
#
odr_search_api_general_search_post:
  path: /api/{version}/search/{limit}/{offset}
  defaults: { _controller: ODROpenRepositorySearchBundle:Facade:search, limit: 0, offset: 0, _format: 'json', version: 'v1'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    limit: \d+
    offset: \d+
    _format: '|json|xml'


odr_api_dataset_public:
  path: /api/{version}/dataset/publish
  defaults: { _controller: ODRAdminBundle:API:publish, _format: 'json', version: 'v3'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

odr_api_get_dataset_single_no_format:
  path:  /api/{version}/dataset/{dataset_uuid}
  defaults: { _controller: ODRAdminBundle:API:getRecordsByDatasetUUID, _format: json, version: 'v3' }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    dataset_uuid: '^[a-z0-9]+$'
    record_uuid: null,
    format: 'json'

odr_api_get_dataset_single:
  path:  /api/{version}/dataset/{dataset_uuid}.{_format}
  defaults: { _controller: ODRAdminBundle:API:getRecordsByDatasetUUID, _format: json, version: 'v3' }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    dataset_uuid: '^[a-z0-9]+$'
    record_uuid: null,
    format: 'json'

# TODO Should we restrict to version 4 only?
#odr_api_get_metadata_dataset_record:
#    path:  /api/{version}/dataset/{dataset_uuid}/{record_uuid}
#    defaults: { _controller: ODRAdminBundle:API:getRecordByDatasetUUID, _format: json, version: 'v3' }
#    methods: [ GET ]
#    requirements:
#        version: 'v\d+'
#        dataset_uuid: '^[a-z0-9]+$'
#        record_uuid: '^[a-z0-9]+$'
#        format: 'json'

odr_api_delete_dataset:
  path:  /api/{version}/dataset/{dataset_uuid}
  defaults: { _controller: ODRAdminBundle:API:deleteDatasetByUUID, version: 'v3' }
  methods: [ DELETE ]
  requirements:
    version: 'v\d+'
    dataset_uuid: '^[a-z0-9]+$'
    format: 'json'

odr_api_dataset_quota:
  path:  /api/{version}/dataset/quota/{dataset_uuid}
  defaults: { _controller: ODRAdminBundle:API:datasetQuotaByUUID, version: 'v3' }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    dataset_uuid: '^[a-z0-9]+$'
    format: 'json'


#
# API Update dataset
# PUT /api/vX/dataset
#
# Use version number to differentiate?
#
odr_api_update_dataset_metadata:
  path: /api/{version}/dataset
  defaults: { _controller: ODRAdminBundle:API:updatedataset, _format: 'json', version: 'v3'}
  methods: [ PUT ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'


odr_api_dataset_delete_file:
  path: /api/{version}/file/{file_uuid}
  defaults: { _controller: ODRAdminBundle:API:fileDeleteByUUID, _format: 'json', version: 'v3'}
  methods: [ DELETE ]
  requirements:
    version: 'v\d+'
    file_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

odr_api_dataset_get_file:
  path: /api/{version}/file/{file_uuid}
  defaults: { _controller: ODRAdminBundle:API:fileDownloadByUUID, _format: 'json', version: 'v3'}
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    file_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

odr_api_dataset_add_file:
  path: /api/{version}/file
  defaults: { _controller: ODRAdminBundle:API:addfile, _format: 'json', version: 'v3'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

#
# Creates a record in a dataset
# Can contain a user_email POST variable to cause
# system to 'act as' a specific user.
#
odr_api_create_dataset_record:
  path: /api/{version}/dataset/{dataset_uuid}/record
  defaults: { _controller: ODRAdminBundle:API:createrecord, _format: 'json', version: 'v3' }
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    dataset_uuid: '^[a-z0-9]+$'
    _format: '|json|xml'

#
# Update an individual record
#
odr_api_update_dataset_record:
  path: /api/{version}/dataset/record
  defaults: { _controller: ODRAdminBundle:API:updatedataset, _format: 'json', version: 'v4' }
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'


#
# API Create dataset
# POST /api/vX/dataset
#
odr_api_create_dataset_from_template:
  path: /api/{version}/dataset
  defaults: { _controller: ODRAdminBundle:API:createdataset, _format: 'json', version: 'v3'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

#
# Make a record Public
#
odr_api_record_public:
  path: /api/{version}/dataset/record/public
  defaults: { _controller: ODRAdminBundle:API:publishRecord, _format: 'json', version: 'v3'}
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'


#
# Starts a tracked job
# Returns a tracked job object
#
odr_api_start_job:
  path: /api/{version}/job
  defaults: { _controller: ODRAdminBundle:API:createJob, _format: json, version: 'v3' }
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

#
# Check status on tracked job
# Returns a tracked job object
#
odr_api_job_status:
  path: /api/{version}/job/status/{job_id}/{full}
  defaults: { _controller: ODRAdminBundle:API:jobStatus, _format: json, version: 'v3', full: 1, job_id: 9999999 }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    full: '\d'
    job_id: '\d+'
    _format: '|json|xml'

#
# Returns a list of recently completed jobs
#
odr_api_completed_jobs:
  path: /api/{version}/jobs/completed/{job_type}/{count}
  defaults: { _controller: ODRAdminBundle:API:completedJobs, _format: json, version: 'v3', job_type: 'ima_update', count: 5 }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    job_type: '^[A-Za-z_0-9|]+$'
    count: '\d+'
    _format: '|json|xml'

#
# Cancels a tracked job
# Clears related jobs in tuebes
# Returns a tracked job object
#
odr_api_job_cancel:
  path: /api/{version}/job/cancel/{job_id}
  defaults: { _controller: ODRAdminBundle:API:jobCancel, _format: json, version: 'v3', job_id: 9999999 }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    job_id: '\d+'
    _format: '|json|xml'

#
# Force complete
# Sets current = total so job finishers can run
# Inserts required number of CSVExport Rows to
# Make job complete
# Returns a tracked job object
#
odr_api_job_complete:
  path: /api/{version}/job/complete/{job_id}
  defaults: { _controller: ODRAdminBundle:API:jobComplete, _format: json, version: 'v3', job_id: 9999999 }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    job_id: '\d+'
    _format: '|json|xml'

#
# Check status on tracked job
# Returns a tracked job object
#
odr_api_running_job_list:
  path: /api/{version}/jobs/{job_type}
  defaults: { _controller: ODRAdminBundle:API:runningJobs, _format: json, version: 'v3', job_type: 'ima_update' }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    job_type: '^[A-Za-z_0-9|]+$'
    _format: '|json|xml'

#
# Update a tracked job
# Returns a tracked job object
#
odr_api_update_job:
  path: /api/{version}/job
  defaults: { _controller: ODRAdminBundle:API:updateJob, _format: json, version: 'v3' }
  methods: [ PUT ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'
#
# Update a tracked job count
# Returns a worker job object
#
odr_api_worker_job:
  path: /api/{version}/worker/job
  defaults: { _controller: ODRAdminBundle:API:workerJob, _format: json, version: 'v3' }
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

#
# Get an individual dataset record
# Returns a tracked job object
#
odr_api_get_dataset_record:
  path: /api/{version}/dataset/record/{record_uuid}
  defaults: { _controller: ODRAdminBundle:API:getRecord, _format: json }
  methods: [ GET ]
  requirements:
    version: 'v\d+'
    record_uuid: '^[a-z0-9]+$'
    format: 'json'

odr_api_user_permissions:
  path: /api/{version}/user/permissions
  defaults: { _controller: ODRAdminBundle:API:userPermissions, _format: json, version: 'v3' }
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

odr_api_user_check:
  path: /api/{version}/user
  defaults: { _controller: ODRAdminBundle:API:user, _format: json, version: 'v3' }
  methods: [ POST ]
  requirements:
    version: 'v\d+'
    _format: '|json|xml'

# This doesn't need to be an official route because the firewall sends the request straight to the
#  lexik_jwt_authentication handler
#odr_api_token:
#    path: /api/{version}/token
#    defaults: { _controller: ODRAdminBundle:API:token, _format: 'json', version: 'v3'}
#    methods: [ POST ]
#    requirements:
#        version: 'v\d+'
#        _format: '|json|xml'