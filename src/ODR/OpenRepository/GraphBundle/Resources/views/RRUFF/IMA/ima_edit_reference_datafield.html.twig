{% spaceless %}

{% set DATATYPE_PLUGIN = constant('ODR\\AdminBundle\\Entity\\RenderPlugin::DATATYPE_PLUGIN') %}

{% set datafield_meta = datafield.dataFieldMeta %}
{% set field_typename = datafield_meta.fieldType.typeName %}
{% set field_typeclass = datafield_meta.fieldType.typeClass %}

{% set datarecordfield = '' %}
{% set valuefield = '' %}
{% set valuefield_value = '' %}
{% if datarecord.dataRecordFields[ datafield.id ] is defined %}
    {% set datarecordfield = datarecord.dataRecordFields[ datafield.id ] %}

    {# These reference fields are only allowed to be integers #}
    {% if field_typename == "Integer" and datarecordfield.integerValue[0] is defined %}
        {% set valuefield = datarecordfield.integerValue[0] %}
        {% set valuefield_value = valuefield.value %}
    {% endif %}
{% endif %}

{% set unique_id = datarecord.id ~ '_' ~ datafield.id %}
{% set input_id = field_typeclass ~ 'Form_' ~ unique_id %}
{% set input_name = field_typeclass ~ 'Form[value]' %}

<form
    autocomplete="off"
    action="{{ path('odr_record_save', { 'datarecord_id': datarecord.id, 'datafield_id': datafield.id }) }}"
    class="pure-u-1"
    id="EditForm_{{ unique_id }}"
    method="POST"
>

    <input type="hidden" id="{{ field_typeclass }}Form__token" name="{{ field_typeclass }}Form[_token]" value="{{ token_list[ datarecord.id ][ datafield.id ] }}" />

    {# Intentionally ignoring the possibility of a datafield render plugin #}
    {% set rendered_related_reference = false %}

    {# Extract the related reference data from its array #}
    {% set reference_dt = related_reference_info['datatype'] %}
    {% set reference_mapping = related_reference_info['reference_mapping'] %}
    {% set invalid_references = related_reference_info['invalid_references'] %}
    {% set can_view_references = related_reference_info['can_view_references'] %}
    {% set prerendered_references = related_reference_info['prerendered_references'] %}

    {# If the user can't view the reference, then prerendered_references won't contain it #}

    <fieldset>
        <label for="{{ input_id }}" class="ODRFieldLabel pure-u-1" title="{{ datafield_meta.description }}">{{ datafield_meta.fieldName }}</label>

        {% if reference_dt is null %}
            <div class="pure-u-1">
                <i class="fa fa-exclamation-triangle ODRInputError"></i>&nbsp;The "{{ datatype.dataTypeMeta.shortName }}" database is not linked to a database using the "RRUFF Reference" render plugin.
            </div>
        {% else %}

            {# Despite the underlying field being an integer, we don't want to render the integer value #}
            {# We instead want to render each of the linked datarecords as a <option> in a <select> #}
            <select id="{{ input_id }}" class="pure-u-24-24" name="{{ input_name }}">
                {# Want to provide a "blank" option for deselecting purposes #}
                <option value="">&lt;No Reference Selected&gt;</option>

                {% for ref_id,dr_id in reference_mapping %}
                    {# Ensure the correct reference is selected #}
                    {% set selected = false %}
                    {% if valuefield_value == ref_id %}
                        {% set rendered_related_reference = true %}
                        {% set selected = true %}
                    {% endif %}

                    {# The actual contents of the option depend on the status of the reference #}
                    {% if prerendered_references[ref_id] is defined %}
                        {# The RRUFF Reference is linked to this IMA Record, and user can see it #}
                        <option value="{{ ref_id }}" {% if selected %}selected{% endif %}>
                            {{ prerendered_references[ref_id]|raw }}
                        </option>
                    {% elseif invalid_references[ref_id] is defined %}
                        {# The RRUFF Reference is not linked to this IMA Record #}
                        <option selected>&lt;&lt; Invalid Reference &gt;&gt;</option>
                    {% elseif can_view_references[ref_id] is defined and can_view_references[ref_id] == false %}
                        {# The RRUFF Reference is linked to this IMA Record, but the user can't see it #}
                        <option selected>&lt;&lt; You are not permitted to view the related reference &gt;&gt;</option>
                    {% endif %}
                {% endfor %}
            </select>

            {# If the field has a value but nothing got rendered... #}
            {% if valuefield_value != '' and not rendered_related_reference %}
                <label id="{{ input_id }}-error" class="ODRInputError" for="{{ input_id }}">This field no longer points to a valid reference.</label>
            {% endif %}

        {% endif %}
    </fieldset>
</form>

{% if reference_dt is not null %}
<script>
    $("#{{ input_id }}").unbind('change').change(function() {

        var post_data = $("#EditForm_{{ unique_id }}").serialize();
        var url = $("#EditForm_{{ unique_id }}").attr('action');
        // console.log(post_data, url);  return;

        $.ajax({
            type: 'POST',
            url: url,
            dataType: "json",
            data: post_data,
            success: function(data, textStatus, xhr) {
                // Don't need to do anything on success
            },
            error: function(jqXHR, textStatus, errorThrown) {
                // Just reload the datafield on most errors, since can't restore the old value
                ReloadEditDatafield({{ datarecord.id }}, {{ datafield.id }});
            },
            complete: function(jqXHR, textStatus) {
                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
                $(form_id).find('.ODRSaveIndicator').fadeOut('350');
            }
        });
    });
</script>
{% endif %}

{% endspaceless %}
