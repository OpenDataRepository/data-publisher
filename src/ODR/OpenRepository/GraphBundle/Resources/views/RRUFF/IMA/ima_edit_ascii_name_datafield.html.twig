{% spaceless %}

{% set datafield_meta = datafield.dataFieldMeta %}
{% set field_typename = datafield_meta.fieldType.typeName %}
{% set field_typeclass = datafield_meta.fieldType.typeClass %}

{% set datarecordfield = '' %}
{% set valuefield = '' %}
{% set valuefield_value = '' %}
{% if datarecord.dataRecordFields[ datafield.id ] is defined %}
    {% set datarecordfield = datarecord.dataRecordFields[ datafield.id ] %}

    {# This field should always be a mediumvarchar #}
    {% if field_typename == "Medium Text" and datarecordfield.mediumVarchar[0] is defined %}
        {% set valuefield = datarecordfield.mediumVarchar[0] %}
        {% set valuefield_value = valuefield.value %}
    {% endif %}
{% endif %}

{% if valuefield == '' and (field_typename == 'File' or field_typename == 'Image' or field_typeclass == 'Radio') %}
    {% set valuefield = [] %}
{% endif %}

{% set max_length = '' %}
{% if field_typename == "Long Text" %}
    {% set max_length = 255 %}
{% elseif field_typename == "Medium Text" %}
    {% set max_length = 64 %}
{% elseif field_typename == "Short Text" %}
    {% set max_length = 32 %}
{% endif %}

{% set unique_id = datarecord.id ~ '_' ~ datafield.id %}
{% set input_id = field_typeclass ~ 'Form_' ~ unique_id %}
{% set input_name = field_typeclass ~ 'Form[value]' %}

    <form
        autocomplete="off"
        action="{{ path('odr_record_save', { 'datarecord_id': datarecord.id, 'datafield_id': datafield.id }) }}"
        class="pure-u-1"
        id="EditForm_{{ unique_id }}"
        method="POST"
    >

        <input type="hidden" id="{{ field_typeclass }}Form__token" name="{{ field_typeclass }}Form[_token]" value="{{ token_list[ datarecord.id ][ datafield.id ] }}" />

        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                {% if is_datatype_admin %}
                <i class="fa fa-history Pointer ODRDatafieldHistory" title="View history of {{ datafield_meta.fieldName }}"></i>&nbsp;
                {% endif %}
                {{ datafield_meta.fieldName }}
            </label>
            <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                <input
                    {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                    type="text"
                    id="{{ input_id }}"
                    class="pure-u-1"
                    name="{{ input_name }}"
                    value="{{ valuefield_value }}"
                    data-error-type="inline"
                />
                <i class="fa fa-save ODRSaveIndicator"></i>
            </div>
        </fieldset>
    </form>

    {% if field_typename == "Medium Text" %}
    <script>
        var {{ field_typeclass }}Interval_{{ unique_id }} = null;
        $("#EditForm_{{ unique_id }}").find("{% if field_typename == 'Paragraph Text' %}textarea{% else %}input{% endif %}[name='{{ input_name }}']").unbind('change').unbind('keyup').unbind('paste').on('keyup paste', function() {
            clearTimeout( {{ field_typeclass }}Interval_{{ unique_id }} );
            {{ field_typeclass }}Interval_{{ unique_id }} = setTimeout( "$('#EditForm_{{ unique_id }}').submit()", SaveTimeout );
        });

        $("#EditForm_{{ unique_id }}").validate({
            rules: {
                "{{ input_name }}": {
                    ODRAscii: { required: true },
                    maxlength: {{ max_length }},

                {% if datafield_meta.is_unique %}
                    required: true,
                {% endif %}

                {% if datafield_meta.is_unique %}
                    {# need to query ODR to see whether the contents of this field are unique or not #}
                    remote: {
                        url: "{{ path('odr_check_fake_record_field_uniqueness', { 'datafield_id': datafield.id, 'datarecord_id': datarecord.id }) }}",
                        type: "post",
                        data: {
                            {# The form's value is automatically inserted by jQuery validate #}
                            "{{ field_typeclass }}Form[_token]": function () {
                                return $("#EditForm_{{ unique_id }}").find("input[type=hidden]").val();
                            },
                            "{{ field_typeclass }}Form[error_type]": "json",
                        }
                    }
                {% endif %}
                }
            },

            {% if datafield_meta.is_unique %}
            onkeyup: false,    // If the datafield fires off a remote event to check uniqueness, then don't trigger validation on every keyup event
            {% endif %}

            debug: true,

            submitHandler: function(form) {
                SaveRecordData(
                    '#EditForm_{{ unique_id }}',
                    {{ field_typeclass }}Interval_{{ unique_id }}
                );
            }
            // focusInvalid: false
        });

        {# run the validator on this field contents before the user attempts to change anything #}
        $(function() {
            $("#EditForm_{{ unique_id }}").valid();
        });
    </script>
    {% endif %}

{% endspaceless %}
