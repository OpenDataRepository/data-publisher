{% spaceless %}

{% set datarecord_is_fake = true %}

{% set datafield_meta = datafield.dataFieldMeta %}
{% set field_typename = datafield_meta.fieldType.typeName %}
{% set field_typeclass = datafield_meta.fieldType.typeClass %}

{% set datarecordfield = '' %}
{% set valuefield = '' %}
{% set valuefield_value = '' %}
{% if datarecord.dataRecordFields[ datafield.id ] is defined %}
    {% set datarecordfield = datarecord.dataRecordFields[ datafield.id ] %}

    {% if field_typename == "Short Text" and datarecordfield.shortVarchar[0] is defined %}
        {% set valuefield = datarecordfield.shortVarchar[0] %}
        {% set valuefield_value = valuefield.value %}
    {% elseif field_typename == "Medium Text" and datarecordfield.mediumVarchar[0] is defined %}
        {% set valuefield = datarecordfield.mediumVarchar[0] %}
        {% set valuefield_value = valuefield.value %}
    {% endif %}
{% endif %}

{% set max_length = '' %}
{% if field_typename == "Long Text" %}
    {% set max_length = 255 %}
{% elseif field_typename == "Medium Text" %}
    {% set max_length = 64 %}
{% elseif field_typename == "Short Text" %}
    {% set max_length = 32 %}
{% endif %}

{% set unique_id = datarecord.id ~ '_' ~ datafield.id %}
{% set input_id = field_typeclass ~ 'Form_' ~ unique_id %}
{% set input_name = field_typeclass ~ 'Form[value]' %}

    <form
        autocomplete="off"
        class="pure-u-1 {% if datafield_meta.is_unique %}ODRUniqueField{% endif %}"
        id="EditForm_{{ unique_id }}"
        method="POST"
    >

        <input type="hidden" id="{{ field_typeclass }}Form__token" name="{{ field_typeclass }}Form[_token]" value="{{ token_list[ datarecord.id ][ datafield.id ] }}" />

{#{% if field_typename == "Integer" or field_typename == "Decimal" or field_typename == "Long Text" or field_typename == "Medium Text" or field_typename == "Short Text" %}#}
        <fieldset>
            <label for="{{ input_id }}" class="ODRFieldLabel" title="{{ datafield_meta.description }}">
                {{ datafield_meta.fieldName }}
            </label>
            <div class="ODRFieldWrapper" id="Input_{{ unique_id }}">
                <input
                    {% if datafield_meta.internal_reference_name != '' %}rel="{{ datafield_meta.internal_reference_name }}"{% endif %}
                    type="text"
                    id="{{ input_id }}"
                    class="pure-u-1"
                    name="{{ input_name }}"
                    value="{{ valuefield_value }}"
                    data-error-type="inline"
                />
                <i class="fa fa-hourglass-2 ODRSaveIndicator"></i>
            </div>
        </fieldset>
    </form>

<script>
    $(function() {
        // Disable user input to this field
        $("#Input_{{ datarecord.id }}_{{ datafield.id }}").children('input')
            .val('<will be autogenerated>').prop('readonly', true).addClass('Cursor');

        // Prevent jQuery Validate from working on this field...
        $("#EditForm_{{ datarecord.id }}_{{ datafield.id }}").validate().destroy();
        // ...and get rid of any warnings the field has already generated
        $("#IntegerValueForm_{{ datarecord.id }}_{{ datafield.id }}").attr('style', '');
        $("#IntegerValueForm_{{ datarecord.id }}_{{ datafield.id }}-error").remove();

        // Add a specific hidden input so the form submit javascript knows this
        //  is a special field
        jQuery('<input>', {
            "id": "RRUFFSample_{{ datarecord.id }}_{{ datafield.id }}_Field__token",
            "class": "ODRFakeEdit_autogenerate",
            "type": "hidden",
            // "name": "",    // don't want a name here
            "value": "{{ special_tokens[ datafield.id ] }}",
            "rel": "{{ datafield.id }}",
        }).appendTo("#Field_{{ datarecord.id }}_{{ datafield.id }}");
    });

    var {{ field_typeclass }}Interval_{{ unique_id }} = null;
    $("#EditForm_{{ unique_id }}").find("{% if field_typename == 'Paragraph Text' %}textarea{% else %}input{% endif %}[name='{{ input_name }}']").unbind('change').unbind('keyup').unbind('paste').on('keyup paste', function() {
        clearTimeout( {{ field_typeclass }}Interval_{{ unique_id }} );
        {{ field_typeclass }}Interval_{{ unique_id }} = setTimeout( "$('#EditForm_{{ unique_id }}').submit()", SaveTimeout );
    });

    $("#EditForm_{{ unique_id }}").validate({
        rules: {
            "{{ input_name }}": {
                {% if field_typename == "Integer" %}
                ODRInteger: {},  {# 'ODRInteger' rule defined in app.js...the default 'digits' rule apparently doesn't allow negative numbers #}
                {% elseif field_typename == "Decimal" %}
                ODRDecimal: {},  {# 'ODRDecimal' rule defined in app.js...the default 'number' rule apparently allows leading zeros e.g. '00045' #}
                {% elseif field_typename == "Long Text" or field_typename == "Medium Text" or field_typename == "Short Text" %}
                maxlength: {{ max_length }},
                {% endif %}

                {% if datafield_meta.is_unique %}
                required: true,
                {% endif %}

                {% if datafield_meta.is_unique %}
                {# need to query ODR to see whether the contents of this field are unique or not #}
                remote: {
                    url: "{{ path('odr_check_fake_record_field_uniqueness', { 'datafield_id': datafield.id }) }}",
                    type: "post",
                    data: {
                        {# The form's value is automatically inserted by jQuery validate #}
                        "{{ field_typeclass }}Form[_token]": function () {
                            return $("#EditForm_{{ unique_id }}").find("input[type=hidden]").val();
                        },
                        "{{ field_typeclass }}Form[error_type]": "json",
                    }
                }
                {% endif %}
            }
        },

        {% if datafield_meta.is_unique %}
        onkeyup: false,    // If the datafield fires off a remote event to check uniqueness, then don't trigger validation on every keyup event
        {% endif %}
        submitHandler: function(form) {
            // "Fake" records don't have an equivalent to SaveRecordData(), so probably should
            //   clear the timeout here
            clearTimeout( {{ field_typeclass }}Interval_{{ unique_id }} );
        }
        // focusInvalid: false
    });

    // Ensure required fields are immediately highlighted when a user is trying to create a new
    //  top-level record
    $("#EditForm_{{ unique_id }}").valid();
</script>

{% endspaceless %}
