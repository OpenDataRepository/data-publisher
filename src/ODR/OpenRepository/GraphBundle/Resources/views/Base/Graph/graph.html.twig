{% spaceless %}
{# Create a dynamic or static graph - either rollup or individual #}
{% if odr_chart_legend|length %}

    <div class="pure-u-1 DynamicGraphs ODRHidden">
        <div id="{{ odr_chart_id }}_Dynamic_GraphWrapper">
            {% if odr_chart_files|length %}
                <div id='{{ odr_chart_id }}' class="ODRGraph ODRDynamicGraph pure-u-1">
                    <div id="plotlybars_{{ odr_chart_id }}" class="plotlybars-wrapper">
                        <div class="plotlybars">
                            <div class="plotlybars-bar b1"></div>
                            <div class="plotlybars-bar b2"></div>
                            <div class="plotlybars-bar b3"></div>
                            <div class="plotlybars-bar b4"></div>
                            <div class="plotlybars-bar b5"></div>
                            <div class="plotlybars-bar b6"></div>
                            <div class="plotlybars-bar b7"></div>
                        </div>
                        <div class="plotlybars-text">Loading graph</div>
                    </div>
                    <!-- <svg class="pure-u-1"></svg> -->
                </div><!-- end of .ODRGraph -->
            {% endif %}
        </div><!-- end of .DynamicGraph Wrapper -->
    </div><!-- end of .DynamicGraphs -->

    <div class="pure-u-1 StaticGraphs">
        <div id="{{ odr_chart_id }}_Static_GraphWrapper" class="ODRStaticGraphWrapper">
            {% for dr_id, file_name in odr_chart_output_files %}
                {% if dr_id == target_datarecord_id or (target_datarecord_id matches '{^rollup}' and dr_id == "rollup") %}
                    <div id="StaticGraph_{{ dr_id }}" class="ODRGraph ODRStaticGraph pure-u-1">
                        <img class="pure-u-1" src="{{ path('odr_plugin_graph_static', { 'datarecord_id': target_datarecord_id, 'datatype_id': target_datatype_id } ) }}.svg?nocache=1" />
                        <div class="ODRChartTrigger"><span>Click to switch to interactive charts.</span></div>
                    </div><!-- end of .ODRGraph -->
                {% endif %}
            {% endfor %}
        </div><!-- end of #{{ odr_chart_id }}_Static_GraphWrapper -->
    </div><!-- end of .StaticGraphs -->

    <label id="{{ odr_chart_id }}_use_scatterGL_label" for="{{ odr_chart_id }}_use_scatterGL" style="display: none;">Use ScatterGL (xy/stackedarea only): </label>
    <input type="checkbox" id="{{ odr_chart_id }}_use_scatterGL" style="display: none;" checked/>

    <label id="{{ odr_chart_id }}_graph_type_label" for="{{ odr_chart_id }}_graph_type" style="display: none;">Graph Type: </label>
    <select id="{{ odr_chart_id }}_graph_type" style="display: none;">
        <option value="xy">xy</option>
        <option value="bar">bar</option>
        <option value="piechart">pie</option>
        <option value="histogram">histogram</option>
        <option value="stackedarea">stackedarea</option>
    </select>

    {# TODO - going to need an additional 2 selects and 2 text inputs in order to change error columns #}
    <label id="{{ odr_chart_id }}_column_1_label" for="{{ odr_chart_id }}_column_1" class="graph_columns" style="display: none;"></label>
    <select id="{{ odr_chart_id }}_column_1" class="graph_columns" style="display: none;"></select>
    <label id="{{ odr_chart_id }}_column_2_label" for="{{ odr_chart_id }}_column_2" class="graph_columns" style="display: none;"></label>
    <select id="{{ odr_chart_id }}_column_2" class="graph_columns" style="display: none;"></select>

{% endif %}

<script type="text/javascript">

// Used to track active plots for resizing
// Why is this not cleared every time?
var page_plots = [];
jQuery(function() {

    window.onresize = function() {
        waitForFinalEvent(function() {
            for(var x in page_plots) {
                Plotly.Plots.resize(page_plots[x]);
            }
        }, 500, "plotly_window_resize")
    };

    $(".StaticGraphs").unbind('click').click(function() {
        var parent = $(this).parent();
        $(this).hide();
        $(parent).find('.DynamicGraphs').show();

        var chart_id = $(parent).find('.ODRDynamicGraph').attr('id');
        var graph_type = "{{ plugin_options.graph_type }}";
        window["SetupGraphs_" + chart_id](graph_type);
    });
{#
    $(".DynamicGraphs").unbind('click').click(function() {
        var parent = $(this).parent()
        $(this).hide()
        $(parent).find('.StaticGraphs').show()
    });
#}

    $("#{{ odr_chart_id }}_use_scatterGL").unbind('change').change(function() {
        var pieces = $(this).attr('id').split('_');
        var chart_id = pieces.slice(0, -2).join('_');

        ODRGraph_triggerRebuild(chart_id);
    });

    $("#{{ odr_chart_id }}_graph_type").unbind('change').change(function() {
        var pieces = $(this).attr('id').split('_');
        var chart_id = pieces.slice(0, -2).join('_');

        ODRGraph_triggerRebuild(chart_id);
    });

    $("select.graph_columns").unbind('change').change(function() {
        var pieces = $(this).attr('id').split('_');
        var chart_id = pieces.slice(0, -2).join('_');

        ODRGraph_triggerRebuild(chart_id);
    });
});

if (!window.ODRChart) {
    function ODRChart() {
        this.chart_id = "";

        this.GraphData = function (graph_type) {
            /* These lines are all chart setup.  Pick and choose which chart features you want to utilize. */
            if ( graph_type === null || graph_type === undefined )
                graph_type = "xy";

            switch (graph_type) {
                case "xy":
                    return lineChartPlotly(this, clearPlotlyBars);
                case "bar":
                    return barChartPlotly(this, clearPlotlyBars);
                case "histogram":
                    return histogramChartPlotly(this, clearPlotlyBars);
                case "stackedarea":
                    return stackedAreaChartPlotly(this, clearPlotlyBars);
                case "piechart":
                    return pieChartPlotly(this, clearPlotlyBars);
                default:
                    break;
            }
        }
    }
}

var SetupGraphs_{{ odr_chart_id }} = function(graph_type = undefined) {
    // Should we just be sending a JSON Object in the first place
    if (!{{ odr_chart_id }}_initialized) {
        {{ odr_chart_id }}_initialized = true;

        // If not ODRChart - load class
        odr_chart_{{ odr_chart_id }} = new ODRChart();

        // Set the chart id
        odr_chart_{{ odr_chart_id }}.chart_id = '{{ odr_chart_id }}';
        odr_chart_{{ odr_chart_id }}.data_files = [];

        // Set the file download URL
        var file_url = "{{ path('odr_file_download', {'file_id': '0'}) }}";
        file_url = file_url.substr(0, file_url.length - 1);

        // Build array of file data
        {% for dr_id, file in odr_chart_files %}
            {% if dr_id == target_datarecord_id or target_datarecord_id matches '{^rollup}' %}
            var file = '{{ file.id }}';
            if (file != "") {
                {% for mydr_id, legend in odr_chart_legend %}
                    {% if mydr_id == dr_id %}
                        {% set sort_order = datarecord_sortvalues[dr_id] %}
                        odr_chart_{{ odr_chart_id }}.data_files[{{ sort_order }}] = { "url": file_url + file, "legend": "{{ legend }}", "dr_id": {{ dr_id }}, "file_id": {{ file.id }} };
                    {% endif %}
                {% endfor %}
            }
            {% endif %}
        {% endfor %}

        // Map remaining options to chart
        {% for o_name, o_value in plugin_options %}
        odr_chart_{{ odr_chart_id }}['{{ o_name }}'] = '{{ o_value }}';
        {% endfor %}
    }

    // Plot selected graph
    if ( graph_type === undefined )
        $("#{{ odr_chart_id }}_graph_type").val();
    odr_chart_{{ odr_chart_id }}.GraphData(graph_type);
};

var {{ odr_chart_id }}_initialized = false;
var odr_chart_{{ odr_chart_id }} = null;

</script>
{% endspaceless %}
