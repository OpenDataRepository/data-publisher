{% spaceless %}
{# Create a dynamic or static graph - either rollup or individual #}
{% if odr_chart_legend|length %}

    <div class="pure-u-1 DynamicGraphs ODRHidden">
        <div id="{{ odr_chart_id }}_Dynamic_GraphWrapper">
            {% if odr_chart_files|length %}
            <div id='{{ odr_chart_id }}' class="ODRGraph ODRDynamicGraph pure-u-1">
                <div id="plotlybars_{{ odr_chart_id }}" class="plotlybars-wrapper">
                    <div class="plotlybars">
                        <div class="plotlybars-bar b1"></div>
                        <div class="plotlybars-bar b2"></div>
                        <div class="plotlybars-bar b3"></div>
                        <div class="plotlybars-bar b4"></div>
                        <div class="plotlybars-bar b5"></div>
                        <div class="plotlybars-bar b6"></div>
                        <div class="plotlybars-bar b7"></div>
                    </div>
                    <div class="plotlybars-text">Loading graph</div>
                </div>
                <!-- <svg class="pure-u-1"></svg> -->
            </div><!-- end of .ODRGraph -->

            <div id="{{ odr_chart_id }}_secondary" class="ODRGraph ODRDynamicGraph pure-u-1">
            </div>
            {% endif %}
        </div><!-- end of .DynamicGraph Wrapper -->
    </div><!-- end of .DynamicGraphs -->

    <div class="pure-u-1 StaticGraphs">
        <div id="{{ odr_chart_id }}_Static_GraphWrapper" class="ODRStaticGraphWrapper">
        {% for dr_id, file_name in odr_chart_output_files %}    {# NOTE: unfortunately the loop is still required...the graph plugin puts more than just the "correct" graph in odr_chart_output_files #}
            {% if dr_id == target_datarecord_id or (target_datarecord_id matches '{^rollup}' and dr_id == "rollup") %}
            <div id="StaticGraph_{{ odr_chart_id }}" class="ODRGraph ODRStaticGraph pure-u-1">
                {# Have the browser attempt to load the cached graph image directly, at first... #}
                <img id="StaticGraph_{{ odr_chart_id }}_img" class="pure-u-1" src="{{ config_site_baseurl }}{{ config_files_directory }}{{ file_name }}" />
                <div class="ODRChartTrigger"><span>Click to switch to interactive charts.</span></div>
            </div><!-- end of .ODRGraph -->
            {% endif %}
        {% endfor %}
        </div><!-- end of #{{ odr_chart_id }}_Static_GraphWrapper -->
    </div><!-- end of .StaticGraphs -->
{% endif %}

<script type="text/javascript">

// Used to track active plots for resizing
// Why is this not cleared every time?
var page_plots = [];
jQuery(function() {
    {# Trigger plot resizes when the page dimensions change #}
    window.onresize = function() {
        waitForFinalEvent(function() {
            for(var x in page_plots) {
                Plotly.Plots.resize(page_plots[x]);
            }
        }, 500, "plotly_window_resize")
    };

    {# If the browser fails to load the cached graph image, then instruct it to start the render process #}
    var {{ odr_chart_id }}_tries = 0;
    $("#{{ odr_chart_id }}_Static_GraphWrapper").find("img").on('error', function() {
        var img_id = $(this).attr('id');

        if ( {{ odr_chart_id }}_tries == 0 ) {
            {{ odr_chart_id }}_tries++;

            // Hopefully the graph renderer isn't busy, so try the first reload quickly
            setTimeout( 'ODRGraph_waitForRebuild("' + img_id + '")', 200 );
        }
        else if ( {{ odr_chart_id }}_tries < 5 ) {
            {{ odr_chart_id }}_tries++;

            // If the first reload didn't work, then try again after a delay
            // NOTE: it seems as if the browser doesn't follow the timing "to the letter"...setting
            //  this to a short delay doesn't actually mean the image will load faster
            setTimeout( 'ODRGraph_waitForRebuild("' + img_id + '")', 2000 );
        }
    });

    $("#{{ odr_chart_id }}_Static_GraphWrapper").unbind('click').click(function() {
        var graph_parent = $(this).parent().parent();
        $(this).hide();
        $(graph_parent).find('.DynamicGraphs').show();

        var chart_id = $(graph_parent).find('.ODRDynamicGraph').attr('id');
        window["SetupGraphs_" + chart_id]();
    });
{#
    $(".DynamicGraphs").unbind('click').click(function() {
        var parent = $(this).parent()
        $(this).hide()
        $(parent).find('.StaticGraphs').show()
    });
#}

});

if (!window.ODRGCMSChart) {
    function ODRGCMSChart() {
        this.chart_id = "";

        this.GraphData = function () {
            return ODRGraph_GCMSlineChartPlotly(this, clearPlotlyBars);
        }
    }
}

var SetupGraphs_{{ odr_chart_id }} = function() {
    if (!{{ odr_chart_id }}_initialized) {
        {{ odr_chart_id }}_initialized = true;

        // Create a new GCMS Chart, and set its id
        odr_chart_{{ odr_chart_id }} = new ODRGCMSChart();
        odr_chart_{{ odr_chart_id }}.chart_id = '{{ odr_chart_id }}';
        odr_chart_{{ odr_chart_id }}.data_files = [];

        // Set the file download URL
        var file_url = "{{ path('odr_file_download', {'file_id': '0'}) }}";
        file_url = file_url.substr(0, file_url.length - 1);

        // Build array of file data
        {% for dr_id, file in odr_chart_files %}
            {% if dr_id == target_datarecord_id or target_datarecord_id matches '{^rollup}' %}
            var file = '{{ file.id }}';
            if (file != "") {
            {% for mydr_id, legend in odr_chart_legend %}
                {% if mydr_id == dr_id %}
                    {% set sort_order = datarecord_sortvalues[dr_id] %}
                    odr_chart_{{ odr_chart_id }}.data_files[{{ sort_order }}] = { "url": file_url + file, "legend": "{{ legend }}", "dr_id": {{ dr_id }}, "file_id": {{ file.id }} };
                {% endif %}
            {% endfor %}
            }
            {% endif %}
        {% endfor %}

        // Map remaining options to chart
        {% for o_name, o_value in plugin_options %}
        odr_chart_{{ odr_chart_id }}['{{ o_name }}'] = '{{ o_value }}';
        {% endfor %}
    }

    // Plot selected graph
    odr_chart_{{ odr_chart_id }}.GraphData();
};

var {{ odr_chart_id }}_initialized = false;
var odr_chart_{{ odr_chart_id }} = null;

</script>
{% endspaceless %}
