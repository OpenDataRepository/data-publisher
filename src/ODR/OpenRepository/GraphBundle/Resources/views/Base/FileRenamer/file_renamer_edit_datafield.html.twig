{% spaceless %}

{% set datafield_meta = datafield.dataFieldMeta %}
{% set field_typename = datafield_meta.fieldType.typeName %}
{% set field_typeclass = datafield_meta.fieldType.typeClass %}

{% set datarecordfield = '' %}
{% set valuefield = '' %}
{% set valuefield_value = '' %}
{% if datarecord.dataRecordFields[ datafield.id ] is defined %}
    {% set datarecordfield = datarecord.dataRecordFields[ datafield.id ] %}

    {% if field_typename == "File" %}
        {% set valuefield = datarecordfield.file %}
    {% elseif field_typename == "Image" %}
        {% set valuefield = datarecordfield.image %}
    {% endif %}
{% endif %}

{% if valuefield == '' and (field_typename == 'File' or field_typename == 'Image' or field_typeclass == 'Radio') %}
    {% set valuefield = [] %}
{% endif %}

{% if field_typename == "File" %}
    {% set has_file = false %}
    {% if valuefield|length > 0 %}
        {% set has_file = true %}
    {% endif %}

    <div class="ODRFileDatafield">
        {# Don't want to execute anything special after a file gets deleted #}
        {#{% set file_delete_callback = 'function() {}' %}#}
        {% include "ODROpenRepositoryGraphBundle:Base:FileRenamer/file_renamer_edit_file_datafield.html.twig" with {
            'datafield': datafield,
            'datarecord': datarecord,
            'files': valuefield,

            'datarecord_is_fake': false,
        } %}
    </div>

    <div class="pure-u-1" {% if datafield_meta.allow_multiple_uploads == 0 and has_file == true %}style="display: none;"{% endif %}>
        {# show upload area only if multiples are allowed or nothing has been uploaded yet #}
        {% set target = 'drf_' ~ datarecord.id ~ '_' ~ datafield.id %}
        {% set single_file = true %}
        {% if datafield_meta.allow_multiple_uploads == 1 %}
            {% set single_file = false %}
        {% endif %}
        {% set callback = 'ReloadFileDatafield(' ~ datarecord.id ~ ',' ~ datafield.id ~ ');' %}

        {% include 'ODRAdminBundle:Flow:flow_upload.html.twig' with {
            'target': target,
            'single_file': single_file,
            'upload_type': 'file',
            'datatype_id': datarecord.dataType.id,
            'datarecord_id': datarecord.id,
            'datafield_id': datafield.id,
            'callback': callback
        } %}
    </div>

{% elseif field_typename == "Image" %}
    {% set has_image = false %}

    <div class="ODRFileDatafield_header pure-u-1">
        <i class="Pointer fa fa-refresh fa-lg ODRFileRenamer_rebuild" title="Rebuild the filenames in this Datafield"></i>&nbsp;
        <span title="{{ datafield_meta.description }}">{{ datafield_meta.fieldName }}</span>
    </div>
    <div class="ODRSortableImage pure-u-1">

        {% for image in valuefield %}
            {% set oimage = image.parent %}
            {% set image_ext = oimage.ext %}
            {% set oimage_meta = oimage.imageMeta %}
            {% set image_caption = oimage_meta.caption %}
            {% set image_filename = oimage_meta.originalFileName %}
            {% set has_image = true %}

            <div id="Image_{{ oimage.id }}" class="pure-u-1 pure-u-md-1-{{ datafield_meta.children_per_row }}" rel="{{ image.id }}">    {# rel is the id of the thumbnail, id attr is the id of the full-size image #}
                <div class="pure-u-1">
                    &nbsp;<i class="Cursor tooltip fa fa-calendar fa-lg" title="Uploaded {{ oimage.created|date('Y-m-d') }} by {{ oimage.createdBy|user_string }}"></i>
                    &nbsp;<i class="ODRDeleteImage tooltip Pointer fa fa-lg fa-trash-o" title="Delete Image" rel="{{ oimage.id }}"></i>
                    &nbsp;<i class="ODRPublicImage tooltip Pointer fa fa-lg fa-globe {% if oimage_meta.publicDate|is_public %}ODRActiveIcon{% endif %}" title="{% if not oimage_meta.publicDate|is_public %}Image is not public{% else %}Public since {{ oimage_meta.publicDate|date('Y-m-d') }}{% endif %}" rel="{{ oimage.id }}"></i>
                    &nbsp;<i class="ODRRotateImage tooltip Pointer fa fa-lg fa-rotate-left" title="Rotate Image 90 degrees counter-clockwise" rel="{{ oimage.id }}"></i>
                    &nbsp;<i class="ODRRotateImage tooltip Pointer fa fa-lg fa-rotate-right" title="Rotate Image 90 degrees clockwise" rel="{{ oimage.id }}"></i>
                    &nbsp;
                </div>
                <div class="pure-u-23-24">
                    <a target="_blank" href="{{ path('odr_image_download', {'image_id': oimage.id}) }}" title="{{ image_caption }}">
                        <img class="pure-img" src="{{ path('odr_image_download', {'image_id': image.id}) }}?{{ oimage_meta.updated|date('U') }}" title="{% if image_filename != null %}{{ image_filename }}{% else %}Image_{{ image.id }}.{{ image_ext }}{% endif %}" />
                    </a>
                </div>
            </div>
        {% endfor %}

    </div>

    <div class="pure-u-1">
        {% if datafield_meta.allow_multiple_uploads == 1 or has_image == false %}
            {# show upload area only if multiples are allowed or nothing has been uploaded yet #}
            {% set target = 'drf_' ~ datarecord.id ~ '_' ~ datafield.id %}
            {% set single_file = true %}
            {% if datafield_meta.allow_multiple_uploads == 1 %}
                {% set single_file = false %}
            {% endif %}
            {% set callback = 'ReloadEditDatafield(' ~ datarecord.id ~ ',' ~ datafield.id ~ ');' %}

            {% include 'ODRAdminBundle:Flow:flow_upload.html.twig' with {'target': target, 'single_file': single_file, 'upload_type': 'image', 'datatype_id': datarecord.dataType.id, 'datarecord_id': datarecord.id, 'datafield_id': datafield.id, 'callback': callback} %}
        {% endif %}
    </div>

{% endif %}

<script>
    $(function() {
        $(".ODRFileRenamer_rebuild").unbind('click').click(function() {
            var id_data = $(this).parents('form').first().attr('id').split('_');
            var dr_id = id_data[1];
            var df_id = id_data[2];

            var url = "{{ path('odr_plugin_file_renamer_rebuild', {'dr_id': 0, 'df_id': 0}) }}";
            url = url.substr(0, url.length-3);
            url += dr_id + '/' + df_id;

            $.ajax({
                cache: false,
                type: 'GET',
                url: url,
                dataType: "json",
                success: function (data) {
                    // Reload the datafield so the new filenames show up
                    ReloadEditDatafield(dr_id, df_id);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Don't need to do anything specific on an error
                },
                complete: function (jqXHR) {
                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                    }
                }
            });
        });
    });
</script>

{% endspaceless %}
