{% spaceless %}

{% if subscript_delimiter is not defined %}
    {% set subscript_delimiter = '_' %}
{% endif %}
{% if superscript_delimiter is not defined %}
    {% set superscript_delimiter = '^' %}
{% endif %}

<div id="{{ input_id }}_control" style="float:right">
    <span id="{{ input_id }}_chemistry_trigger" class="ODRChemistryPlugin_button" title="Open the Chemistry Plugin parsing tool"><i class="fa fa-subscript"></i></span>
</div>
<div id="{{ input_id }}_popup" class="ODRChemistryPlugin_popup" title="">    {# NOTE: blank title so the datafield's description doesn't show up throughout the popup #}
    <div class="pure-u-1">
        &nbsp;&nbsp;&nbsp;&nbsp;For reference, the current value in the field is displayed below.
        <input id="{{ input_id }}_hidden" type="hidden" style="display: none;"/>
        {% if field_typename == "Paragraph Text" %}
        <textarea id="{{ input_id }}_original" class="ODRPseudoField ODRChemistryPlugin_textarea pure-u-1" title="The field's current unmodified value." readonly></textarea>
        {% else %}
        <input id="{{ input_id }}_original" class="ODRPseudoField ODRChemistryPlugin_textarea pure-u-1" title="The field's current unmodified value." readonly />
        {% endif %}

        <div class="pure-u-1">
            <label for="{{ input_id }}_trigger_all">
                <input type="radio" id="{{ input_id }}_trigger_all" name="{{ input_id }}_group" />
                Format Entire Field
            </label>
            <label for="{{ input_id }}_trigger_limited">
                <input type="radio" id="{{ input_id }}_trigger_limited" name="{{ input_id }}_group" />
                Only Format Selection
            </label>
        </div>
    </div>


    <div class="pure-u-1 ODRChemistryPlugin_div">
        <div class="pure-u-1">
            &nbsp;&nbsp;&nbsp;&nbsp;The input below displays the Chemistry Plugin's best guess for how the field's value should be formatted.  If needed, you can make more changes to this value before clicking the save button.
        </div>
        <div id="{{ input_id }}_text_warning" style="display:none;">
            <i class="fa fa-exclamation-triangle ODRInputError"></i>&nbsp;The field already appears to be formatted.  If you intend to click the save button, please verify no unexpected changes have been made.
        </div>
        <div id="{{ input_id }}_subscript_warning" style="display: none;">
            <i class="fa fa-exclamation-triangle ODRInputError"></i>&nbsp;The field has at least one instance of a duplicated subscript.
        </div>
        <div id="{{ input_id }}_superscript_warning" style="display: none;">
            <i class="fa fa-exclamation-triangle ODRInputError"></i>&nbsp;The field has at least one instance of a duplicated superscript.
        </div>

        <div class="pure-u-21-24">
            <label for="{{ input_id }}_remove_whitespace" class="pure-u-1 ODRChemistryPlugin_checkbox" title="Will reset any changes!">
                <input type="checkbox" id="{{ input_id }}_remove_whitespace" />&nbsp;Chemistry Plugin removes whitespace?
            </label>

        {% if field_typename == "Paragraph Text" %}
            <textarea id="{{ input_id }}_parsed" class="ODRChemistryPlugin_input pure-u-1" title="The field's value with the suggested changes applied.  You can make more changes if needed."></textarea>
        {% else %}
            <input id="{{ input_id }}_parsed" class="ODRChemistryPlugin_input pure-u-1" type="text" title="The field's value with the suggested changes applied.  You can make more changes if needed." />
        {% endif %}
        </div>

        <div id="{{ input_id }}_insert_buttons" class="pure-u-3-24">
            <div class="pure-u-1 ODRChemistryPlugin_insert_label" title="Inserts the character at the cursor">Insert</div>
            <div class="pure-u-1">
                <button class="ODRChemistryPlugin_insert" title="Middle Dot">·</button>
                <button class="ODRChemistryPlugin_insert" title="Box">◻</button>
                <button class="ODRChemistryPlugin_insert" title="Sum">Σ</button>
                <button class="ODRChemistryPlugin_insert" title="Almost Equal To">≈</button>
            </div>
        </div>
    </div>

    <div class="pure-u-1 ODRChemistryPlugin_div">
        <div class="pure-u-1">
            &nbsp;&nbsp;&nbsp;&nbsp;Below is a preview of what the value will look like outside of Edit mode.
        </div>
        <label for="{{ input_id }}_prettify_toggle" class="pure-u-1 ODRChemistryPlugin_checkbox">
            <input type="checkbox" id="{{ input_id }}_prettify_toggle" />&nbsp;Display as raw HTML
        </label>
        <div id="{{ input_id }}_prettified" class="ODRPseudoField ODRChemistryPlugin_textarea pure-u-23-24" title="A preview of the field's value."></div>
    </div>

    <div class="pure-u-1">
        <button id="{{ input_id }}_manual_save" class="ODRChemistryPlugin_button pure-button pure-button-primary pure-u-3-24">
            <i id="{{ input_id }}_warning" class="fa fa-exclamation-triangle ODRInputError" style="display: none;"></i>
            <i class="fa fa-save"></i>
            Save
        </button>
        <button id="{{ input_id }}_cancel_save" class="ODRChemistryPlugin_button pure-button pure-button-primary pure-u-3-24" title="Close the dialog without saving changes">
            <i class="fa fa-close ODRInputError"></i>
            Cancel
        </button>
    </div>
</div>

<script>
    $(function() {
        // Attempt to intelligently determine whether the "remove whitespace" box should be checked
        let input = $("#{{ input_id }}").val().replaceAll(/\s|&nbsp;/g, ' ');
        let chars = [];
        let num_spaces = 0;
        let len = input.length;
        for (let i = 0; i < len; i++) {
            chars[i] = input.charAt(i);
            if ( chars[i] === ' ' )
                num_spaces++;
        }
        if ( num_spaces <= 4 )
            $("#{{ input_id }}_remove_whitespace").prop('checked', true);

        $("#{{ input_id }}_chemistry_trigger").unbind('click').click(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();

            if ( $("#{{ input_id }}_popup").is(':visible') ) {
                // Popup already visible, close it
                $("#{{ input_id }}_cancel_save").trigger('click');
            }
            else {
                // Popup not visible...close any other open popup first
                $(".ODRChemistryPlugin_popup").each(function(index, elem) {
                    if ( $(elem).is(':visible') )
                        $(elem).find(".fa-close").parent().trigger('click');
                });

                // Set up initial values each time the popup is opened
                let current_value = $("#{{ input_id }}").val();
                $("#{{ input_id }}_hidden").text(current_value);
                $("#{{ input_id }}_original").text(current_value);

                $("#{{ input_id }}_trigger_all").prop('checked', true);

                // Then parse the chemistry...
                if ( ODR_isFormulaFormatted( $("#{{ input_id }}"), '{{ subscript_delimiter }}', '{{ superscript_delimiter }}' ) ) {
                    // Formula appears to be formatted already
                    $("#{{ input_id }}_manual_save").prop('title', 'The formula already appears to be formatted, but clicking here will still save the suggested changes.');
                    $("#{{ input_id }}_warning").show();
                    $("#{{ input_id }}_text_warning").show();
                }
                else {
                    // Formula does not appear to be formatted
                    $("#{{ input_id }}_manual_save").prop('title', 'Save the suggested changes.');
                    $("#{{ input_id }}_warning").hide();
                    $("#{{ input_id }}_text_warning").hide();
                }
                // Regardless of whether it appears to be formatted, parse the formula
                ODR_runChemistryDialog( $("#{{ input_id }}"), $("#{{ input_id }}_remove_whitespace"), $("#{{ input_id }}_parsed"), '{{ subscript_delimiter }}', '{{ superscript_delimiter }}' );

                // ...and show the popup
                $("#{{ input_id }}_popup").show()
                    .offset( $("#{{ input_id }}").offset() )
                    .width( $("#{{ input_id }}").width() + 15 );
                let prettified_div_width = $("#{{ input_id }}_prettified").width();
                $("#{{ input_id }}_parsed")
                    .height( $("#{{ input_id }}").height() );
                    // .width( prettified_div_width - 5 );
                $("#{{ input_id }}_prettified")
                    .width( prettified_div_width - 7 );
            }
        });

        $("#{{ input_id }}_original").unbind('select').select(function() {
            if ( $("#{{ input_id }}_trigger_limited").is(':checked') ) {
                $("#{{ input_id }}_trigger_limited").trigger('change');
            }
        });
        $("#{{ input_id }}_trigger_all").unbind('change').change(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();

            // Keep any selection in the original field visible
            $("#{{ input_id }}_original").focus();

            if ( $(this).is(':checked') ) {
{#
                let input = $("#{{ input_id }}").val().replaceAll(/\s|&nbsp;/g, ' ');
                let chars = [];
                let num_spaces = 0;
                let len = input.length;
                for (let i = 0; i < len; i++) {
                    chars[i] = input.charAt(i);
                    if ( chars[i] === ' ' )
                        num_spaces++;
                }
                if ( num_spaces <= 4 )
                    $("#{{ input_id }}_remove_whitespace").prop('checked', true);
#}
                ODR_runChemistryDialog( $("#{{ input_id }}"), $("#{{ input_id }}_remove_whitespace"), $("#{{ input_id }}_parsed"), '{{ subscript_delimiter }}', '{{ superscript_delimiter }}' );
            }
        });
        $("#{{ input_id }}_trigger_limited").unbind('change').change(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();

            // Keep any selection in the original field visible
            $("#{{ input_id }}_original").focus();

            if ( $(this).is(':checked') ) {
                // Copy the current selection to the hidden element
                let textarea = $("#{{ input_id }}_original");
                let hidden_element = $("#{{ input_id }}_hidden");

                let start_position = $(textarea).prop('selectionStart');
                let end_position = $(textarea).prop('selectionEnd');
                // console.log('start', start_position);  console.log('end', end_position);

                // Extract the pieces before and after the selection...
                let before = $(textarea).val().substring(0, start_position);
                let after = $(textarea).val().substring(end_position);
                // console.log('before', before);  console.log('after', after);

                // ...but only run the chemistry plugin js on the selection itself
                let str = $(textarea).val().substring(start_position, end_position);
                // console.log('str', str);
                $(hidden_element).val(str);

                ODR_runChemistryDialog( hidden_element, $("#{{ input_id }}_remove_whitespace"), $("#{{ input_id }}_parsed"), '{{ subscript_delimiter }}', '{{ superscript_delimiter }}' );

                // Once the chemsitry plugin js finishes...
                let parsed_value = $("#{{ input_id }}_parsed").val();
                // ...splice the modified back between the before/after pieces
                $("#{{ input_id }}_parsed").val(before + parsed_value + after).trigger('paste');
            }
        });

        $("#{{ input_id }}_remove_whitespace").unbind('change').change(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();

            // Keep any selection in the original field visible
            $("#{{ input_id }}_original").focus();

            if ( $("#{{ input_id }}_trigger_all").is(':checked') )
                $("#{{ input_id }}_trigger_all").trigger('change');
            else
                $("#{{ input_id }}_trigger_limited").trigger('change');

        });
        $("#{{ input_id }}_prettify_toggle").unbind('change').change(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();

            // Keep any selection in the original field visible
            $("#{{ input_id }}_original").focus();

            $("#{{ input_id }}_parsed").trigger('keyup');
        });

        $("#{{ input_id }}_parsed").unbind('click').click(function() {
            // If this element is clicked, then assume the user is manually editing the value
            //  ...therefore, the selection in the original doesn't matter
            $("#{{ input_id }}_original").blur();
        });
        $("#{{ input_id }}_insert_buttons").find(".ODRChemistryPlugin_insert").each(function(index,elem) {
            $(elem).unbind('click').click(function(event) {
                // Don't submit the datafield's form
                event.preventDefault();

                // If any of these buttons are clicked, then assume the user is manually editing
                //  the value...therefore, the selection in the original doesn't matter
                $("#{{ input_id }}_original").blur();

                let char = $(this).text();
                // Don't insert the unicode abbreviation of this sequence
                if ( char === '◻' )
                    char = '[box]';

                let textarea = $("#{{ input_id }}_parsed");
                let position = $(textarea).prop('selectionStart');
                // console.log('position', position);

                let before = $(textarea).val().substring(0, position);
                let after = $(textarea).val().substring(position);
                // console.log('before', before, 'after', after);

                $(textarea).val(before + char + after);
                $(textarea).focus().prop('selectionStart', position+char.length).prop('selectionEnd', position+char.length);
                $(textarea).trigger('paste');
            });
        });

        $("#{{ input_id }}_manual_save").unbind('click').click(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();
            $("#{{ input_id }}_popup").hide();

            // Copy the parsed value back into the datafield's form and trigger a save
            $("#{{ input_id }}")
                .val( $("#{{ input_id }}_parsed").val() )
                .trigger('keyup');
        });
        $("#{{ input_id }}_cancel_save").unbind('click').click(function(event) {
            // Don't submit the datafield's form
            event.preventDefault();
            $("#{{ input_id }}_popup").hide();
            // Delete this element's style attribute so it is guaranteed to resize
            $("#{{ input_id }}_prettified").removeAttr('style');
        });

        $("#{{ input_id }}_parsed").unbind('change').unbind('keyup').unbind('paste').on('keyup paste', function() {
            // Warn about duplicate delimiters
            ODR_hasDuplicatedDelimiters('{{ input_id }}', '{{ subscript_delimiter }}', '{{ superscript_delimiter }}');

            // Display the "prettified" version of the formula
            let prettified = ODR_prettifyChemicalFormula($("#{{ input_id }}_parsed").val(), {% if field_typename == "Paragraph Text" %}true{% else %}false{% endif %}, '{{ subscript_delimiter }}', '{{ superscript_delimiter }}' );
            if ( $("#{{ input_id }}_prettify_toggle").is(':checked') )
                $("#{{ input_id }}_prettified").text(prettified);
            else
                $("#{{ input_id }}_prettified").html(prettified);
        });
    });
</script>
{% endspaceless %}
