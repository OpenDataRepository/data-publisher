{% spaceless %}

    {% set is_datatype_admin = false %}
    {% if datatype_permissions[target_datatype.id] is defined and datatype_permissions[target_datatype.id]['dt_admin'] == 1 %}
        {% set is_datatype_admin = true %}
    {% endif %}

    <div class="pure-u-1 pure-u-md-1-3 ODRContentWrapper">
        <div class="ODRThemeElement">
            <div class="ODRInnerBox">
                {% if intent == 'searching' %}
                    {% include 'ODROpenRepositorySearchBundle:Default:searchpage_markdown.html.twig' with {
                        'datatype': target_datatype,
                        'position': 'upper',
                        'is_datatype_admin': is_datatype_admin,
                    } %}
                {% endif %}

                <form id="search_form" class="pure-form pure-u-sm-1-2 pure-u-md-7-8">
                    <input type="hidden" id="datatype_id" name="dt_id" value="{{ target_datatype.id }}"/>
                    <input type="hidden" id="selected_theme_id" value="{{ preferred_theme_id }}"/>

                    <fieldset id="search_top">
                        <div>
                            <div class="pure-u-1">
                                <a class="ODRSearchHelper Pointer pure-u-1" onclick="changeSearch();">Open Advanced
                                    Search</a>
                            </div>
                            <div class="pure-u-1">
                                <button class="pure-button pure-button" type="button" onclick="doReset();">Reset
                                </button>
                                <button class="pure-button pure-button-primary" type="submit">Search</button>
                            </div>
                        </div>
                    </fieldset>

                    <fieldset class="ODRSearchBoxWrapper">
                        <div class="pure-u-1">
                            <label for="textbox_general"
                                   class="pure-u-1 pure-u-sm-1 pure-u-md-1-1 pure-u-lg-1-1 pure-u-xl-1-2">
                                Search for:
                                <i class="fa fa-lg fa-question-circle Pointer ODRSearchHelp" style="padding-left:5px;"
                                   title="Search Help"></i>
                                <i class="fa fa-lg fa-info-circle Pointer ODRGeneralSearchList"
                                   style="padding-left:5px;" title="List of Datafields that will be searched"></i>
                                {% if is_datatype_admin %}
                                    <i class="fa fa-lg fa-edit Pointer ODREditSearchNotes" style="padding-left:5px;"
                                       title="Edit the search page notes."></i>
                                {% endif %}
                            </label>
                            <input id="textbox_general"
                                   class="pure-u-1 pure-u-sm-1 pure-u-md-1-1 pure-u-lg-1-1 pure-u-xl-1-2" type="text" name="gen"
                                   {% if search_string is defined and search_string != '' %}value="{{ search_string }}"{% endif %} {% if searchable_datafields|length == 0 %}disabled="disabled" title="This datatype has no searchable datafields"{% endif %} />
                            <input type="hidden" id="search_type" value="basic"/>
                        </div>

                        <div class="pure-u-1" id="ODRSearchHelp_div" style="display:none;">
                            {% include 'ODROpenRepositorySearchBundle:Default:search_help.html.twig' %}
                        </div>
                        <div class="pure-u-1" id="ODRGeneralSearchList_div" class="ODRTableWrap" style="display:none;">
                            {% include 'ODROpenRepositorySearchBundle:Default:search_datafield_list.html.twig' with {
                                'target_datatype': target_datatype,
                                'searchable_datafields': searchable_datafields,
                                'related_datatypes': related_datatypes,
                                'logged_in': logged_in,
                            } %}
                        </div>
                    </fieldset>

                    {# render target datatype first #}
                    <fieldset>
                        <div class="ODRAdvSearch_header {#pure-u-1#}">
                            <span>{{ target_datatype.getshortname }}</span>
                            <span class="ODRAdvSearch_caret"><i class="fa fa-lg fa-caret-up"></i></span>
                        </div>
                        <div class="ODRAdvSearch_default">
                            {% if searchable_datafields[ target_datatype.id ] is defined %}
                                {% for datafield in searchable_datafields[ target_datatype.id ] %}
                                    {% if datafield.getsearchable == 2 or datafield.getsearchable == 3 %}
                                        {% include 'ODROpenRepositorySearchBundle:Default:search_datafield.html.twig' with { 'datafield': datafield } %}
                                    {% endif %}
                                {% endfor %}
                            {% endif %}

                            {# created/modified by, created/modified date, public status of child datarecord #}
                            {% include 'ODROpenRepositorySearchBundle:Default:search_metadata.html.twig' with {
                                'datatype_id': target_datatype.id,
                                'user_list': user_list,
                                'datatype_permissions': datatype_permissions,
                                'is_top_level': 1
                            } %}
                        </div>
                    </fieldset>

                    {# render children of target datatype next #}
                    {% for child_datatype_id, datafield_list in related_datatypes['child_datatypes'] %}
                        {% if target_datatype.id != child_datatype_id and (searchable_datafields[child_datatype_id] is defined or logged_in == true) %}
                            <fieldset>
                                <div class="ODRAdvSearch_header {#pure-u-1#}">
                                    <span>{{ related_datatypes['datatype_names'][ child_datatype_id ] }}</span>
                                    <span class="ODRAdvSearch_caret"><i class="fa fa-lg fa-caret-up"></i></span>
                                </div>
                                {#<div class="pure-u-1-24"></div>#}
                                <div class="ODRAdvSearch_content {#pure-u-23-24#} pure-u-1">
                                    {% if searchable_datafields[child_datatype_id] is defined %}
                                        {% for datafield in searchable_datafields[child_datatype_id] %}
                                            {% if datafield.getsearchable == 2 or datafield.getsearchable == 3 %}
                                                {% include 'ODROpenRepositorySearchBundle:Default:search_datafield.html.twig' with { 'datafield': datafield } %}
                                            {% endif %}
                                        {% endfor %}
                                    {% endif %}

                                    {# created/modified by, created/modified date, public status of child datarecord #}
                                    {% include 'ODROpenRepositorySearchBundle:Default:search_metadata.html.twig' with {
                                        'datatype_id': child_datatype_id,
                                        'user_list': user_list,
                                        'datatype_permissions': datatype_permissions,
                                        'is_top_level': 0
                                    } %}
                                </div>
                            </fieldset>
                        {% endif %}
                    {% endfor %}

                    {# render linked datatypes last #}
                    {% for linked_datatype_id in related_datatypes['linked_datatypes'] %}
                        {% if searchable_datafields[linked_datatype_id] is defined %}
                            <fieldset>
                                <div class="ODRAdvSearch_header {#pure-u-1#}">
                                    <span>{{ related_datatypes['datatype_names'][ linked_datatype_id ] }}</span>
                                    <span class="ODRAdvSearch_caret"><i class="fa fa-lg fa-caret-up"></i></span>
                                </div>
                                {#<div class="pure-u-1-24"></div>#}
                                <div class="ODRAdvSearch_content {#pure-u-23-24#} pure-u-1">
                                    {% for datafield in searchable_datafields[ linked_datatype_id ] %}
                                        {% if datafield.getsearchable == 2 or datafield.getsearchable == 3 %}
                                            {% include 'ODROpenRepositorySearchBundle:Default:search_datafield.html.twig' with { 'datafield': datafield } %}
                                        {% endif %}
                                    {% endfor %}

                                    {# created/modified by, created/modified date, public status of datarecord #}
                                    {# don't display metadata for linked datatypes...for now... #}
                                </div>
                            </fieldset>
                        {% endif %}
                    {% endfor %}

                    <fieldset>
                        <div class="pure-u-1">
                            <a class="ODRSearchHelper Pointer pure-u-1" onclick="changeSearch();">Open Advanced
                                Search</a>
                        </div>
                        <div class="pure-u-1">
                            <button class="pure-button pure-button" type="button" onclick="doReset();">Reset</button>
                            <button class="pure-button pure-button-primary" type="submit">Search</button>
                        </div>
                    </fieldset>
                </form>

                {% if intent == 'searching' %}
                    {% include 'ODROpenRepositorySearchBundle:Default:searchpage_markdown.html.twig' with {
                        'datatype': target_datatype,
                        'position': 'lower',
                        'is_datatype_admin': is_datatype_admin,
                    } %}
                {% endif %}
            </div>
        </div>
    </div>

    <div class="pure-u-1 pure-u-md-2-3" id="ODRSearchContent">
        <img id="odr_bg" class="pure-img"/>
    </div>

    <script>

        $(function () {
            $("#search_top").hide();
            $(".ODRInput").prop('disabled', true);

            // Prevent normal form behavior
            $("#search_form").unbind('submit').submit(function (event) {
                event.preventDefault();
                doSearch();
            });

            {% if search_string is defined and search_string != '' %}
            // No need to set up rest of form, just do an immediate search
            doSearch();
            {% endif %}

            {% if is_datatype_admin %}

            function toggleEditMode() {
                var edit = $(".ODRSearchPageNotes_edit");
                var rendered = $(".ODRSearchPageNotes_rendered");
                var wrapper_upper = $("#ODRSearchPageNotes_upper");
                var wrapper_lower = $("#ODRSearchPageNotes_lower");
                var upper = $('#upper_rendered');
                var lower = $('#lower_rendered');

                if(edit.hasClass('ODRHidden')) {
                    // Hide rendered divs
                    rendered.addClass('ODRHidden');

                    // Show wrapper and editor
                    wrapper_upper.removeClass('ODRHidden');
                    wrapper_lower.removeClass('ODRHidden');
                    edit.removeClass('ODRHidden')
                }
                else {
                    // Show portions with data
                    if(lower.html() !== "") {
                        lower.removeClass('ODRHidden');
                    }
                    else {
                        wrapper_lower.addClass('ODRHidden')
                    }
                    if(upper.html() !== "") {
                        upper.removeClass('ODRHidden');
                    }
                    else {
                        wrapper_upper.addClass('ODRHidden')
                    }
                    edit.addClass('ODRHidden')
                }
            }
            $(".ODREditSearchNotes").unbind('click').click(function () {
                toggleEditMode();
            })

            $(".ODRSearchPageNotes_save").unbind('click').click(function () {

                var url = '{{ path('odr_save_search_notes', {'datatype_id': target_datatype.id}) }}';

                $("#upper_value").val($("#upper_raw").val());
                $("#lower_value").val($("#lower_raw").val());

                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: 'json',
                    data: $("#ODRSearchPageNotes_form").serialize(),
                    success: function (data, textStatus, jqXHR) {
                        // Initialize markdown-it plugin
                        var md = window.markdownit();
                        md.disable(['table', 'strikethrough', 'blockquote']);

                        // Update the display divs with the new text
                        var markdown_text = '';
                        markdown_text = md.render($("#upper_raw").val());
                        $("#upper_rendered").html(markdown_text);
                        markdown_text = md.render($("#lower_raw").val());
                        $("#lower_rendered").html(markdown_text);

                        // Show display divs again
                        toggleEditMode();

                        // Update previous values in case there's an error later on...
                        $("#upper_old").val($("#upper_raw").val());
                        $("#lower_old").val($("#lower_raw").val());
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Revert back to previous values on an error
                        $("#upper_raw").val($("#upper_old").val());
                        $("#upper_value").val($("#upper_old").val());

                        $("#lower_raw").val($("#lower_old").val());
                        $("#lower_value").val($("#lower_old").val());
                    },
                    complete: function (jqXHR, textStatus) {
                        // Get the xdebugToken from response headers
                        var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                        // If the Sfjs object exists
                        if (typeof Sfjs !== "undefined") {
                            // Grab the toolbar element
                            var currentElement = $('.sf-toolbar')[0];

                            // Load the data of the given xdebug token into the current toolbar wrapper
                            Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                        }
                    }
                });
            });
            {% endif %}

            // Setup accordions
            $(".ODRAdvSearch_header").unbind('click').click(function () {
                var content_div = $(this).next();

                if ($(content_div).hasClass('ODRCollapse')) {
                    // Show all textfields
                    $(content_div).removeClass('ODRCollapse');
                    $(content_div).children().each(function () {
                        $(this).slideDown(200);
                    });

                    $(this).find('i').removeClass('fa-caret-down').addClass('fa-caret-up');
                }
                else {
                    // Hide all empty textfields
                    $(content_div).addClass('ODRCollapse');
                    $(content_div).find('.ODRInput').not('.ODRDatePicker').each(function () {
                        if ($(this).val() == '')
                            $(this).parent().slideUp(200);
                    });

                    // Datepickers need special treatment...
                    $(content_div).find(".ODRDatePicker[name$='_s']").each(function () {
                        var id = $(this).attr('id');
                        var id_data = id.split('_');

                        var end_id = '';
                        if (id_data.length == 3)
                            end_id = '#' + id_data[0] + '_' + id_data[1] + '_end';
                        else if (id_data.length == 4)
                            end_id = '#' + id_data[0] + '_' + id_data[1] + '_' + id_data[2] + '_end';

                        // If nothing in start and nothing in end, hide this datafield
                        if ($(this).val() == '' && $(end_id).val() == '')
                            $(this).parent().slideUp(200);
                    });

                    // Radio fields also need special treatment...
                    $(content_div).find('.ODRRadioSearchDiv').each(function () {
                        // Search for a selection made in this radio field
                        var selected = false;
                        $(this).find('i').each(function () {
                            if ($(this).hasClass('fa-check') || $(this).hasClass('fa-ban')) {
                                selected = true;
                                return false;
                            }
                        });

                        // If nothing selected, hide this datafield
                        if (!selected)
                            $(this).parent().slideUp(200);
                    });

                    $(this).find('i').removeClass('fa-caret-up').addClass('fa-caret-down');
                }
            });

            // Open first accordion (should be target datatype)
            $(".ODRAdvSearch_header").trigger('click');
            $(".ODRAdvSearch_default").prev().trigger('click');
            $(".ODRAdvSearch_header").parent().hide();

            // File/Image stuff
            $(".ODRFileDatafieldName").unbind('change keyup paste').on('keyup paste', function () {
                var datafield_id_data = $(this).attr('id').split(/_/);
                var datafield_id = datafield_id_data[1];

                var value = $(this).val();
                if (value != '')
                    $("#datafield_" + datafield_id + "_ex").prop('selectedIndex', '1').change();
            });

            $(".ODRFileDatafieldExist").unbind('change').change(function () {
                var datafield_id_data = $(this).attr('id').split(/_/);
                var datafield_id = datafield_id_data[1];

                var value = $(this).val();
                if (value != 1)
                    $("#datafield_" + datafield_id + "_fn").val('');
            });

            // Tristate checkbox
            $(".ODRTristateCheckbox").unbind('click').click(function () {
                // Grab data about the option being clicked
                var icon = $(this).children('i').first();
                var input = $(this).children('input').first();
                var radio_option_id = $(input).attr('rel');

                if ($(icon).hasClass('fa-check')) {
                    // Currently selected, change to deselected
                    $(this).attr('title', 'Search for Datarecords where this option is unselected');
                    $(icon).removeClass('fa-check').addClass('fa-ban');
                    $(input).val('-' + radio_option_id);
                }
                else if ($(icon).hasClass('fa-ban')) {
                    // Currently deselected, change to blank
                    $(this).removeAttr('title');
                    $(icon).removeClass('fa-ban');
                    $(input).val('');
                }
                else {
                    {#
                                    // If only a single radio/select, uncheck all other options
                                    if ( $(this).attr('rel') == 'single') {
                                        $(this).parent().parent().find('.fa-check').each(function() {
                                            $(this).parent().removeAttr('title');
                                            $(this).removeClass('fa-check');
                                            $(this).next().val('');
                                        });
                                    }
                    #}
                    // Currently blank, change to selected
                    $(this).attr('title', 'Search for Datarecords where this option is selected');
                    $(icon).addClass('fa-check');
                    $(input).val(radio_option_id);
                }
            });

            // Shortcut to select all options of a Multiple Radio/Select datafield
            $(".ODRSelectAll").unbind('click').click(function () {
                var datafield_id = $(this).attr('rel');

                $("#Input_" + datafield_id).find('i.fa').each(function () {
                    if (!$(this).hasClass('fa-check')) {
                        $(this).parent().attr('title', 'Search for Datarecords where this option is selected');
                        $(this).removeClass('fa-ban').addClass('fa-check');
                        $(this).next().val($(this).next().attr('rel'));
                    }
                });
            });

            // Shortcut to deselect all options of a Radio/Select datafield
            $(".ODRDeselectAll").unbind('click').click(function () {
                var datafield_id = $(this).attr('rel');

                $("#Input_" + datafield_id).find('i.fa').each(function () {
                    if (!$(this).hasClass('fa-ban')) {
                        $(this).parent().attr('title', 'Search for Datarecords where this option is unselected');
                        $(this).removeClass('fa-check').addClass('fa-ban');
                        $(this).val('-' + $(this).next().attr('rel'));
                    }
                });
            });

            // Shortcut to clear all options of a Radio/Select datafield
            $(".ODRClearAll").unbind('click').click(function () {
                var datafield_id = $(this).attr('rel');

                $("#Input_" + datafield_id).find('i.fa').each(function () {
                    if ($(this).hasClass('fa-check') || $(this).hasClass('fa-ban')) {
                        $(this).parent().removeAttr('title');
                        $(this).removeClass('fa-ban fa-check');
                        $(this).next().val('');
                    }
                });
            });

            $("#textbox_general").focus();

            // Set up datepicker datafields
            $(".ODRDatePicker").datepicker({
                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true,
                dateFormat: 'yy-mm-dd',
                yearRange: '1800:+10',

                onSelect: function (dateText, inst) {
                    var field_id = $(this).attr('rel');

                    var start_date = $("#" + field_id + "_start").val();
                    var end_date = $("#" + field_id + "_end").val();
                    if (end_date != '' && start_date != '') {
                        if (start_date > end_date)
                            $("#" + field_id + "_end").datepicker("setDate", start_date);
                        else if (end_date < start_date)
                            $("#" + field_id + "_start").datepicker("setDate", end_date);

                        $("#" + field_id + "_start").datepicker("option", "maxDate", end_date);
                        $("#" + field_id + "_end").datepicker("option", "minDate", start_date);
                    }
                    else if (start_date == '') {
                        $("#" + field_id + "_start").datepicker("option", "maxDate", end_date);
                        $("#" + field_id + "_end").datepicker("option", "minDate", null);
                    }
                    else if (end_date == '') {
                        $("#" + field_id + "_start").datepicker("option", "maxDate", null);
                        $("#" + field_id + "_end").datepicker("option", "minDate", start_date);
                    }

                },
                onClose: function () {
                    $(this).blur();
                },
                beforeShow: function (input, inst) {
                }
            });

            // Slide out the help menu
            $(".ODRSearchHelp").unbind('click').click(function () {
                $("#ODRSearchHelp_div").slideToggle();
            });

            $(".ODRGeneralSearchList").unbind('click').click(function () {
                $("#ODRGeneralSearchList_div").slideToggle();
            });
        });

        function changeSearch() {
            if ($("#search_type").val() === 'basic') {
                // Show all advanced search datafields
                $("#search_type").val('advanced');
                $(".ODRSearchHelper").each(function () {
                    $(this).html('Close Advanced Search');
                });

                $(".ODRAdvSearch_header").parent().removeAttr('style'); // show() uses display:block..don't want that
                $(".ODRInput").prop('disabled', false);

                $("#search_top").show();
            }
            else {
                // Hide all advanced search datafields
                $("#search_type").val('basic');
                $(".ODRSearchHelper").each(function () {
                    $(this).html('Open Advanced Search');
                });

                $(".ODRAdvSearch_header").parent().hide();
                $(".ODRInput").prop('disabled', true);

                $("#search_top").hide();
            }
        }

        function doReset() {
            // radio fields
            $(".ODRTristateCheckbox").removeAttr('title');
            $(".ODRTristateCheckbox > .fa").removeClass('fa-check').removeClass('fa-ban');
            $(".ODRTristateCheckbox > input").val('');

            // general field
            $("#textbox_general").val('');

            // select fields
            $("select.ODRInput").val('');

            // every other field
            $("input.ODRInput").not(".hidden").each(function () {
                if ($(this).hasClass('ODRDatePicker')) {
                    $(this).datepicker('setDate', '');
                }
                else {
                    $(this).val('');
                }
            });

        }

        function doSearch() {

            // Values for Radio datafields need to be manually set
            $(".ODRRadioSearchDiv").each(function () {

                var data = $(this).attr('id').split(/_/);
                var datafield_id = data[1];

                var str = '';
                var first_selection = true;
                var has_selections = false;

                $(this).find('input').each(function () {
                    // Grab the radio_option_id
                    var value = $(this).val().trim();
                    if (value == '')
                        return;

                    has_selections = true;

                    if (!first_selection) {
                        str += ',' + value;
                    }
                    else {
                        first_selection = false;
                        str += value;
                    }
                });

                if (has_selections)
                    $("#datafield_" + datafield_id).val(str);
            });

            // Ensure the two parts of the search criteria for a file/image match
            $(".ODRFileDatafieldName").each(function () {
                var df_id_data = $(this).attr('id').split(/_/);
                var df_id = df_id_data[1];

                var value = $(this).val().trim();
                var exist_value = $("#datafield_" + df_id + "_ex option:selected").val();

                if (exist_value == '') {
                    $(this).val('');
                }
                else if (exist_value == 0) {
                    $(this).val('""');   // If user wanted datarecords that do not have files/images, set this datafield's value to empty string
                }
                else if (exist_value == 1 && value == '') {
                    $(this).val('!""');  // If user wanted datarecords that do have files/images, but didn't specify a filename, set this datafield's value to 'not empty'
                }
            });

            // Request search results
            var url = '{{ path('odr_search_results') }}';

            $("#loading-overlay").fadeIn('fast');
            $("#loading").html('<span>Searching...</span>');
            $("#loading").fadeIn('fast');

            // TODO - need to communicate which theme to use...

            $.ajax({
                type: 'POST',
                url: url,
                dataType: 'json',
                data: $("#search_form").serialize(),
                success: function (data, textStatus, jqXHR) {
                    {% if intent == "searching" %}
                    // Overwrite any currently existing tab id, since a new search was performed
                    if (window.sessionStorage.getItem('odr_tab_id')) {
                        // Tell the server to stop storing data for the old tab
                        // TODO - transfer page length?
                        var url = '{{ path('odr_datatables_state_destroy', { 'odr_tab_id': '' } ) }}';
                        url += window.sessionStorage.getItem('odr_tab_id');

                        $.ajax({
                            type: 'GET',
                            url: url,
                            dataType: 'json',
                        });
                    }
                    window.sessionStorage.setItem('odr_tab_id', '{{ odr_tab_id }}');

                    // Now that the search has been performed and cached, render the results
                    var url = '{{ path('odr_search_render', { 'search_theme_id': 0, 'search_key': '', 'offset': '1' } ) }}';
                    url = url.substr(0, url.length - 2);
                    url += $("#selected_theme_id").val() + '/' + data.d.search_key + '/1';

                    // This should end up forcing an AJAX load by way of the hashchange event in navigation.html.twig...
                    UpdateURL(url);

                    {% elseif intent == "linking" %}
                    var url = '{{ path('odr_search_render', { 'search_theme_id': 0, 'search_key': '', 'offset': '1', 'intent': 'linking' } ) }}';
                    url = url.substr(0, url.length - 10);
                    url += data.d.search_key + '/1/linking';

                    // Render the html into the search_content div on this page
                    $.ajax({
                        type: 'GET',
                        url: url,
                        dataType: 'json',
                        success: function (data, textStatus, jqXHR) {
                            $(".search_content").html(data.d.html);
                        }
                    });
                    {% endif %}
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Don't need to do anything specific on an error
                },
                complete: function (jqXHR, textStatus) {
                    $("#loading-overlay").fadeOut('fast');
                    $("#loading").html('<span>Loading...</span>');
                    $("#loading").fadeOut('fast');

                    // Get the xdebugToken from response headers
                    var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                    // If the Sfjs object exists
                    if (typeof Sfjs !== "undefined") {
                        // Grab the toolbar element
                        var currentElement = $('.sf-toolbar')[0];

                        // Load the data of the given xdebug token into the current toolbar wrapper
                        Sfjs.load(currentElement.id, '/app_dev.php/_wdt/' + xdebugToken);
                    }
                }
            });
        }
    </script>

    <script>
        $(window).on('load', function () {
            {% if background_image_id != null %}
            // After the rest of the page is loaded, start loading the bg image
            var url = "{{ path('odr_image_download', {'image_id': 0 }) }}";
            url = url.substring(0, url.length - 1);
            url += "{{ background_image_id }}";

            if (window.location.hash === '')
                $("#odr_bg").attr('src', url);
            {% endif %}

            {% if intent == 'searching' %}
            // Setup IntroJS Walkthrough
            jQuery('#ODRHelpButton')
                .attr('data-step', '1')
                .attr('data-intro', 'Welcome to the ODR Help System.  This system will guide you through the features of this page.<br /><br />  For quicker navigation, use your left and right arrow keys to go through the tutorial.');
            jQuery('#textbox_general')
                .attr('data-step', '2')
                .attr('data-intro', 'This is the "general search" box. Enter terms in this field that you want to find in any of the available search fields.');
            jQuery('.ODRGeneralSearchList')
                .attr('data-step', '3')
                .attr('data-intro', 'Clicking this icon brings up a panel that lists the fields in this database that will be searched when using the "general search" box.');
            jQuery('.ODRSearchHelp')
                .attr('data-step', '4')
                .attr('data-intro', 'All search fields can make use of operators and logic to build more refined searches.  Clicking this icon presents instructions on using operators to build more complex searches.');
            jQuery('.ODRSearchHelper:first')
                .attr('data-step', '5')
                .attr('data-intro', 'Click this link to open or close "Advanced Search".  Advanced search allows you to refine searches to specific fields or field selections.');

            // Initialize the help button
            jQuery('#ODRHelpButton').unbind('click').click(function () {
                introJs()
                    .onbeforechange(introJsStepBeforeChangeHandler)
                    .onbeforeexit(introJsExitHandler)
                    .start();
            });
            {% endif %}
        });

        {% if intent == 'searching' %}
        var introjs_starting_search_type = "basic";

        function introJsExitHandler() {
            if (introjs_starting_search_type === "basic" && $("#search_type").val() !== 'basic') {
                changeSearch()
            }
        }

        function introJsStepBeforeChangeHandler(elem) {
            if (jQuery(elem).hasClass("ODRGeneralSearchList")) {
                if (!jQuery("#ODRGeneralSearchList_div").is(":visible")) {
                    jQuery(elem).click();
                }
            }
            if (jQuery(elem).hasClass("ODRSearchHelp")) {
                if (!jQuery("#ODRSearchHelp_div").is(":visible")) {
                    jQuery(elem).click();
                }
                if (jQuery("#ODRGeneralSearchList_div").is(":visible")) {
                    jQuery(".ODRGeneralSearchList").click();
                }
            }
            if (jQuery(elem).hasClass("ODRSearchHelper")) {
                if (jQuery("#ODRSearchHelp_div").is(":visible")) {
                    jQuery(".ODRSearchHelp").click();
                }
                if ($("#search_type").val() === 'basic') {
                    introjs_starting_search_type = "basic";
                    changeSearch();
                }
                else {
                    introjs_starting_search_type = "advanced";
                }
            }
        }
        {% endif %}
    </script>

{% endspaceless %}
