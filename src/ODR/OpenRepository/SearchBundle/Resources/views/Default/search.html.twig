{% spaceless %}

<div class="pure-u-1 pure-u-md-1-3">

    <div class="pure-u-sm-1-4"></div>
    <form id="search_form" class="pure-form pure-u-sm-1-2 pure-u-md-7-8">
{#
    {% if searchable_datafields|length == 0 %}
        <strong>This DataType has no searchable DataFields.</strong>
    {% else %}
#}
        <input type="hidden" id="datatype_id" name="dt_id" value="{{ target_datatype.id }}" />

        <fieldset>
            <div id="search_top">
                <div class="pure-u-1">
                    <input type="hidden" id="search_type" value="basic"/>
                    <a class="ODRSearchHelper Pointer pure-u-1" onclick="changeSearch();">Open Advanced Search</a>
                </div>
                <div class="pure-u-1">
                    <button class="pure-button pure-button" type="button" onclick="doReset();">Reset</button>
                    <button class="pure-button pure-button-primary" type="submit">Search</button>
                </div>
            </div>
        </fieldset>

        <fieldset>
            <div class="pure-u-1">
                <label for="textbox_general" class="pure-u-1-3">Search for: <i class="fa fa-lg fa-question-circle Pointer ODRSearchHelp"></i></label>
                <input id="textbox_general" class="pure-u-2-3" type="text" name="gen" {% if search_string is defined and search_string != '' %}value="{{ search_string }}"{% endif %} {% if searchable_datafields|length == 0 %}disabled="disabled" title="This datatype has no searchable datafields"{% endif %} />
            </div>

            <div class="pure-u-1" id="ODRSearchHelp_div" style="display:none;">
                {% include 'ODROpenRepositorySearchBundle:Default:search_help.html.twig' %}
            </div>
        </fieldset>

        {# render target datatype first #}
        <fieldset>
            <div class="ODRAdvSearch_header {#pure-u-1#}">
                <span>{{ target_datatype.getshortname }}</span>
                <span class="ODRAdvSearch_caret"><i class="fa fa-lg fa-caret-up"></i></span>
            </div>
            <div class="ODRAdvSearch_default">
            {% if searchable_datafields[ target_datatype.id ] is defined %}
                {% for datafield in searchable_datafields[ target_datatype.id ] %}
                    {% if datafield.getsearchable == 2 or datafield.getsearchable == 3 %}
                        {% include 'ODROpenRepositorySearchBundle:Default:search_datafield.html.twig' with { 'datafield': datafield } %}
                    {% endif %}
                {% endfor %}
            {% endif %}

            {# created/modified by, created/modified date, public status of child datarecord #}
            {% include 'ODROpenRepositorySearchBundle:Default:search_metadata.html.twig' with {
                'datatype_id': target_datatype.id,
                'user_list': user_list,
                'datatype_permissions': datatype_permissions,
                'is_top_level': 1
            } %}
            </div>
        </fieldset>

        {# render children of target datatype next #}
        {% for child_datatype_id, datafield_list in related_datatypes['child_datatypes'] %}
            {% if target_datatype.id != child_datatype_id and (searchable_datafields[child_datatype_id] is defined or logged_in == true) %}
            <fieldset>
                <div class="ODRAdvSearch_header {#pure-u-1#}">
                    <span>{{ related_datatypes['datatype_names'][ child_datatype_id ] }}</span>
                    <span class="ODRAdvSearch_caret"><i class="fa fa-lg fa-caret-up"></i></span>
                </div>
                {#<div class="pure-u-1-24"></div>#}
                <div class="ODRAdvSearch_content {#pure-u-23-24#} pure-u-1">
                {% if searchable_datafields[child_datatype_id] is defined %}
                    {% for datafield in searchable_datafields[child_datatype_id] %}
                        {% if datafield.getsearchable == 2 or datafield.getsearchable == 3 %}
                            {% include 'ODROpenRepositorySearchBundle:Default:search_datafield.html.twig' with { 'datafield': datafield } %}
                        {% endif %}
                    {% endfor %}
                {% endif %}

                {# created/modified by, created/modified date, public status of child datarecord #}
                {% include 'ODROpenRepositorySearchBundle:Default:search_metadata.html.twig' with {
                    'datatype_id': child_datatype_id,
                    'user_list': user_list,
                    'datatype_permissions': datatype_permissions,
                    'is_top_level': 0
                } %}
                </div>
            </fieldset>
            {% endif %}
        {% endfor %}

        {# render linked datatypes last #}
        {% for linked_datatype_id in related_datatypes['linked_datatypes'] %}
            {% if searchable_datafields[linked_datatype_id] is defined %}
            <fieldset>
                <div class="ODRAdvSearch_header {#pure-u-1#}">
                    <span>{{ related_datatypes['datatype_names'][ linked_datatype_id ] }}</span>
                    <span class="ODRAdvSearch_caret"><i class="fa fa-lg fa-caret-up"></i></span>
                </div>
                {#<div class="pure-u-1-24"></div>#}
                <div class="ODRAdvSearch_content {#pure-u-23-24#} pure-u-1">
                {% for datafield in searchable_datafields[ linked_datatype_id ] %}
                    {% if datafield.getsearchable == 2 or datafield.getsearchable == 3 %}
                        {% include 'ODROpenRepositorySearchBundle:Default:search_datafield.html.twig' with { 'datafield': datafield } %}
                    {% endif %}
                {% endfor %}

                {# created/modified by, created/modified date, public status of datarecord #}
                {# don't display metadata for linked datatypes...for now... #}
{#
                {% include 'ODROpenRepositorySearchBundle:Default:search_metadata.html.twig' with {
                    'datatype_id': target_datatype.id,
                    'user_list': user_list,
                    'datatype_permissions': datatype_permissions,
                    'is_top_level': 0
                } %}
#}

                </div>
            </fieldset>
            {% endif %}
        {% endfor %}


        <fieldset>
            <div class="pure-u-1">
                <input type="hidden" id="search_type" value="basic"/>
                <a class="ODRSearchHelper Pointer pure-u-1" onclick="changeSearch();">Open Advanced Search</a>
            </div>
            <div class="pure-u-1">
                <button class="pure-button pure-button" type="button" onclick="doReset();">Reset</button>
                <button class="pure-button pure-button-primary" type="submit">Search</button>
            </div>
        <fieldset>
{#
    {% endif %}
#}

    </form>
    <div class="pure-u-sm-1-4"></div>
</div>

<div class="pure-u-1 pure-u-md-2-3">
    <img id="odr_bg" class="pure-img" />
</div>

<script>

    $(function() {
        $("#search_top").hide();
        $(".ODRInput").prop('disabled', true);

        // Prevent normal form behavior
        $("#search_form").unbind('submit').submit(function(event) {
            event.preventDefault();
            doSearch();
        });

{% if search_string is defined and search_string != '' %}
        // No need to set up rest of form, just do an immediate search
        doSearch();
{% endif %}


        // Setup accordions
        $(".ODRAdvSearch_header").unbind('click').click(function() {
            var content_div = $(this).next();

            if ( $(content_div).hasClass('ODRCollapse') ) {
                // Show all textfields
                $(content_div).removeClass('ODRCollapse');
                $(content_div).children().each(function() {
                    $(this).slideDown(200);
                });

                $(this).find('i').removeClass('fa-caret-down').addClass('fa-caret-up');
            }
            else {
                // Hide all empty textfields
                $(content_div).addClass('ODRCollapse');
                $(content_div).find('.ODRInput').not('.ODRDatePicker').each(function() {
                    if ( $(this).val() == '' )
                        $(this).parent().slideUp(200);
                });

                // Datepickers need special treatment...
                $(content_div).find(".ODRDatePicker[name$='_s']").each(function() {
                    var id = $(this).attr('id');
                    var id_data = id.split('_');

                    var end_id = '';
                    if (id_data.length == 3)
                        end_id = '#' + id_data[0] + '_' + id_data[1] + '_end';
                    else if (id_data.length == 4)
                        end_id = '#' + id_data[0] + '_' + id_data[1] + '_' + id_data[2] + '_end';

                    // If nothing in start and nothing in end, hide this datafield
                    if ( $(this).val() == '' && $(end_id).val() == '' )
                        $(this).parent().slideUp(200);
                });

                // Radio fields also need special treatment...
                $(content_div).find('.ODRRadioSearchDiv').each(function() {
                    // Search for a selection made in this radio field
                    var selected = false;
                    $(this).find('i').each(function() {
                        if ( $(this).hasClass('fa-check') || $(this).hasClass('fa-ban') ) {
                            selected = true;
                            return false;
                        }
                    });

                    // If nothing selected, hide this datafield
                    if ( !selected )
                        $(this).parent().slideUp(200);
                });

                $(this).find('i').removeClass('fa-caret-up').addClass('fa-caret-down');
            }
        });

        // Open first accordion (should be target datatype)
        $(".ODRAdvSearch_header").trigger('click');
        $(".ODRAdvSearch_default").prev().trigger('click');
        $(".ODRAdvSearch_header").parent().hide();

        // File/Image stuff
        $(".ODRFileDatafieldName").unbind('change keyup paste').on('keyup paste', function() {
            var datafield_id_data = $(this).attr('id').split(/_/);
            var datafield_id = datafield_id_data[1];

            var value = $(this).val();
            if ( value != '' )
                $("#datafield_" + datafield_id + "_ex").prop('selectedIndex', '1').change();
        });

        $(".ODRFileDatafieldExist").unbind('change').change(function() {
            var datafield_id_data = $(this).attr('id').split(/_/);
            var datafield_id = datafield_id_data[1];

            var value = $(this).val();
            if ( value == '0' )
                $("#datafield_" + datafield_id + "_fn").val('');
        });

        // Tristate checkbox
        $(".ODRTristateCheckbox").unbind('click').click(function() {
            // Grab data about the option being clicked
            var icon = $(this).children('i').first();
            var input = $(this).children('input').first();
            var radio_option_id = $(input).attr('rel');

            if ( $(icon).hasClass('fa-check') ) {
                // Currently selected, change to deselected
                $(this).attr('title', 'Search for Datarecords where this option is unselected');
                $(icon).removeClass('fa-check').addClass('fa-ban');
                $(input).val( '-' + radio_option_id );
            }
            else if ( $(icon).hasClass('fa-ban') ) {
                // Currently deselected, change to blank
                $(this).removeAttr('title');
                $(icon).removeClass('fa-ban');
                $(input).val('');
            }
            else {
{#
                // If only a single radio/select, uncheck all other options
                if ( $(this).attr('rel') == 'single') {
                    $(this).parent().parent().find('.fa-check').each(function() {
                        $(this).parent().removeAttr('title');
                        $(this).removeClass('fa-check');
                        $(this).next().val('');
                    });
                }
#}
                // Currently blank, change to selected
                $(this).attr('title', 'Search for Datarecords where this option is selected');
                $(icon).addClass('fa-check');
                $(input).val( radio_option_id );
            }
        });

        // Shortcut to select all options of a Multiple Radio/Select datafield
        $(".ODRSelectAll").unbind('click').click(function() {
            var datafield_id = $(this).attr('rel');

            $("#Input_" + datafield_id).find('i.fa').each(function() {
                if ( !$(this).hasClass('fa-check') ) {
                    $(this).parent().attr('title', 'Search for Datarecords where this option is selected');
                    $(this).removeClass('fa-ban').addClass('fa-check');
                    $(this).next().val( $(this).next().attr('rel') );
                }
            });
        });

        // Shortcut to deselect all options of a Radio/Select datafield
        $(".ODRDeselectAll").unbind('click').click(function() {
            var datafield_id = $(this).attr('rel');

            $("#Input_" + datafield_id).find('i.fa').each(function() {
                if ( !$(this).hasClass('fa-ban') ) {
                    $(this).parent().attr('title', 'Search for Datarecords where this option is unselected');
                    $(this).removeClass('fa-check').addClass('fa-ban');
                    $(this).val( '-' + $(this).next().attr('rel') );
                }
            });
        });

        // Shortcut to clear all options of a Radio/Select datafield
        $(".ODRClearAll").unbind('click').click(function() {
            var datafield_id = $(this).attr('rel');

            $("#Input_" + datafield_id).find('i.fa').each(function() {
                if ( $(this).hasClass('fa-check') || $(this).hasClass('fa-ban') ) {
                    $(this).parent().removeAttr('title');
                    $(this).removeClass('fa-ban fa-check');
                    $(this).next().val('');
                }
            });
        });

        $("#textbox_general").focus();

        // Set up datepicker datafields
        $(".ODRDatePicker").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd',
            yearRange: '1800:+10',

            onSelect: function(dateText, inst) {
                var field_id = $(this).attr('rel');

                var start_date = $("#" + field_id + "_start").val();
                var end_date = $("#" + field_id + "_end").val();
//alert(start_date + ' ' + end_date);
                if (end_date != '' && start_date != '') {
                    if (start_date > end_date)
                        $("#" + field_id + "_end").datepicker( "setDate", start_date );
                    else if (end_date < start_date)
                        $("#" + field_id + "_start").datepicker( "setDate", end_date );

                    $("#" + field_id + "_start").datepicker( "option", "maxDate", end_date );
                    $("#" + field_id + "_end").datepicker( "option", "minDate", start_date );
                }
                else if (start_date == '') {
                    $("#" + field_id + "_start").datepicker( "option", "maxDate", end_date );
                    $("#" + field_id + "_end").datepicker( "option", "minDate", null );
                }
                else if (end_date == '') {
                    $("#" + field_id + "_start").datepicker( "option", "maxDate", null );
                    $("#" + field_id + "_end").datepicker( "option", "minDate", start_date );
                }

            },
            onClose: function() {
                $(this).blur();
            },
            beforeShow: function(input, inst) {
// http://stackoverflow.com/questions/4598850/how-do-you-add-buttons-to-a-jquery-datepicker-in-the-button-panel
            }
        });

        // Slide out the help menu
        $(".ODRSearchHelp").unbind('click').click(function() {
            $("#ODRSearchHelp_div").slideToggle();
        });
    });

    function changeSearch() {
        if ( $("#search_type").val() === 'basic' ) {
            // Show all advanced search datafields
            $("#search_type").val('advanced');
            $(".ODRSearchHelper").each(function() {
                $(this).html('Close Advanced Search');
            });

            $(".ODRAdvSearch_header").parent().removeAttr('style'); // show() uses display:block..don't want that
            $(".ODRInput").prop('disabled', false);

            $("#search_top").show();
        }
        else {
            // Hide all advanced search datafields
            $("#search_type").val('basic');
            $(".ODRSearchHelper").each(function() {
                $(this).html('Open Advanced Search');
            });

            $(".ODRAdvSearch_header").parent().hide();
            $(".ODRInput").prop('disabled', true);

            $("#search_top").hide();
        }
    }

    function doReset() {
        // radio fields
        $(".ODRTristateCheckbox").removeAttr('title');
        $(".ODRTristateCheckbox > .fa").removeClass('fa-check').removeClass('fa-ban');
        $(".ODRTristateCheckbox > input").val('');

        // general field
        $("#textbox_general").val('');

        // select fields
        $("select.ODRInput").val('');

        // every other field
        $("input.ODRInput").not(".hidden").each(function() {
            if ( $(this).hasClass('ODRDatePicker') ) {
                $(this).datepicker('setDate', '');
            }
            else {
                $(this).val('');
            }
        });

    }

    function doSearch() {
        //
        var search_key = '';
        var prev_field = '';
        var divider = '|';

        var datatype_id = $("#datatype_id").val();
        search_key = $("#datatype_id").attr('name') + '=' + datatype_id;
        
        if ( $("#textbox_general").val() !== '' )
            search_key += divider + $("#textbox_general").attr('name') + '=' + encodeURIComponent( $("#textbox_general").val() );

        $("#search_form .ODRInput").each(function() {
            var name = $(this).attr('name');
            var type = $(this).attr('type');
            var value = $(this).attr('value');
//            var datatype_id = $(this).attr('rel');

            if ( $(this).hasClass('ODRFileDatafieldName') ) {
                var df_id_data = $(this).attr('id').split(/_/);
                var df_id = df_id_data[1];

                var exist_value = $("#datafield_" + df_id + "_ex").val();
                if ( exist_value == '') {
                    /* do nothing */
                }
                else if ( exist_value == 0 ) {
                    value = '""';   // If user wanted datarecords that do not have files/images, set this datafield's value to empty string
                }
                else if ( exist_value == 1 && value == '' ) {
                    value = '!""';  // If user wanted datarecords that do have files/images, but didn't specify a filename, set this datafield's value to 'not empty'
                }
            }

            // Don't want empty values clogging the string
            if (name == undefined || value == '')
                return;

            value = encodeURIComponent(value);

            if (search_key != '')
                search_key += divider;
            search_key += name + '=' + value;

            {#$('#dt_' + datatype_id + '_pub').removeClass('ODRSearchDisabled');#}
        });
        $(".ODRRadioSearchDiv").each(function() {

            var data = $(this).attr('id').split(/_/);
            var datafield_id = data[1];

            var str = '';
            if (search_key != '')
                str = divider;
            str += datafield_id + '=';

            var first_selection = true;
            var has_selections = false;

            $(this).find('input').each(function() {
                // Grab the radio_option_id
                var value = $(this).attr('value');
                if (value == '')
                    return;

                has_selections = true;

                if (!first_selection) {
                    str += ',' + value;
                }
                else {
                    first_selection = false;
                    str += value;
                }
            });

            if (has_selections)
                search_key += str;
        });
{#
        $(".ODRDatatype_require_public").each(function() {
            if ( !$(this).hasClass('ODRSearchDisabled') ) {
                var name = $(this).attr('name');
                var value = $(this).attr('value');

                if (search_key != '')
                    search_key += divider;
                search_key += name + '=' + value;
            }
        });
#}
//alert( 'search_key: ' + search_key );
//return;

        // Request search results
        var url = '{{ path( 'odr_search_results', { 'search_key': '' } ) }}';
        url += search_key;

        $("#loading-overlay").fadeIn();
        $("#loading").html('<span>Searching...</span>');
        $("#loading").fadeIn();

        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
//data: search_key,
            success: function(data, textStatus, jqXHR) {
                if (data.r == 0) {
                {% if source == "searching" %}
                    // Overwrite any currently existing tab id, since a new search was performed
                    if ( window.sessionStorage.getItem('odr_tab_id') ) {
                        // Tell the server to stop storing data for the old tab
                        // TODO - transfer page length?
                        var url = '{{ path('odr_datatables_state_destroy', { 'odr_tab_id': '' } ) }}';
                        url += window.sessionStorage.getItem('odr_tab_id');

                        $.ajax({
                            type: 'GET',
                            url: url,
                            dataType: 'json',
                        });
                    }
                    window.sessionStorage.setItem('odr_tab_id', '{{ odr_tab_id }}');

                    // Now that the search has been performed and cached, render the results
                    var url = '{{ path('odr_search_render', { 'search_key': '', 'offset': '1' } ) }}';
                    url = url.substr(0, url.length-1);
                    url += '/' + search_key + '/1';

                    // This should end up forcing an AJAX load by way of the hashchange event in navigation.html.twig...
                    UpdateURL(url);

                {% elseif source == "linking" %}
                    var url = '{{ path('odr_search_render', { 'search_key': '', 'offset': '1', 'source': 'linking' } ) }}';
                    url = url.substr(0, url.length-10);
                    url += search_key + '/1/linking';

                    // Render the html into the search_content div on this page
                    $.ajax({
                        type: 'GET',
                        url: url,
                        dataType: 'json',
                        success: function(data, textStatus, jqXHR) {
                            $(".search_content").html( data.d.html );
                        }
                    });
                {% endif %}
                }
                else {
                    alert( data.d );
                }
            },
            complete: function(jqXHR, textStatus) {
                $("#loading-overlay").fadeOut();
                $("#loading").fadeOut();
                $("#loading").html('<span>Loading...</span>');

                // Get the xdebugToken from response headers
                var xdebugToken = jqXHR.getResponseHeader('X-Debug-Token');

                // If the Sfjs object exists
                if (typeof Sfjs !== "undefined") {
                    // Grab the toolbar element
                    var currentElement = $('.sf-toolbar')[0];

                    // Load the data of the given xdebug token into the current toolbar wrapper
                    Sfjs.load(currentElement.id, '/app_dev.php/_wdt/'+ xdebugToken);
                }
            }
        });
    }
</script>

{% if background_image_id != null %}
<script>
$(window).load(function() {    
    // After the rest of the page is loaded, start loading the bg image
    var url = "{{ path('odr_image_download', {'image_id': 0 }) }}";
    url = url.substring(0, url.length-1);
    url += "{{ background_image_id }}";

    $("#odr_bg").attr('src', url);
});
</script>
{% endif %}

{% endspaceless %}
