# ----------------------------------------
odr_search_box:
    path:  /edit/search_box/{target_datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchbox }
    requirements:
        target_datatype_id: \d+

#
# Support for old routes and GET routes
#
odr_legacy_search_results:
    path: /search/results/{search_key}
    defaults: { _controller:ODROpenRepositorySearchBundle:Default:legacy_search }
    requirements:
        search_key: '[^\/]*'

odr_legacy_render:
    path: /search/render/{search_key}/{offset}/{source}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:legacy_render, offset: 1, source: 'searching' }
    requirements:
        search_key: '[^\/]*'
        offset: \d+
        source: searching|linking
#
# END Support for old routes and GET routes
#

odr_search_results:
    path: /search/results
    defaults: { _controller:ODROpenRepositorySearchBundle:Default:search }
    methods: [ POST ]

odr_search_render:
    path: /search/display/{search_theme_id}/{search_key}/{offset}/{intent}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:render, offset: 1, intent: 'searching' }
    requirements:
        search_theme_id: \d+
        search_key: '[a-zA-Z0-9\-\_]*'
        offset: \d+
        intent: searching|linking|linking_ajax

odr_default_search_render:
    path: /search/render_default/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:defaultrender }
    requirements:
        datatype_id: \d+

# ----------------------------------------

# ----------------------------------------
# Alternative API access routes
odr_search_api_get_datatype_single:
    path:  /{search_slug}/api/info.{_format}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getDatatypeExport, search_slug: '', _format: json }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'    # any 32 charactera alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter
        _format: '|json|xml'

odr_search_api_get_datarecord_list:
    path:  /{search_slug}/api/records.{_format}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getDatarecordList, search_slug: '', _format: json }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
        _format: '|json|xml'

odr_search_api_get_datarecord_single:
    path:  /{search_slug}/api/records/{datarecord_id}.{_format}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getDatarecordExport, search_slug: '', _format: json }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
        datarecord_id: \d+
        _format: '|json|xml'



# API for cross template search
odr_search_api_get_template_by_uuid_no_format:
    path: /api/{version}/search/template/{template_uuid}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getTemplate, version: 'v1', _format: 'json' }
    methods: [ GET ]
    requirements:
        version: 'v\d+'
        template_uuid: '[a-z0-9]+'

odr_search_api_get_template_by_uuid:
    path: /api/{version}/search/template/{template_uuid}.{_format}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getTemplate, version: 'v1' }
    methods: [ GET ]
    requirements:
        version: 'v\d+'
        template_uuid: '[a-z0-9]+'
        _format: '|json|xml'

odr_search_api_get_field_stats_by_uuid:
    path: /api/{version}/search/field/stats/{template_uuid}/{template_field_uuid}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:search_field_stats, _format: 'json'}
    methods: [ GET ]
    requirements:
        version: 'v1'
        template_uuid: '[a-z0-9]+'
        template_field_uuid: '[a-z0-9]+'

odr_search_api_get_field_by_uuid:
    path: /api/{version}/search/field/{template_field_uuid}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getfield }
    methods: [ GET ]
    requirements:
        version: 'v1'
        template_field_uuid: '[a-z0-9]+'

odr_search_api_get_record_no_format:
    path: /api/{version}/search/record/{datarecord_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getrecord, _format: 'json' }
    methods: [ GET ]
    requirements:
        version: 'v1'
        datarecord_id: \d+

odr_search_api_get_record:
    path: /api/{version}/search/record/{datarecord_id}.{_format}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:getrecord, _format: 'json', version: 'v1' }
    methods: [ GET ]
    requirements:
        version: 'v1'
        datarecord_id: \d+
        _format: '|json|xml'

odr_search_api_general_search:
    path: /api/{version}/search/{search_key}/{limit}/{offset}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:search, limit: 0, offset: 0, _format: 'json'}
    methods: [ GET ]
    requirements:
        version: 'v1'
        search_key: '[a-zA-Z0-9\=]+'
        limit: \d+
        offset: \d+
        _format: '|json|xml'

odr_search_api_general_search_post:
    path: /api/{version}/search/{limit}/{offset}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:search, limit: 0, offset: 0, _format: 'json'}
    methods: [ POST ]
    requirements:
        version: 'v1'
        limit: \d+
        offset: \d+
        _format: '|json|xml'

# ----------------------------------------

# ----------------------------------------
# These routes MUST be the absolute last routes imported by ODR due to generic terms...they'll typically override any route imported later
odr_search_immediate:
    path:  /{search_slug}/{search_string}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchpage }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'    # any 32 charactera alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter

odr_search:
    path:  /{search_slug}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchpage, search_slug: '', search_string: '' }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'


odr_search_find_landing:
    path:  /admin/find/landing/{datatype_unique_id}
    defaults: { _controller: ODRAdminBundle:Datatype:find_landing }
    requirements:
        datatype_unique_id: '[a-zA-Z0-9]+'
