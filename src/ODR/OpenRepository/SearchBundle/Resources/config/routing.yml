# ----------------------------------------
# SearchSidebarController routes
odr_reload_search_overlay_datafield:
    path:  /search/reload/datafield/{datafield_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:reloadsearchdatafield }
    requirements:
        datafield_id:  \d+
odr_reload_search_sidebar:
    path:  /search/reload_sidebar/{search_key}/{intent}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:reloadsearchsidebar }
    requirements:
        search_key: '[a-zA-Z0-9\-\_]*'
        intent: 'searching|linking|stored_search_keys|'
odr_reload_inverse_search_key:
    path:  /search/reload_inverse_search_key/{search_theme_id}/{search_key}/{inverse_datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:reloadinversesearchkey, inverse_datatype_id: '-1' }
    requirements:
        search_theme_id: \d+
        search_key: '[a-zA-Z0-9\-\_]*'
        inverse_datatype_id: \d+|

odr_get_available_sidebar_layouts:
    path:  /view/getlayouts/{datatype_id}/{intent}/{search_key}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:getavailablesidebarlayouts, search_key: '' }
    requirements:
        datatype_id:  \d+
        intent:  '|searching|linking'
        search_key: '[a-zA-Z0-9\-\_]*'

odr_create_sidebar_layout:
    path: /design/create_layout/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:createsidebarlayout }
    requirements:
        datatype_id: \d+

odr_modify_sidebar_layout:
    path:  /design/modify_layout/{datatype_id}/{sidebar_layout_id}/{intent}/{search_key}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:modifysidebarlayout, intent: '', search_key: '' }
    requirements:
        datatype_id:  \d+
        sidebar_layout_id:  \d+
        intent:  '|searching|linking'
        search_key: '[a-zA-Z0-9\-\_]*'

odr_save_sidebar_layout_properties:
    path:  /view/layout_properties/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:savesidebarlayoutproperties }
    requirements:
        sidebar_layout_id: \d+

odr_sidebar_layout_searchable_toggle:
    path:  /design/togglesearchable/{datafield_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:sidebarsearchabletoggle }
    requirements:
        datafield_id: \d+

odr_toggle_sidebar_layout_shared:
    path:  /design/togglelayoutshared/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:sidebarlayoutshared }
    requirements:
        sidebar_layout_id:  \d+

odr_make_default_sidebar_layout:
    path:  /design/makedefaultlayout/{intent}/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:setdatabasedefaultlayout }
    requirements:
        intent:  '|searching|linking'
        sidebar_layout_id:  \d+

odr_unset_default_sidebar_layout:
    path:  /design/unsetdefaultlayout/{intent}/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:unsetdatabasedefaultlayout }
    requirements:
        intent:  '|searching|linking'
        sidebar_layout_id:  \d+
odr_unset_personal_sidebar_layout:
    path:  /design/unsetpersonallayout/{intent}/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:unsetpersonaldefaultlayout }
    requirements:
        intent:  '|searching|linking'
        sidebar_layout_id:  \d+

odr_delete_sidebar_layout:
    path:  /design/delete_layout/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:deletesidebarlayout }
    requirements:
        sidebar_layout_id:  \d+

odr_clone_sidebar_layout:
    path:  /design/copy_layout/{sidebar_layout_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:clonelayout }
    requirements:
        sidebar_layout_id:  \d+

odr_design_toggle_datafield_layout_status:
    path: /design/layout/datafieldstatus
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:datafieldlayoutstatus }
    methods: [ POST ]
odr_design_save_datafield_order_layout:
    path:  /design/layout/datafieldorder
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchSidebar:datafieldorder }
    methods: [ POST ]


# ----------------------------------------
# ODRRemoteSearch routes
odr_remote_search_start:
    path: /remote_search
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:start }

odr_remote_search_select:
    path: /remote_search/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:select }
    requirements:
        datatype_id: \d+

odr_remote_search_config:
    path: /remote_search/config
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:config }
    methods: [ POST ]

odr_remote_search_download:
    path: /remote_search/download/{minified}
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:download }
    requirements:
        minified: 0|1

odr_remote_search_examples:
    path: /remote_search/example/{type}
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:examples }
    requirements:
        type: '|basic1|basic2|basic3|defaults|alt'


# ----------------------------------------
# Support for old routes and GET routes
#
odr_legacy_search_results:
    path: /search/results/{search_key}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:legacy_search }
    requirements:
        search_key: '[^\/]*'

odr_searchtest_get_results:
    path: /searchtest/{search_key}/{limit}/{offset}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:searchTemplateGetTest, version: 'v3' }
    methods: [ GET ]
    requirements:
        search_key: '[^\/]*'
        limit: '\d+'
        offset: '\d+'

odr_legacy_render:
    path: /search/render/{search_key}/{offset}/{source}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:legacy_render, offset: 1, source: 'searching' }
    requirements:
        search_key: '[^\/]*'
        offset: \d+
        source: 'searching|linking|'
#
# END Support for old routes and GET routes
#

odr_search_results:
    path: /search/results
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:search }
    methods: [ POST ]

odr_inline_link_search:
    path:  /search/inline_link
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:inlinelinksearch, offset: 0, limit: 1000000 }
    methods: [ POST ]

odr_search_render:
    path: /search/display/{search_theme_id}/{search_key}/{offset}/{intent}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:render, offset: 1, intent: 'searching' }
    requirements:
        search_theme_id: \d+
        search_key: '[a-zA-Z0-9\-\_]*'
        offset: \d+
        intent: 'searching|linking|'

odr_default_search_render:
    path: /search/render_default/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:defaultrender }
    requirements:
        datatype_id: \d+

#
#
#
# API and Custom Functions for integration
#
#
#
odr_random_network_search:
    path: /network
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:networkSearchAPI, dataset_uuid: 'eb0451ce86d7f6cd20505170ea69', offset: 0, limit: 1000000, version: 'v5' }
    methods: [ GET ]
    requirements:
        version: 'v\d+'
        dataset_uuid: '^[a-z0-9]+$'
        limit: '\d+'
        offset: '\d+'

# IMA List Rebuilder
odr_ima_list_rebuild:
    path: /ima_list_rebuild
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:IMAListRebuild, version: 'v4', recent: false }
    methods: [ GET ]
    requirements:
        version: 'v\d+'

odr_ima_list_update:
    path: /ima_list_update
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:IMAListRebuild, version: 'v4', recent: true }
    methods: [ GET ]
    requirements:
        version: 'v\d+'

odr_build_rruff_files:
    path: /build_rruff_files
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:updateRRUFFFiles, version: 'v4', recent: false }
    methods: [ GET ]
    requirements:
        version: 'v\d+'

odr_update_rruff_files:
    path: /update_rruff_files
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:updateRRUFFFiles, version: 'v4', recent: true }
    methods: [ GET ]
    requirements:
        version: 'v\d+'

# need a realtime seed call - reseed specific database now (recent changes)
odr_search_seed_elastic:
    path: /elastic
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:seedElastic, version: 'v4' }
    methods: [ GET ]
    requirements:
        version: 'v\d+'

odr_search_seed_elastic_record:
    path: /elastic/record/{record_uuid}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:seedElasticRecord, version: 'v5' }
    methods: [ GET ]
    requirements:
        record_uuid: '^[a-z0-9]+$'
        version: 'v\d+'

odr_precache_search:
    path:  /precache/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:SearchCache:preCacheRecords }
    requirements:
        datatype_id: \d+

#
#
#
# END API and Custom Functions for integration
#
# ----------------------------------------

# ----------------------------------------
# NOTE: odr.search_slug_blacklist parameter is defined in SearchBundle/Resources/config/services.yml

# These routes MUST be the absolute last routes imported by ODR due to generic terms...they'll typically override any route imported later
odr_search_immediate:
    path:  /{search_slug}/{search_string}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchpage }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
        # any 32 character alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter

odr_search:
    path:  /{search_slug}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchpage, search_slug: '', search_string: '' }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
        # any 32 character alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter

odr_home:
    path: /
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:home }