# ----------------------------------------
# ODRRemoteSearch routes
odr_remote_search_start:
    path: /remote_search
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:start }

odr_remote_search_select:
    path: /remote_search/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:select }
    requirements:
        datatype_id: \d+

odr_remote_search_config:
    path: /remote_search/config
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:config }
    methods: [ POST ]

odr_remote_search_download:
    path: /remote_search/download/{minified}
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:download }
    requirements:
        minified: 0|1

odr_remote_search_examples:
    path: /remote_search/example/{type}
    defaults: { _controller: ODROpenRepositorySearchBundle:Remote:examples }
    requirements:
        type: '|basic1|basic2|basic3|defaults|alt'


# ----------------------------------------
# Support for old routes and GET routes
#
odr_legacy_search_results:
    path: /search/results/{search_key}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:legacy_search }
    requirements:
        search_key: '[^\/]*'

odr_searchtest_get_results:
    path: /searchtest/{search_key}/{limit}/{offset}
    defaults: { _controller: ODROpenRepositorySearchBundle:Facade:searchTemplateGetTest, version: 'v3' }
    methods: [ GET ]
    requirements:
        search_key: '[^\/]*'
        limit: '\d+'
        offset: '\d+'

odr_legacy_render:
    path: /search/render/{search_key}/{offset}/{source}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:legacy_render, offset: 1, source: 'searching' }
    requirements:
        search_key: '[^\/]*'
        offset: \d+
        source: 'searching|linking|'
#
# END Support for old routes and GET routes
#

odr_search_results:
    path: /search/results
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:search }
    methods: [ POST ]

odr_inline_link_search:
    path:  /search/inline_link
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:inlinelinksearch }
    methods: [ POST ]

odr_search_render:
    path: /search/display/{search_theme_id}/{search_key}/{offset}/{intent}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:render, offset: 1, intent: 'searching' }
    requirements:
        search_theme_id: \d+
        search_key: '[a-zA-Z0-9\-\_]*'
        offset: \d+
        intent: 'searching|linking|'

odr_default_search_render:
    path: /search/render_default/{datatype_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:defaultrender }
    requirements:
        datatype_id: \d+

odr_reload_search_overlay_datafield:
    path:  /search/reload/datafield/{datafield_id}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:reloadsearchdatafield }
    requirements:
        datafield_id:  \d+

odr_reload_search_sidebar:
    path:  /search/reload_sidebar/{force_rebuild}/{search_key}/{intent}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:reloadsearchsidebar }
    requirements:
        force_rebuild: 0|1
        search_key: '[a-zA-Z0-9\-\_]*'
        intent: 'searching|linking|stored_search_keys|'

# ----------------------------------------

# ----------------------------------------
# NOTE: odr.search_slug_blacklist parameter is defined in SearchBundle/Resources/config/services.yml

# These routes MUST be the absolute last routes imported by ODR due to generic terms...they'll typically override any route imported later
odr_search_immediate:
    path:  /{search_slug}/{search_string}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchpage }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
        # any 32 character alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter

odr_search:
    path:  /{search_slug}
    defaults: { _controller: ODROpenRepositorySearchBundle:Default:searchpage, search_slug: '', search_string: '' }
    requirements:
        search_slug: '(?!%odr.search_slug_blacklist%)[a-zA-Z0-9_\-]{0,32}'
        # any 32 character alphanumeric string that isn't on the blacklist defined in the odr.search_slug_blacklist parameter
