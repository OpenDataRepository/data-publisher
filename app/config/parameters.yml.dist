parameters:
    database_driver: pdo_mysql
    database_host: localhost
    database_port: null
    database_name: odr_master
    database_user: odr_master
    database_password: [[ ENTER DATABASE PASSWORD HERE ]]
    mailer_transport: smtp
    mailer_host: localhost
    mailer_user: null
    mailer_password: null
    locale: en
    secret: [[ ENTER RANDOM KEY HERE - Text String ]]


    #
    # Wordpress Integration variables
    #

    # Is this a Wordpress-integrated Installation
    odr_wordpress_integrated: false

    # This is used to generate redirects and file download links in the site
    # NOTE - no protocol, and no trailing forward slash  e.g. "//odr.io"
    wordpress_site_baseurl: "[[ enter wordpress integration url here ]]"

    # Determine if advanced search is shown on default results page
    use_advanced_search: true

    # Default search results limit
    default_search_results_limit: 100

    # Use search overlay
    use_search_overlay: true

    #
    # END Wordpress Integration variables
    #

    #
    # Elastic Search Configuration
    # database_uuids: ['ias9lasdf8jsadflss', '9dsfasfdasdfks',...]
    #
    elastic_dataset_uuids: [(Bracketed array of databse uuids)]

    #
    # END Elastic Search Configuration
    #


    # This is used to generate redirects and file download links in the site
    # NOTE - no protocol, and no trailing forward slash  e.g. "//odr.io"
    site_baseurl: [[ ENTER URL OF ODR DOMAIN HERE ]]

    # ODR needs to store certain temporary files outside of a web-accessible path, and /tmp isn't
    #  guaranteed to work across multiple users (because of security concerns, most likely...)
    odr_tmp_directory: "%kernel.root_dir%/tmp"

    # ODR stores file directory paths in the database as "uploads/files/File_<id>.<ext>"
    # This parameter needs to point to the parent directory of that path
    odr_web_directory: "%kernel.root_dir%/../web"

    # This needs to point to the directory that stores ODR's events, so the PluginsController can
    #  verify that plugins are using valid events
    odr_events_directory: "%kernel.root_dir%/../src/ODR/AdminBundle/Component/Event"

    # This needs to point to the base directory for the render plugin php implementation files, so
    #  the PluginsController can determine which plugins are available on the server
    odr_plugin_basedir: "%kernel.root_dir%/../src/ODR/OpenRepository/GraphBundle/Plugins"

    # This needs to point to the same directory as "odr_plugin_basedir", but uses backslashes so the
    #  render plugin config files can point to the correct php classes
    # NOTE - This should NOT have a trailing backslash or be quoted
    odr_plugin_base_classpath: ODR\OpenRepository\GraphBundle\Plugins

    # This directory is used by APIController::addfileAction() for when a POST request wants to
    #  "upload" files already on the server...need to ensure this directory has a+wrx permissions,
    #  because the process running the controller action tends to be different than the process that
    #  actually "uploads" the files...
    uploaded_files_path: '/tmp/odr_uploaded_files'

    memcached.servers:
        -
            host: 127.0.0.1
            port: 11211
    memcached_key_prefix: odr_master         # If the physical server handles more than a single instance of ODR, then each instance of ODR must have a different memcached_key_prefix
    session_memcached_expire: 3600
    session_memcached_prefix: odr_master
    session_memcached_host: 127.0.0.1
    session_memcached_port: 11211

    beanstalk_api_key: [[ ENTER RANDOM KEY HERE - Text String ]]

    jupyterhub_config:
        use_jupyterhub: false    # set to true to enable jupyterhub integration
        jupyterhub_baseurl: [[ ENTER URL OF JUPYTERHUB DOMAIN HERE ]]     # This url MUST NOT have a trailing forward slash
        api_key: [[ ENTER RANDOM KEY HERE - Text String ]]
        bridge_token: [[ ENTER RANDOM KEY HERE - Text String ]]
